"use strict";(self.webpackChunkonsenui_v2_react_minimum=self.webpackChunkonsenui_v2_react_minimum||[]).push([[8179],{60803:(t,e,a)=>{function r(t,e){t.accDescr&&e.setAccDescription?.(t.accDescr),t.accTitle&&e.setAccTitle?.(t.accTitle),t.title&&e.setDiagramTitle?.(t.title)}a.d(e,{S:()=>r}),(0,a(6009).K2)(r,"populateCommonDb")},68179:(t,e,a)=>{a.d(e,{diagram:()=>H});var r=a(60803),n=a(51830),l=(a(62434),a(74299),a(91412),a(97529),a(78839),a(91206),a(80389)),o=(a(1265),a(33615),a(40057)),i=(a(25070),a(772)),s=(a(8605),a(6009)),d=[],c=[...d],p=i.UI.visual,g=(0,s.K2)((()=>(0,o.$t)({...p,...(0,i.zj)().visual})),"getConfig"),x={getPages:(0,s.K2)((()=>c),"getPages"),addPage:(0,s.K2)((t=>{c.push(t)}),"addPage"),getConfig:g,clear:(0,s.K2)((()=>{(0,i.IU)(),c=[...d]}),"clear"),setAccTitle:i.SV,getAccTitle:i.iN,setDiagramTitle:i.ke,getDiagramTitle:i.ab,getAccDescription:i.m7,setAccDescription:i.EI},u=(0,s.K2)((t=>{(0,r.S)(t,x);for(const e of t.pages){const t=e.subDiagrams.map((t=>{switch(t.diagramType){case"array":return{type:"array",orientation:t.orientation,title:t.title,showIndex:t.showIndex,label:t.label,elements:t.elements.map((t=>({value:t.value,color:t.color,arrow:void 0!==t.arrowLabel&&null!==t.arrowLabel,arrowLabel:t.arrowLabel})))};case"matrix":return{type:"matrix",title:t.title,rows:t.rows.map((t=>({elements:t.elements.map((t=>({value:t.value,color:t.color})))}))),showIndex:t.showIndex,label:t.label};case"stack":return{type:"stack",orientation:t.orientation,title:t.title,showIndex:t.showIndex,label:t.label,size:t.size,elements:t.elements.map((t=>({value:t.value,color:t.color,arrow:void 0!==t.arrowLabel&&null!==t.arrowLabel,arrowLabel:t.arrowLabel})))};case"tree":return{type:"tree",title:t.title,label:t.label,elements:t.elements.map((t=>({nodeId:t.nodeId,left:"None"==t.left?void 0:t.left,right:"None"==t.right?void 0:t.right,value:t.value,color:t.color})))};case"graph":return{type:"graph",title:t.title,label:t.label,elements:t.elements.map((t=>{if("NodeDefinition"==t.$type)return{type:"node",nodeId:t.nodeId,value:t.value,color:t.color,arrow:void 0!==t.arrowLabel&&null!==t.arrowLabel,arrowLabel:t.arrowLabel,hidden:t.hidden};if("EdgeDefinition"==t.$type)return{type:"edge",start:t.start,end:t.end,value:t.value,color:t.color};throw new Error("Unknown graph element type")}))};case"linkedList":return{type:"linkedList",title:t.title,label:t.label,elements:t.elements.map((t=>({value:t.value,color:t.color,arrow:!!t.arrowLabel,arrowLabel:t.arrowLabel})))};case"text":return{type:"text",title:t.title,elements:t.elements.map((t=>t.value))};default:throw new Error(`Unknown diagram type: ${t.diagramType}`)}}));x.addPage({subDiagrams:t})}}),"populate"),m={parse:async t=>{const e=await(0,n.q)("visual",t);i.Rm.debug(e),u(e)}},b=(0,s.K2)(((t,e,a,r,n)=>{t.append("defs").append("marker").attr("id","arrowhead").attr("viewBox","0 0 10 10").attr("refX","5").attr("refY","5").attr("markerWidth","6").attr("markerHeight","6").attr("orient","auto-start-reverse").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").attr("fill","black"),e.title&&t.append("text").attr("x",100).attr("y",20).attr("fill",r.labelColor).attr("font-size","16").attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","arrayDiagramTitle").text(e.title);const l=t.append("g").attr("class","component").attr("id",`component_${n.toString().padStart(2,"0")}`).attr("transform",`translate(50, ${a+40})`);let o=0;if(e.elements.forEach(((t,a)=>{f(l,t,a,r,e.showIndex||!1,o),o+=1})),e.label){const t=160,a=100;l.append("text").attr("x",a).attr("y",t).attr("fill",r.labelColor).attr("font-size","16").attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","arrayDiagramLabel").text(e.label)}}),"drawArrayDiagram"),f=(0,s.K2)(((t,e,a,{labelColor:r,labelFontSize:n},l,o)=>{const i=t.append("g");i.attr("class","unit").attr("id",`unit_${o.toString().padStart(3,"0")}`);const s=40*a,d=h(e.color);if(e.arrow){const t=10,a=40;i.append("line").attr("x1",s+20).attr("y1",t).attr("x2",s+20).attr("y2",a).attr("stroke","black").attr("stroke-width","1.5").attr("marker-end","url(#arrowhead)"),e.arrowLabel&&i.append("text").attr("x",s+20).attr("y",t-20).attr("fill",r).attr("font-size",n).attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","arrowContext").text(e.arrowLabel)}i.append("rect").attr("x",s).attr("y",50).attr("width",40).attr("height",40).style("fill",d).attr("stroke","#000000").attr("stroke-width","2px").attr("class","arrayElement"),i.append("text").attr("x",s+20).attr("y",70).attr("fill",r).attr("font-size","16").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","elementLabel").text(e.value),l&&i.append("text").attr("x",s+20).attr("y",110).attr("fill",r).attr("font-size","16").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","indexLabel").text(a)}),"drawElement"),h=(0,s.K2)((t=>{switch(t){case"blue":return"rgba(0, 0, 255, 0.3)";case"green":return"rgba(0, 255, 0, 0.3)";case"red":return"rgba(255, 0, 0, 0.3)";default:return"none"}}),"getColor"),y=(0,s.K2)(((t,e,a,r)=>{const n=e.title?100:0,l=t.append("g").attr("transform",`translate(50, ${a+n})`),o=e.rows.length,i=Math.max(...e.rows.map((t=>t.elements.length)));if(e.title&&t.append("text").attr("x",50).attr("y",a).attr("fill",r.labelColor).attr("font-size",r.labelFontSize).attr("dominant-baseline","hanging").attr("text-anchor","start").attr("class","diagramTitle").text(e.title),e.rows.forEach(((t,e)=>{t.elements.forEach(((t,a)=>{w(l,t,e,a,r),v(l,e,a,r)}))})),e.label){const t=50*o+50,a=25*i;l.append("text").attr("x",a).attr("y",t).attr("fill",r.labelColor).attr("font-size",r.labelFontSize).attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","arrayDiagramLabel").text(e.label)}e.showIndex&&k(l,o,i,r)}),"drawMatrixDiagram"),w=(0,s.K2)(((t,e,a,r,{labelColor:n,labelFontSize:l})=>{const o=t.append("g"),i=50*r,s=50*a,d=L(e.color);o.append("rect").attr("x",i).attr("y",s).attr("width",50).attr("height",50).style("fill",d).attr("stroke","#000000").attr("stroke-width","1.2px").attr("class","matrixElement"),o.append("text").attr("x",i+25).attr("y",s+25).attr("fill",n).attr("font-size",l).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","elementLabel").text(e.value.toString())}),"drawElement"),k=(0,s.K2)(((t,e,a,{labelColor:r,labelFontSize:n})=>{const l=t.append("g");for(let t=0;t<e;t++)l.append("text").attr("x",-10).attr("y",50*t+25).attr("fill",r).attr("font-size",n).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","rowIndex").text(t.toString());for(let t=0;t<a;t++)l.append("text").attr("x",50*t+25).attr("y",-10).attr("fill",r).attr("font-size",n).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","colIndex").text(t.toString())}),"addIndices"),v=(0,s.K2)(((t,e,a,{borderColor:r,borderWidth:n})=>{const l=50*a,o=50*e;t.append("g").append("rect").attr("x",l).attr("y",o).attr("width",50).attr("height",50).attr("stroke",r).attr("stroke-width",n).attr("fill","none")}),"drawGrid"),L=(0,s.K2)((t=>{switch(t){case"blue":return"rgba(0, 0, 255, 0.3)";case"green":return"rgba(0, 255, 0, 0.3)";case"red":return"rgba(255, 0, 0, 0.3)";default:return"none"}}),"getColor"),I=(0,s.K2)(((t,e,a)=>{const r=t.append("g").attr("transform",`translate(0, ${a})`),n=40*e.size;if(E(r,50,0,70,n),e.elements.forEach(((t,a)=>{const n=e.size-e.elements.length+a;K(r,t,n)})),e.label){const t=n+40+20,a=85;r.append("text").attr("x",a).attr("y",t).attr("fill","black").attr("font-size","16").attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","stackDiagramLabel").text(e.label)}}),"drawStackDiagram"),K=(0,s.K2)(((t,e,a)=>{const r=t.append("g"),n=40*a,l=z(e.color);r.append("rect").attr("x",50).attr("y",n).attr("width",70).attr("height",40).style("fill",l).attr("stroke","black").attr("stroke-width","1").attr("class","stackElement"),r.append("text").attr("x",85).attr("y",n+20).attr("fill","black").attr("font-size","12").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","elementLabel").text(e.value)}),"drawElement"),E=(0,s.K2)(((t,e,a,r,n)=>{const l="#000000";t.append("line").attr("x1",e).attr("y1",a).attr("x2",e).attr("y2",a+n).attr("stroke",l).attr("stroke-width",2),t.append("line").attr("x1",e+r).attr("y1",a).attr("x2",e+r).attr("y2",a+n).attr("stroke",l).attr("stroke-width",2),t.append("line").attr("x1",e).attr("y1",a+n).attr("x2",e+r).attr("y2",a+n).attr("stroke",l).attr("stroke-width",2)}),"drawFramework"),z=(0,s.K2)((t=>{switch(t){case"blue":return"rgba(0, 0, 255, 0.3)";case"green":return"rgba(0, 255, 0, 0.3)";case"red":return"rgba(255, 0, 0, 0.3)";default:return"none"}}),"getColor"),P=(0,s.K2)(((t,e,a)=>{const r=t.append("g").attr("transform",`translate(0, ${a})`),n=e.elements.filter((t=>"node"==t.type)),l=e.elements.filter((t=>"edge"==t.type)),o=B(n||[]);if(l&&l.forEach((t=>{S(r,t,o)})),n&&n.forEach((t=>{D(r,t,o[t.nodeId])})),e.label){const t=n?100*Math.ceil(n.length/3)+70:100,a=150;r.append("text").attr("x",a).attr("y",t).attr("fill","black").attr("font-size","16").attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","graphDiagramLabel").text(e.label)}}),"drawGraphDiagram"),B=(0,s.K2)((t=>{const e={},a=2*Math.PI/t.length;return t.forEach(((t,r)=>{const n=r*a;e[t.nodeId]={x:150+100*Math.cos(n),y:150+100*Math.sin(n)}})),e}),"calculateNodePositions"),D=(0,s.K2)(((t,e,a)=>{const r=a.x,n=a.y,l=$(e.color);t.append("circle").attr("cx",r).attr("cy",n).attr("r",20).style("fill",l).attr("stroke","black").attr("stroke-width","1").attr("class","graphNode"),t.append("text").attr("x",r).attr("y",n).attr("dy",".35em").attr("fill","black").attr("font-size","12").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","nodeLabel").text(e.value||e.nodeId)}),"drawNode"),S=(0,s.K2)(((t,e,a)=>{const r=a[e.start],n=a[e.end];if(r&&n){const{startX:a,startY:l,endX:o,endY:i}=C(r,n),s=e.color||"black";t.append("line").attr("x1",a).attr("y1",l).attr("x2",o).attr("y2",i).attr("stroke",s).attr("stroke-width","2"),e.value&&t.append("text").attr("x",(a+o)/2).attr("y",(l+i)/2).attr("fill","black").attr("font-size","12").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","edgeLabel").text(e.value)}}),"drawEdge"),C=(0,s.K2)(((t,e)=>{const a=e.x-t.x,r=e.y-t.y,n=Math.sqrt(a*a+r*r),l=20*a/n,o=20*r/n;return{startX:t.x+l,startY:t.y+o,endX:e.x-l,endY:e.y-o}}),"calculateEdgePosition"),$=(0,s.K2)((t=>{switch(t){case"blue":return"rgba(0, 0, 255, 0.3)";case"green":return"rgba(0, 255, 0, 0.3)";case"red":return"rgba(255, 0, 0, 0.3)";default:return"none"}}),"getColor"),T=(0,s.K2)(((t,e,a)=>{const r=t.append("g").attr("transform",`translate(0, ${a})`),n=e.elements||[],l=N(n),o=q(n);if(l&&l.forEach((t=>{M(r,t,o)})),n&&n.forEach((t=>{A(r,t,o[t.nodeId])})),e.label){const t=n?100*Math.ceil(n.length/3)+70:100,a=150;r.append("text").attr("x",a).attr("y",t).attr("fill","black").attr("font-size","16").attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","treeDiagramLabel").text(e.label)}}),"drawTreeDiagram"),q=(0,s.K2)((t=>{const e={},a=(0,s.K2)(((r,n,l)=>{const o=n,i=0+100*l;e[r.nodeId]={x:o,y:i};const s=t.find((t=>t.nodeId===r.left)),d=t.find((t=>t.nodeId===r.right));s&&a(s,o-50,l+1),d&&a(d,o+50,l+1)}),"calculatePosition"),r=t.find((t=>!t.parentId));return r&&a(r,150,0),e}),"calculateNodePositions"),N=(0,s.K2)((t=>{const e=[];return t.forEach((t=>{t.left&&e.push({start:t.nodeId,end:t.left}),t.right&&e.push({start:t.nodeId,end:t.right})})),e}),"calculateTreeEdges"),A=(0,s.K2)(((t,e,a)=>{const r=a.x,n=a.y,l=Y(e.color);t.append("circle").attr("cx",r).attr("cy",n).attr("r",20).style("fill",l).attr("stroke","black").attr("stroke-width","1").attr("class","treeNode"),t.append("text").attr("x",r).attr("y",n).attr("dy",".35em").attr("fill","black").attr("font-size","12").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","nodeLabel").text(e.value||e.nodeId)}),"drawNode"),M=(0,s.K2)(((t,e,a)=>{const r=a[e.start],n=a[e.end];if(r&&n){const{startX:a,startY:l,endX:o,endY:i}=X(r,n),s=e.color||"black";t.append("line").attr("x1",a).attr("y1",l).attr("x2",o).attr("y2",i).attr("stroke",s).attr("stroke-width","2"),e.value&&t.append("text").attr("x",(a+o)/2).attr("y",(l+i)/2).attr("fill","black").attr("font-size","12").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","edgeLabel").text(e.value)}}),"drawEdge"),X=(0,s.K2)(((t,e)=>{const a=e.x-t.x,r=e.y-t.y,n=Math.sqrt(a*a+r*r),l=20*a/n,o=20*r/n;return{startX:t.x+l,startY:t.y+o,endX:e.x-l,endY:e.y-o}}),"calculateEdgePosition"),Y=(0,s.K2)((t=>{switch(t){case"blue":return"rgba(0, 0, 255, 0.3)";case"green":return"rgba(0, 255, 0, 0.3)";case"red":return"rgba(255, 0, 0, 0.3)";default:return"none"}}),"getColor"),F=(0,s.K2)(((t,e,a)=>{const r=t.append("g").attr("transform",`translate(0, ${a})`);r.append("defs").append("marker").attr("id","arrowhead").attr("viewBox","0 0 10 10").attr("refX","10").attr("refY","5").attr("markerWidth","6").attr("markerHeight","6").attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").attr("fill","black");const n=e.elements,l=G(n||[]);if(n&&n.forEach(((t,e)=>{_(r,t,l[e],e<n.length-1)})),e.label){const t=100,a=150;r.append("text").attr("x",a).attr("y",t).attr("fill","black").attr("font-size","16").attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","linkedListDiagramLabel").text(e.label)}}),"drawLinkedListDiagram"),G=(0,s.K2)((t=>{const e=[];return t.forEach(((t,a)=>{e.push({x:50+120*a,y:50})})),e}),"calculateNodePositions"),_=(0,s.K2)(((t,e,a,r)=>{const n=a.x,l=a.y,o=U(e.color);t.append("rect").attr("x",n).attr("y",l).attr("width",60).attr("height",30).style("fill",o).attr("stroke","black").attr("stroke-width","1").attr("class","linkedListNode"),t.append("text").attr("x",n+30).attr("y",l+15).attr("dy",".35em").attr("fill","black").attr("font-size","12").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","nodeLabel").text(e.value),e.arrow&&(t.append("line").attr("x1",n+30).attr("y1",l-30).attr("x2",n+30).attr("y2",l).attr("stroke","black").attr("stroke-width","2").attr("marker-end","url(#arrowhead)"),e.arrowLabel&&t.append("text").attr("x",n+30).attr("y",l-40).attr("fill","black").attr("font-size","16").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","arrowLabel").text(e.arrowLabel)),r&&t.append("line").attr("x1",n+60).attr("y1",l+15).attr("x2",n+60+60).attr("y2",l+15).attr("stroke","black").attr("stroke-width","2").attr("marker-end","url(#arrowhead)")}),"drawNode"),U=(0,s.K2)((t=>{switch(t){case"blue":return"rgba(0, 0, 255, 0.3)";case"green":return"rgba(0, 255, 0, 0.3)";case"red":return"rgba(255, 0, 0, 0.3)";default:return"white"}}),"getColor"),W=(0,s.K2)(((t,e,a)=>{const r=t.append("g").attr("transform",`translate(0, ${a})`);let n=0;if(e.elements.forEach((t=>{n=j(r,t,n)})),e.label){const t=n+20,a=50;r.append("text").attr("x",a).attr("y",t).attr("fill","black").attr("font-size","16").attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","textDiagramLabel").text(e.label)}}),"drawTextDiagram"),j=(0,s.K2)(((t,e,a)=>{const r=t.append("g"),n=e.split("\n");return n.forEach(((t,e)=>{const n=a+20*e;r.append("text").attr("x",50).attr("y",n).attr("fill","black").attr("font-size","20").attr("dominant-baseline","hanging").attr("class","textElement").text(t)})),a+20*n.length}),"drawElement"),H={parser:m,db:x,renderer:{draw:(0,s.K2)(((t,e,a,r)=>{const n=r.db,o=n.getConfig(),d=n.getPages(),c=n.getDiagramTitle(),p=(0,l.D)(e);let g=0,x=null;const u=(0,s.K2)((t=>{p.selectAll("g.page").attr("display","none"),p.select(`#page${t}`).attr("display","inline"),p.select("#prevButton").attr("fill",t>0?"#007bff":"#c0c0c0"),p.select("#nextButton").attr("fill",t<d.length-1?"#007bff":"#c0c0c0"),p.select("#pageIndicator").text(`${t+1} / ${d.length}`)}),"renderPage"),m=(0,s.K2)(((t,e)=>{const a=t.append("g").attr("class","navigation-buttons"),r=a.append("g").attr("id","prevButtonGroup").attr("cursor","pointer");r.append("rect").attr("id","prevButton").attr("x",430).attr("y",740).attr("width",40).attr("height",20).attr("fill","#c0c0c0"),r.append("text").text("<").attr("x",450).attr("y",750).attr("fill","white").attr("text-anchor","middle").attr("alignment-baseline","middle");const n=a.append("g").attr("id","playButtonGroup").attr("cursor","pointer");n.append("rect").attr("id","playButton").attr("x",480).attr("y",740).attr("width",40).attr("height",20).attr("fill","#007bff"),n.append("text").text("▶").attr("x",500).attr("y",750).attr("fill","white").attr("text-anchor","middle").attr("alignment-baseline","middle");const l=a.append("g").attr("id","nextButtonGroup").attr("cursor","pointer");l.append("rect").attr("id","nextButton").attr("x",530).attr("y",740).attr("width",40).attr("height",20).attr("fill","#007bff"),l.append("text").text(">").attr("x",550).attr("y",750).attr("fill","white").attr("text-anchor","middle").attr("alignment-baseline","middle"),a.append("text").attr("id","pageIndicator").attr("x",950).attr("y",750).attr("fill","black").attr("text-anchor","middle").attr("alignment-baseline","middle").text(`1 / ${e}`),r.node()?.addEventListener("click",(()=>{g>0&&(g-=1,u(g))})),l.node()?.addEventListener("click",(()=>{g<e-1&&(g+=1,u(g))})),n.node()?.addEventListener("click",(()=>{x?(clearInterval(x),x=null,(0,i.df)("#playButton text").text("▶"),(0,i.df)("#playButton").attr("fill","#007bff")):(x=1e3,(0,i.df)("#playButton text").text("❚❚"),(0,i.df)("#playButton").attr("fill","#c0c0c0"))}))}),"addNavigationButtons"),f=(0,s.K2)(((t,e,a)=>{const r=t.append("g").attr("id",`page${a}`).attr("class","page").attr("display",0===a?"inline":"none");c&&r.append("text").text(c).attr("x",500).attr("y",25).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","pageTitle");let n=50,l=0;for(const t of e.subDiagrams)switch(t.type){case"array":b(r,t,n,o,l),l+=1,n+=250;break;case"matrix":y(r,t,n,o),n+=250;break;case"stack":I(r,t,n),n+=250;break;case"graph":P(r,t,n),n+=250;break;case"tree":T(r,t,n),n+=250;break;case"linkedList":F(r,t,n),n+=250;break;case"text":W(r,t,n),n+=250;break;default:throw new Error(`Unknown diagram type: ${t.type}`)}}),"drawPage");p.attr("viewBox","0 0 1000 800"),(0,i.a$)(p,800,1e3,o.useMaxWidth),d.forEach(((t,e)=>{f(p,t,e)})),m(p,d.length),u(g);const h=`\n    (function() {\n      const svg = document.getElementById('${e}');\n      let currentPage = 0;\n      const totalPages = ${d.length};\n      let playInterval = null;\n\n      function renderPage(pageIndex) {\n        const pages = svg.querySelectorAll('g.page');\n        pages.forEach(page => {\n          page.style.display = 'none';\n        });\n        svg.querySelector('#page' + pageIndex).style.display = 'inline';\n\n        const prevButton = svg.querySelector('#prevButton');\n        const nextButton = svg.querySelector('#nextButton');\n        \n        if (prevButton) prevButton.setAttribute('fill', pageIndex > 0 ? '#007bff' : '#c0c0c0');\n        if (nextButton) nextButton.setAttribute('fill', pageIndex < totalPages - 1 ? '#007bff' : '#c0c0c0');\n\n        // Update current page display\n        svg.querySelector('#pageIndicator').textContent = (pageIndex + 1) + ' / ' + totalPages;\n      }\n\n      svg.querySelector('#prevButtonGroup').addEventListener('click', function() {\n        if (currentPage > 0) {\n          currentPage -= 1;\n          renderPage(currentPage);\n        }\n      });\n\n      svg.querySelector('#nextButtonGroup').addEventListener('click', function() {\n        if (currentPage < totalPages - 1) {\n          currentPage += 1;\n          renderPage(currentPage);\n        }\n      });\n\n      svg.querySelector('#playButtonGroup').addEventListener('click', function() {\n        if (playInterval) {\n          clearInterval(playInterval);\n          playInterval = null;\n          svg.querySelector('#playButton text').textContent = '▶';\n          svg.querySelector('#playButton').setAttribute('fill', '#007bff');\n        } else {\n          playInterval = setInterval(() => {\n            if (currentPage < totalPages - 1) {\n              currentPage += 1;\n            } else {\n              currentPage = 0;\n            }\n            renderPage(currentPage);\n          }, 1000);\n          svg.querySelector('#playButton text').textContent = '❚❚';\n          svg.querySelector('#playButton').setAttribute('fill', '#c0c0c0');\n        }\n      });\n\n      renderPage(currentPage);\n    })();\n  `;p.append("script").attr("type","text/javascript").text(h)}),"draw")},styles:(0,s.K2)(((t={})=>(i.Rm.debug({options:t}),`\n    .element {\n      font-size: ${t.array?.elementFontSize??"10px"};\n      fill: ${t.array?.valueColor??"black"};\n    }\n    .element.index {\n      fill: ${t.array?.indexColor??"black"};\n    }\n    .element {\n      stroke: ${t.array?.elementStrokeColor??"black"};\n      stroke-width: ${t.array?.elementStrokeWidth??"1"};\n      fill: ${t.array?.elementFillColor??"#efefef"};\n    }\n  `)),"styles")}}}]);