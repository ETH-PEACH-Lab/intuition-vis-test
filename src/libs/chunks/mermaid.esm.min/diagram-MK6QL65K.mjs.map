{
  "version": 3,
  "sources": ["../../../src/diagrams/visslides/db.ts", "../../../src/diagrams/visslides/parser.ts", "../../../src/diagrams/visslides/drawArrayDiagram.ts", "../../../src/diagrams/visslides/drawMatrixDiagram.ts", "../../../src/diagrams/visslides/renderer.ts", "../../../src/diagrams/visslides/styles.ts", "../../../src/diagrams/visslides/diagram.ts"],
  "sourcesContent": ["import { getConfig as commonGetConfig } from '../../config.js';\nimport type { VisSlidesDiagramConfig } from '../../config.type.js';\nimport DEFAULT_CONFIG from '../../defaultConfig.js';\nimport { cleanAndMerge } from '../../utils.js';\nimport {\n  clear as commonClear,\n  getAccDescription,\n  getAccTitle,\n  getDiagramTitle,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle,\n} from '../common/commonDb.js';\nimport type { VisSlidesDB, VisSlidePage } from './types.js';\n\n// cspell:ignore visslides\nconst defaultVisSlidesData: VisSlidePage[] = [];\n\nlet data: VisSlidePage[] = [...defaultVisSlidesData];\n\nconst DEFAULT_VISSLIDES_CONFIG: Required<VisSlidesDiagramConfig> = DEFAULT_CONFIG.visslides;\n\nconst getConfig = (): Required<VisSlidesDiagramConfig> => {\n  return cleanAndMerge({\n    ...DEFAULT_VISSLIDES_CONFIG,\n    ...commonGetConfig().visslides,\n  });\n};\n\nconst getPages = (): VisSlidePage[] => data;\n\nconst addPage = (page: VisSlidePage) => {\n  data.push(page);\n};\n\nconst clear = () => {\n  commonClear();\n  data = [...defaultVisSlidesData];\n};\n\nexport const db: VisSlidesDB = {\n  getPages,\n  addPage,\n  getConfig,\n  clear,\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle,\n  getAccDescription,\n  setAccDescription,\n};\n", "import type { VisSlidesDiagram } from '@mermaid-js/parser';\nimport { parse } from '@mermaid-js/parser';\nimport type { ParserDefinition } from '../../diagram-api/types.js';\nimport { log } from '../../logger.js';\nimport { populateCommonDb } from '../common/populateCommonDb.js';\nimport { db } from './db.js';\n\nconst populate = (ast: VisSlidesDiagram) => {\n  populateCommonDb(ast, db);\n  for (const page of ast.pages) {\n    const subDiagrams = page.subDiagrams.map((subDiagram) => {\n      if ('elements' in subDiagram) {\n        return {\n          elements: subDiagram.elements.map((e) => ({\n            value: 1,\n          })),\n        };\n      } else {\n        return {\n          rows: subDiagram.rows.map((row) => ({\n            elements: row.elements.map((e) => ({\n              value: 1,\n            })),\n          })),\n        };\n      }\n    });\n\n    db.addPage({ subDiagrams });\n  }\n};\n\nexport const parser: ParserDefinition = {\n  parse: async (input: string): Promise<void> => {\n    // cspell:ignore visslides\n    const ast: VisSlidesDiagram = await parse('visslides', input);\n    log.debug(ast);\n    populate(ast);\n  },\n};\n", "import type { ArrayDiagram, ArrayElement } from './types.js';\nimport type { ArrayDiagramConfig } from '../../config.type.js';\nimport type { DiagramRenderer, DrawDefinition, Group, SVG } from '../../diagram-api/types.js';\n\nexport const drawArrayDiagram = (\n  svg: SVG,\n  arrayDiagram: ArrayDiagram,\n  yOffset: number,\n  config: Required<ArrayDiagramConfig>\n) => {\n  const group = svg.append('g').attr('transform', `translate(0, ${yOffset})`);\n\n  arrayDiagram.elements.forEach((element, index) => {\n    drawElement(group as unknown as SVG, element, index, config, arrayDiagram.showIndex || false);\n  });\n};\n\nconst drawElement = (\n  svg: SVG,\n  element: ArrayElement,\n  index: number,\n  {\n    elementColor,\n    borderColor,\n    borderWidth,\n    labelColor,\n    labelFontSize,\n  }: Required<ArrayDiagramConfig>,\n  showIndex: boolean\n) => {\n  const group = svg.append('g');\n  const elementX = index * 50 + 50;\n  const elementY = 50;\n\n  const fillColor = getColor(element.color);\n\n  if (element.arrow) {\n    const arrowYStart = elementY - 40;\n    const arrowYEnd = elementY - 10;\n    group\n      .append('line')\n      .attr('x1', elementX + 20)\n      .attr('y1', arrowYStart)\n      .attr('x2', elementX + 20)\n      .attr('y2', arrowYEnd)\n      .attr('stroke', 'black')\n      .attr('marker-end', 'url(#arrowhead)');\n\n    if (element.context) {\n      group\n        .append('text')\n        .attr('x', elementX + 20)\n        .attr('y', arrowYStart - 10)\n        .attr('fill', labelColor)\n        .attr('font-size', labelFontSize)\n        .attr('dominant-baseline', 'hanging')\n        .attr('text-anchor', 'middle')\n        .attr('class', 'arrowContext')\n        .text(element.context);\n    }\n  }\n\n  group\n    .append('rect')\n    .attr('x', elementX)\n    .attr('y', elementY)\n    .attr('width', 40)\n    .attr('height', 40)\n    .style('fill', fillColor)\n    .attr('stroke', '#191970')\n    .attr('stroke-width', '2px')\n    .attr('class', 'arrayElement');\n\n  group\n    .append('text')\n    .attr('x', elementX + 20)\n    .attr('y', elementY + 20)\n    .attr('fill', labelColor)\n    .attr('font-size', labelFontSize)\n    .attr('dominant-baseline', 'middle')\n    .attr('text-anchor', 'middle')\n    .attr('class', 'elementLabel')\n    .text(element.value);\n\n  if (showIndex) {\n    group\n      .append('text')\n      .attr('x', elementX + 20)\n      .attr('y', elementY + 60)\n      .attr('fill', labelColor)\n      .attr('font-size', 25)\n      .attr('dominant-baseline', 'middle')\n      .attr('text-anchor', 'middle')\n      .attr('class', 'indexLabel')\n      .text(index);\n  }\n};\n\nconst getColor = (color?: string): string => {\n  switch (color) {\n    case 'blue':\n      return 'rgba(0, 0, 255, 0.3)';\n    case 'green':\n      return 'rgba(0, 255, 0, 0.3)';\n    case 'red':\n      return 'rgba(255, 0, 0, 0.3)';\n    default:\n      return 'none';\n  }\n};\n", "import type { MatrixDiagram, MatrixRow, MatrixElement } from './types.js';\nimport type { MatrixDiagramConfig } from '../../config.type.js';\nimport type { DiagramRenderer, DrawDefinition, Group, SVG } from '../../diagram-api/types.js';\n\nexport const drawMatrixDiagram = (\n  svg: SVG,\n  matrixDiagram: MatrixDiagram,\n  yOffset: number,\n  config: Required<MatrixDiagramConfig>\n) => {\n  const group = svg.append('g').attr('transform', `translate(0, ${yOffset})`);\n\n  matrixDiagram.rows.forEach((row, rowIndex) => {\n    row.elements.forEach((element, colIndex) => {\n      drawElement(group as unknown as SVG, element, rowIndex, colIndex, config);\n    });\n  });\n};\n\nconst drawElement = (\n  svg: SVG,\n  element: MatrixElement,\n  rowIndex: number,\n  colIndex: number,\n  { borderColor, borderWidth, labelColor, labelFontSize }: Required<MatrixDiagramConfig>\n) => {\n  const group = svg.append('g');\n  const elementX = colIndex * 50 + 50;\n  const elementY = rowIndex * 50 + 50;\n\n  const fillColor = getColor(element.color);\n\n  group\n    .append('rect')\n    .attr('x', elementX)\n    .attr('y', elementY)\n    .attr('width', 48)\n    .attr('height', 48)\n    .style('fill', fillColor)\n    .attr('stroke', '#191970')\n    .attr('stroke-width', '1.5px')\n    .attr('class', 'matrixElement');\n\n  group\n    .append('text')\n    .attr('x', elementX + 20)\n    .attr('y', elementY + 20)\n    .attr('fill', labelColor)\n    .attr('font-size', labelFontSize)\n    .attr('dominant-baseline', 'middle')\n    .attr('text-anchor', 'middle')\n    .attr('class', 'elementLabel')\n    .text(element.value.toString());\n};\n\nconst getColor = (color?: string): string => {\n  switch (color) {\n    case 'blue':\n      return 'rgba(0, 0, 255, 0.3)';\n    case 'green':\n      return 'rgba(0, 255, 0, 0.3)';\n    case 'red':\n      return 'rgba(255, 0, 0, 0.3)';\n    default:\n      return 'none';\n  }\n};\n", "import * as d3 from 'd3';\nimport type { Diagram } from '../../Diagram.js';\nimport type { DiagramRenderer, DrawDefinition, SVG } from '../../diagram-api/types.js';\nimport { selectSvgElement } from '../../rendering-util/selectSvgElement.js';\nimport { configureSvgSize } from '../../setupGraphViewbox.js';\nimport type { VisSlidesDB, VisSlidePage, ArrayDiagram, MatrixDiagram } from './types.js';\nimport { drawArrayDiagram } from './drawArrayDiagram.js';\nimport { drawMatrixDiagram } from './drawMatrixDiagram.js';\n\nconst draw: DrawDefinition = (_text, id, _version, diagram: Diagram) => {\n  const db = diagram.db as VisSlidesDB;\n  const config = db.getConfig();\n  const pages = db.getPages();\n  const title = db.getDiagramTitle();\n  const svgHeight = 800;\n  const svgWidth = 1000;\n  const svg: SVG = selectSvgElement(id);\n\n  let currentPage = 0;\n  let playInterval: number | null = null;\n\n  const renderPage = (pageIndex: number) => {\n    svg.selectAll('g.page').attr('display', 'none');\n    svg.select(`#page${pageIndex}`).attr('display', 'inline');\n\n    // Update button states\n    svg.select('#prevButton').attr('fill', pageIndex > 0 ? '#007bff' : '#c0c0c0');\n    svg.select('#nextButton').attr('fill', pageIndex < pages.length - 1 ? '#007bff' : '#c0c0c0');\n\n    // Update current page display\n    svg.select('#pageIndicator').text(`${pageIndex + 1} / ${pages.length}`);\n  };\n\n  const addNavigationButtons = (svg: SVG, totalPages: number) => {\n    const buttonGroup = svg.append('g').attr('class', 'navigation-buttons');\n\n    const buttonWidth = 40;\n    const buttonHeight = 20;\n    const buttonSpacing = 10;\n\n    const buttonsX = svgWidth / 2 - (buttonWidth * 1.5 + buttonSpacing);\n    const buttonsY = svgHeight - 60; // Adjusted y position\n\n    // Prev button\n    const prevButtonGroup = buttonGroup\n      .append('g')\n      .attr('id', 'prevButtonGroup')\n      .attr('cursor', 'pointer');\n\n    prevButtonGroup\n      .append('rect')\n      .attr('id', 'prevButton')\n      .attr('x', buttonsX)\n      .attr('y', buttonsY)\n      .attr('width', buttonWidth)\n      .attr('height', buttonHeight)\n      .attr('fill', '#c0c0c0'); // Initially disabled\n\n    prevButtonGroup\n      .append('text')\n      .text('<')\n      .attr('x', buttonsX + buttonWidth / 2)\n      .attr('y', buttonsY + buttonHeight / 2)\n      .attr('fill', 'white')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle');\n\n    // Play button\n    const playButtonGroup = buttonGroup\n      .append('g')\n      .attr('id', 'playButtonGroup')\n      .attr('cursor', 'pointer');\n\n    playButtonGroup\n      .append('rect')\n      .attr('id', 'playButton')\n      .attr('x', buttonsX + buttonWidth + buttonSpacing)\n      .attr('y', buttonsY)\n      .attr('width', buttonWidth)\n      .attr('height', buttonHeight)\n      .attr('fill', '#007bff'); // Initially enabled\n\n    playButtonGroup\n      .append('text')\n      .text('\u25B6')\n      .attr('x', buttonsX + buttonWidth + buttonSpacing + buttonWidth / 2)\n      .attr('y', buttonsY + buttonHeight / 2)\n      .attr('fill', 'white')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle');\n\n    // Next button\n    const nextButtonGroup = buttonGroup\n      .append('g')\n      .attr('id', 'nextButtonGroup')\n      .attr('cursor', 'pointer');\n\n    nextButtonGroup\n      .append('rect')\n      .attr('id', 'nextButton')\n      .attr('x', buttonsX + 2 * (buttonWidth + buttonSpacing))\n      .attr('y', buttonsY)\n      .attr('width', buttonWidth)\n      .attr('height', buttonHeight)\n      .attr('fill', '#007bff'); // Initially enabled\n\n    nextButtonGroup\n      .append('text')\n      .text('>')\n      .attr('x', buttonsX + 2 * (buttonWidth + buttonSpacing) + buttonWidth / 2)\n      .attr('y', buttonsY + buttonHeight / 2)\n      .attr('fill', 'white')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle');\n\n    // Page indicator\n    buttonGroup\n      .append('text')\n      .attr('id', 'pageIndicator')\n      .attr('x', svgWidth - 50)\n      .attr('y', svgHeight - 50)\n      .attr('fill', 'black')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle')\n      .text(`1 / ${totalPages}`);\n\n    prevButtonGroup.node()?.addEventListener('click', () => {\n      if (currentPage > 0) {\n        currentPage -= 1;\n        renderPage(currentPage);\n      }\n    });\n\n    nextButtonGroup.node()?.addEventListener('click', () => {\n      if (currentPage < totalPages - 1) {\n        currentPage += 1;\n        renderPage(currentPage);\n      }\n    });\n\n    playButtonGroup.node()?.addEventListener('click', () => {\n      if (playInterval) {\n        clearInterval(playInterval);\n        playInterval = null;\n        d3.select('#playButton text').text('\u25B6');\n        d3.select('#playButton').attr('fill', '#007bff');\n      } else {\n        playInterval = 1000;\n        d3.select('#playButton text').text('\u275A\u275A');\n        d3.select('#playButton').attr('fill', '#c0c0c0');\n      }\n    });\n  };\n\n  const drawPage = (svg: SVG, page: VisSlidePage, pageIndex: number) => {\n    const pageGroup = svg\n      .append('g')\n      .attr('id', `page${pageIndex}`)\n      .attr('class', 'page')\n      .attr('display', pageIndex === 0 ? 'inline' : 'none');\n\n    if (title) {\n      pageGroup\n        .append('text')\n        .text(title)\n        .attr('x', svgWidth / 2)\n        .attr('y', 25)\n        .attr('dominant-baseline', 'middle')\n        .attr('text-anchor', 'middle')\n        .attr('class', 'pageTitle');\n    }\n\n    let yOffset = 50;\n\n    for (const subDiagram of page.subDiagrams) {\n      if ((subDiagram as ArrayDiagram).elements) {\n        drawArrayDiagram(pageGroup as unknown as SVG, subDiagram as ArrayDiagram, yOffset, config);\n        yOffset += 100; // Adjust the offset for next sub-diagram\n      } else {\n        drawMatrixDiagram(\n          pageGroup as unknown as SVG,\n          subDiagram as MatrixDiagram,\n          yOffset,\n          config\n        );\n        yOffset += 200; // Adjust the offset for next sub-diagram\n      }\n    }\n  };\n\n  svg.attr('viewBox', `0 0 ${svgWidth} ${svgHeight}`);\n  configureSvgSize(svg, svgHeight, svgWidth, config.useMaxWidth);\n\n  pages.forEach((page, index) => {\n    drawPage(svg, page, index);\n  });\n\n  addNavigationButtons(svg, pages.length);\n\n  renderPage(currentPage);\n\n  // Inject page-switching logic directly into the SVG as JavaScript\n  const switchPageScript = `\n    (function() {\n      const svg = document.getElementById('${id}');\n      let currentPage = 0;\n      const totalPages = ${pages.length};\n      let playInterval = null;\n\n      function renderPage(pageIndex) {\n        const pages = svg.querySelectorAll('g.page');\n        pages.forEach(page => {\n          page.style.display = 'none';\n        });\n        svg.querySelector('#page' + pageIndex).style.display = 'inline';\n\n        const prevButton = svg.querySelector('#prevButton');\n        const nextButton = svg.querySelector('#nextButton');\n        \n        if (prevButton) prevButton.setAttribute('fill', pageIndex > 0 ? '#007bff' : '#c0c0c0');\n        if (nextButton) nextButton.setAttribute('fill', pageIndex < totalPages - 1 ? '#007bff' : '#c0c0c0');\n\n        // Update current page display\n        svg.querySelector('#pageIndicator').textContent = (pageIndex + 1) + ' / ' + totalPages;\n      }\n\n      svg.querySelector('#prevButtonGroup').addEventListener('click', function() {\n        if (currentPage > 0) {\n          currentPage -= 1;\n          renderPage(currentPage);\n        }\n      });\n\n      svg.querySelector('#nextButtonGroup').addEventListener('click', function() {\n        if (currentPage < totalPages - 1) {\n          currentPage += 1;\n          renderPage(currentPage);\n        }\n      });\n\n      svg.querySelector('#playButtonGroup').addEventListener('click', function() {\n        if (playInterval) {\n          clearInterval(playInterval);\n          playInterval = null;\n          svg.querySelector('#playButton text').textContent = '\u25B6';\n          svg.querySelector('#playButton').setAttribute('fill', '#007bff');\n        } else {\n          playInterval = setInterval(() => {\n            if (currentPage < totalPages - 1) {\n              currentPage += 1;\n            } else {\n              currentPage = 0;\n            }\n            renderPage(currentPage);\n          }, 1000);\n          svg.querySelector('#playButton text').textContent = '\u275A\u275A';\n          svg.querySelector('#playButton').setAttribute('fill', '#c0c0c0');\n        }\n      });\n\n      renderPage(currentPage);\n    })();\n  `;\n\n  svg.append('script').attr('type', 'text/javascript').text(switchPageScript);\n};\n\nexport const renderer: DiagramRenderer = { draw };\n", "import { log } from '../../logger.js';\n\nexport const styles = (options: any = {}) => {\n  log.debug({ options });\n  return `\n    .element {\n      font-size: ${options.array?.elementFontSize ?? '10px'};\n      fill: ${options.array?.valueColor ?? 'black'};\n    }\n    .element.index {\n      fill: ${options.array?.indexColor ?? 'black'};\n    }\n    .element {\n      stroke: ${options.array?.elementStrokeColor ?? 'black'};\n      stroke-width: ${options.array?.elementStrokeWidth ?? '1'};\n      fill: ${options.array?.elementFillColor ?? '#efefef'};\n    }\n  `;\n};\n\nexport default styles;\n", "import type { DiagramDefinition } from '../../diagram-api/types.js';\nimport { db } from './db.js';\nimport { parser } from './parser.js';\nimport { renderer } from './renderer.js';\nimport { styles } from './styles.js';\n\nexport const diagram: DiagramDefinition = {\n  parser,\n  db,\n  renderer,\n  styles,\n};\n"],
  "mappings": "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",
  "names": ["defaultVisSlidesData", "data", "DEFAULT_VISSLIDES_CONFIG", "defaultConfig_default", "getConfig", "__name", "cleanAndMerge", "getPages", "addPage", "page", "clear", "db", "setAccTitle", "getAccTitle", "setDiagramTitle", "getDiagramTitle", "getAccDescription", "setAccDescription", "populate", "__name", "ast", "populateCommonDb", "db", "page", "subDiagrams", "subDiagram", "e", "row", "parser", "input", "parse", "log", "drawArrayDiagram", "__name", "svg", "arrayDiagram", "yOffset", "config", "group", "element", "index", "drawElement", "elementColor", "borderColor", "borderWidth", "labelColor", "labelFontSize", "showIndex", "elementX", "elementY", "fillColor", "getColor", "arrowYStart", "arrowYEnd", "color", "drawMatrixDiagram", "__name", "svg", "matrixDiagram", "yOffset", "config", "group", "row", "rowIndex", "element", "colIndex", "drawElement", "borderColor", "borderWidth", "labelColor", "labelFontSize", "elementX", "elementY", "fillColor", "getColor", "color", "draw", "__name", "_text", "id", "_version", "diagram", "db", "config", "pages", "title", "svgHeight", "svgWidth", "svg", "selectSvgElement", "currentPage", "playInterval", "renderPage", "pageIndex", "addNavigationButtons", "totalPages", "buttonGroup", "buttonWidth", "buttonHeight", "buttonSpacing", "buttonsX", "buttonsY", "prevButtonGroup", "playButtonGroup", "nextButtonGroup", "select_default", "drawPage", "page", "pageGroup", "yOffset", "subDiagram", "drawArrayDiagram", "drawMatrixDiagram", "configureSvgSize", "index", "switchPageScript", "renderer", "styles", "__name", "options", "log", "diagram", "parser", "db", "renderer", "styles"]
}
