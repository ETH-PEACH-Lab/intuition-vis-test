import{f as _e,m as Te}from"./chunk-EYGBHCO6.mjs";import"./chunk-EZ6AQD5Z.mjs";import{La as Ee,Ma as we,Na as Le,Oa as Me,Pa as Re,Qa as Ce,Ra as ve,Ta as R,Wa as Pe,b as H,h as ye,ha as Y}from"./chunk-PZJP3F4K.mjs";import"./chunk-RS46GSJM.mjs";import{a as d}from"./chunk-J73WXDYM.mjs";var ue=function(){var r=d(function(A,l,g,y){for(g=g||{},y=A.length;y--;g[A[y]]=l);return g},"o"),c=[1,3],o=[1,6],m=[1,4],i=[1,5],a=[2,5],p=[1,12],h=[5,7,13,19,21,23,24,26,28,31,37,40,47],b=[7,13,19,21,23,24,26,28,31,37,40],u=[7,12,13,19,21,23,24,26,28,31,37,40],s=[7,13,47],w=[1,42],T=[1,41],x=[7,13,29,32,35,38,47],f=[1,55],_=[1,56],k=[1,57],M=[7,13,32,35,42,47],F={trace:d(function(){},"trace"),yy:{},symbols_:{error:2,start:3,eol:4,GG:5,document:6,EOF:7,":":8,DIR:9,options:10,body:11,OPT:12,NL:13,line:14,statement:15,commitStatement:16,mergeStatement:17,cherryPickStatement:18,acc_title:19,acc_title_value:20,acc_descr:21,acc_descr_value:22,acc_descr_multiline_value:23,section:24,branchStatement:25,CHECKOUT:26,ref:27,BRANCH:28,ORDER:29,NUM:30,CHERRY_PICK:31,COMMIT_ID:32,STR:33,PARENT_COMMIT:34,COMMIT_TAG:35,EMPTYSTR:36,MERGE:37,COMMIT_TYPE:38,commitType:39,COMMIT:40,commit_arg:41,COMMIT_MSG:42,NORMAL:43,REVERSE:44,HIGHLIGHT:45,ID:46,";":47,$accept:0,$end:1},terminals_:{2:"error",5:"GG",7:"EOF",8:":",9:"DIR",12:"OPT",13:"NL",19:"acc_title",20:"acc_title_value",21:"acc_descr",22:"acc_descr_value",23:"acc_descr_multiline_value",24:"section",26:"CHECKOUT",28:"BRANCH",29:"ORDER",30:"NUM",31:"CHERRY_PICK",32:"COMMIT_ID",33:"STR",34:"PARENT_COMMIT",35:"COMMIT_TAG",36:"EMPTYSTR",37:"MERGE",38:"COMMIT_TYPE",40:"COMMIT",42:"COMMIT_MSG",43:"NORMAL",44:"REVERSE",45:"HIGHLIGHT",46:"ID",47:";"},productions_:[0,[3,2],[3,3],[3,4],[3,5],[6,0],[6,2],[10,2],[10,1],[11,0],[11,2],[14,2],[14,1],[15,1],[15,1],[15,1],[15,2],[15,2],[15,1],[15,1],[15,1],[15,2],[25,2],[25,4],[18,3],[18,5],[18,5],[18,7],[18,7],[18,5],[18,5],[18,5],[18,7],[18,7],[18,7],[18,7],[17,2],[17,4],[17,4],[17,4],[17,6],[17,6],[17,6],[17,6],[17,6],[17,6],[17,8],[17,8],[17,8],[17,8],[17,8],[17,8],[16,2],[16,3],[16,3],[16,5],[16,5],[16,3],[16,5],[16,5],[16,5],[16,5],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,3],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[41,0],[41,1],[39,1],[39,1],[39,1],[27,1],[27,1],[4,1],[4,1],[4,1]],performAction:d(function(l,g,y,n,L,e,$){var t=e.length-1;switch(L){case 2:return e[t];case 3:return e[t-1];case 4:return n.setDirection(e[t-3]),e[t-1];break;case 6:n.setOptions(e[t-1]),this.$=e[t];break;case 7:e[t-1]+=e[t],this.$=e[t-1];break;case 9:this.$=[];break;case 10:e[t-1].push(e[t]),this.$=e[t-1];break;case 11:this.$=e[t-1];break;case 16:this.$=e[t].trim(),n.setAccTitle(this.$);break;case 17:case 18:this.$=e[t].trim(),n.setAccDescription(this.$);break;case 19:n.addSection(e[t].substr(8)),this.$=e[t].substr(8);break;case 21:n.checkout(e[t]);break;case 22:n.branch(e[t]);break;case 23:n.branch(e[t-2],e[t]);break;case 24:n.cherryPick(e[t],"",void 0);break;case 25:n.cherryPick(e[t-2],"",void 0,e[t]);break;case 26:n.cherryPick(e[t-2],"",e[t]);break;case 27:n.cherryPick(e[t-4],"",e[t],e[t-2]);break;case 28:n.cherryPick(e[t-4],"",e[t-2],e[t]);break;case 29:n.cherryPick(e[t],"",e[t-2]);break;case 30:n.cherryPick(e[t],"","");break;case 31:n.cherryPick(e[t-2],"","");break;case 32:n.cherryPick(e[t-4],"","",e[t-2]);break;case 33:n.cherryPick(e[t-4],"","",e[t]);break;case 34:n.cherryPick(e[t-2],"",e[t-4],e[t]);break;case 35:n.cherryPick(e[t-2],"","",e[t]);break;case 36:n.merge(e[t],"","","");break;case 37:n.merge(e[t-2],e[t],"","");break;case 38:n.merge(e[t-2],"",e[t],"");break;case 39:n.merge(e[t-2],"","",e[t]);break;case 40:n.merge(e[t-4],e[t],"",e[t-2]);break;case 41:n.merge(e[t-4],"",e[t],e[t-2]);break;case 42:n.merge(e[t-4],"",e[t-2],e[t]);break;case 43:n.merge(e[t-4],e[t-2],e[t],"");break;case 44:n.merge(e[t-4],e[t-2],"",e[t]);break;case 45:n.merge(e[t-4],e[t],e[t-2],"");break;case 46:n.merge(e[t-6],e[t-4],e[t-2],e[t]);break;case 47:n.merge(e[t-6],e[t],e[t-4],e[t-2]);break;case 48:n.merge(e[t-6],e[t-4],e[t],e[t-2]);break;case 49:n.merge(e[t-6],e[t-2],e[t-4],e[t]);break;case 50:n.merge(e[t-6],e[t],e[t-2],e[t-4]);break;case 51:n.merge(e[t-6],e[t-2],e[t],e[t-4]);break;case 52:n.commit(e[t]);break;case 53:n.commit("","",n.commitType.NORMAL,e[t]);break;case 54:n.commit("","",e[t],"");break;case 55:n.commit("","",e[t],e[t-2]);break;case 56:n.commit("","",e[t-2],e[t]);break;case 57:n.commit("",e[t],n.commitType.NORMAL,"");break;case 58:n.commit("",e[t-2],n.commitType.NORMAL,e[t]);break;case 59:n.commit("",e[t],n.commitType.NORMAL,e[t-2]);break;case 60:n.commit("",e[t-2],e[t],"");break;case 61:n.commit("",e[t],e[t-2],"");break;case 62:n.commit("",e[t-4],e[t-2],e[t]);break;case 63:n.commit("",e[t-4],e[t],e[t-2]);break;case 64:n.commit("",e[t-2],e[t-4],e[t]);break;case 65:n.commit("",e[t],e[t-4],e[t-2]);break;case 66:n.commit("",e[t],e[t-2],e[t-4]);break;case 67:n.commit("",e[t-2],e[t],e[t-4]);break;case 68:n.commit(e[t],"",n.commitType.NORMAL,"");break;case 69:n.commit(e[t],"",n.commitType.NORMAL,e[t-2]);break;case 70:n.commit(e[t-2],"",n.commitType.NORMAL,e[t]);break;case 71:n.commit(e[t-2],"",e[t],"");break;case 72:n.commit(e[t],"",e[t-2],"");break;case 73:n.commit(e[t],e[t-2],n.commitType.NORMAL,"");break;case 74:n.commit(e[t-2],e[t],n.commitType.NORMAL,"");break;case 75:n.commit(e[t-4],"",e[t-2],e[t]);break;case 76:n.commit(e[t-4],"",e[t],e[t-2]);break;case 77:n.commit(e[t-2],"",e[t-4],e[t]);break;case 78:n.commit(e[t],"",e[t-4],e[t-2]);break;case 79:n.commit(e[t],"",e[t-2],e[t-4]);break;case 80:n.commit(e[t-2],"",e[t],e[t-4]);break;case 81:n.commit(e[t-4],e[t],e[t-2],"");break;case 82:n.commit(e[t-4],e[t-2],e[t],"");break;case 83:n.commit(e[t-2],e[t],e[t-4],"");break;case 84:n.commit(e[t],e[t-2],e[t-4],"");break;case 85:n.commit(e[t],e[t-4],e[t-2],"");break;case 86:n.commit(e[t-2],e[t-4],e[t],"");break;case 87:n.commit(e[t-4],e[t],n.commitType.NORMAL,e[t-2]);break;case 88:n.commit(e[t-4],e[t-2],n.commitType.NORMAL,e[t]);break;case 89:n.commit(e[t-2],e[t],n.commitType.NORMAL,e[t-4]);break;case 90:n.commit(e[t],e[t-2],n.commitType.NORMAL,e[t-4]);break;case 91:n.commit(e[t],e[t-4],n.commitType.NORMAL,e[t-2]);break;case 92:n.commit(e[t-2],e[t-4],n.commitType.NORMAL,e[t]);break;case 93:n.commit(e[t-6],e[t-4],e[t-2],e[t]);break;case 94:n.commit(e[t-6],e[t-4],e[t],e[t-2]);break;case 95:n.commit(e[t-6],e[t-2],e[t-4],e[t]);break;case 96:n.commit(e[t-6],e[t],e[t-4],e[t-2]);break;case 97:n.commit(e[t-6],e[t-2],e[t],e[t-4]);break;case 98:n.commit(e[t-6],e[t],e[t-2],e[t-4]);break;case 99:n.commit(e[t-4],e[t-6],e[t-2],e[t]);break;case 100:n.commit(e[t-4],e[t-6],e[t],e[t-2]);break;case 101:n.commit(e[t-2],e[t-6],e[t-4],e[t]);break;case 102:n.commit(e[t],e[t-6],e[t-4],e[t-2]);break;case 103:n.commit(e[t-2],e[t-6],e[t],e[t-4]);break;case 104:n.commit(e[t],e[t-6],e[t-2],e[t-4]);break;case 105:n.commit(e[t],e[t-4],e[t-2],e[t-6]);break;case 106:n.commit(e[t-2],e[t-4],e[t],e[t-6]);break;case 107:n.commit(e[t],e[t-2],e[t-4],e[t-6]);break;case 108:n.commit(e[t-2],e[t],e[t-4],e[t-6]);break;case 109:n.commit(e[t-4],e[t-2],e[t],e[t-6]);break;case 110:n.commit(e[t-4],e[t],e[t-2],e[t-6]);break;case 111:n.commit(e[t-2],e[t-4],e[t-6],e[t]);break;case 112:n.commit(e[t],e[t-4],e[t-6],e[t-2]);break;case 113:n.commit(e[t-2],e[t],e[t-6],e[t-4]);break;case 114:n.commit(e[t],e[t-2],e[t-6],e[t-4]);break;case 115:n.commit(e[t-4],e[t-2],e[t-6],e[t]);break;case 116:n.commit(e[t-4],e[t],e[t-6],e[t-2]);break;case 117:this.$="";break;case 118:this.$=e[t];break;case 119:this.$=n.commitType.NORMAL;break;case 120:this.$=n.commitType.REVERSE;break;case 121:this.$=n.commitType.HIGHLIGHT;break}},"anonymous"),table:[{3:1,4:2,5:c,7:o,13:m,47:i},{1:[3]},{3:7,4:2,5:c,7:o,13:m,47:i},{6:8,7:a,8:[1,9],9:[1,10],10:11,13:p},r(h,[2,124]),r(h,[2,125]),r(h,[2,126]),{1:[2,1]},{7:[1,13]},{6:14,7:a,10:11,13:p},{8:[1,15]},r(b,[2,9],{11:16,12:[1,17]}),r(u,[2,8]),{1:[2,2]},{7:[1,18]},{6:19,7:a,10:11,13:p},{7:[2,6],13:[1,22],14:20,15:21,16:23,17:24,18:25,19:[1,26],21:[1,27],23:[1,28],24:[1,29],25:30,26:[1,31],28:[1,35],31:[1,34],37:[1,33],40:[1,32]},r(u,[2,7]),{1:[2,3]},{7:[1,36]},r(b,[2,10]),{4:37,7:o,13:m,47:i},r(b,[2,12]),r(s,[2,13]),r(s,[2,14]),r(s,[2,15]),{20:[1,38]},{22:[1,39]},r(s,[2,18]),r(s,[2,19]),r(s,[2,20]),{27:40,33:w,46:T},r(s,[2,117],{41:43,32:[1,46],33:[1,48],35:[1,44],38:[1,45],42:[1,47]}),{27:49,33:w,46:T},{32:[1,50],35:[1,51]},{27:52,33:w,46:T},{1:[2,4]},r(b,[2,11]),r(s,[2,16]),r(s,[2,17]),r(s,[2,21]),r(x,[2,122]),r(x,[2,123]),r(s,[2,52]),{33:[1,53]},{39:54,43:f,44:_,45:k},{33:[1,58]},{33:[1,59]},r(s,[2,118]),r(s,[2,36],{32:[1,60],35:[1,62],38:[1,61]}),{33:[1,63]},{33:[1,64],36:[1,65]},r(s,[2,22],{29:[1,66]}),r(s,[2,53],{32:[1,68],38:[1,67],42:[1,69]}),r(s,[2,54],{32:[1,71],35:[1,70],42:[1,72]}),r(M,[2,119]),r(M,[2,120]),r(M,[2,121]),r(s,[2,57],{35:[1,73],38:[1,74],42:[1,75]}),r(s,[2,68],{32:[1,78],35:[1,76],38:[1,77]}),{33:[1,79]},{39:80,43:f,44:_,45:k},{33:[1,81]},r(s,[2,24],{34:[1,82],35:[1,83]}),{32:[1,84]},{32:[1,85]},{30:[1,86]},{39:87,43:f,44:_,45:k},{33:[1,88]},{33:[1,89]},{33:[1,90]},{33:[1,91]},{33:[1,92]},{33:[1,93]},{39:94,43:f,44:_,45:k},{33:[1,95]},{33:[1,96]},{39:97,43:f,44:_,45:k},{33:[1,98]},r(s,[2,37],{35:[1,100],38:[1,99]}),r(s,[2,38],{32:[1,102],35:[1,101]}),r(s,[2,39],{32:[1,103],38:[1,104]}),{33:[1,105]},{33:[1,106],36:[1,107]},{33:[1,108]},{33:[1,109]},r(s,[2,23]),r(s,[2,55],{32:[1,110],42:[1,111]}),r(s,[2,59],{38:[1,112],42:[1,113]}),r(s,[2,69],{32:[1,115],38:[1,114]}),r(s,[2,56],{32:[1,116],42:[1,117]}),r(s,[2,61],{35:[1,118],42:[1,119]}),r(s,[2,72],{32:[1,121],35:[1,120]}),r(s,[2,58],{38:[1,122],42:[1,123]}),r(s,[2,60],{35:[1,124],42:[1,125]}),r(s,[2,73],{35:[1,127],38:[1,126]}),r(s,[2,70],{32:[1,129],38:[1,128]}),r(s,[2,71],{32:[1,131],35:[1,130]}),r(s,[2,74],{35:[1,133],38:[1,132]}),{39:134,43:f,44:_,45:k},{33:[1,135]},{33:[1,136]},{33:[1,137]},{33:[1,138]},{39:139,43:f,44:_,45:k},r(s,[2,25],{35:[1,140]}),r(s,[2,26],{34:[1,141]}),r(s,[2,31],{34:[1,142]}),r(s,[2,29],{34:[1,143]}),r(s,[2,30],{34:[1,144]}),{33:[1,145]},{33:[1,146]},{39:147,43:f,44:_,45:k},{33:[1,148]},{39:149,43:f,44:_,45:k},{33:[1,150]},{33:[1,151]},{33:[1,152]},{33:[1,153]},{33:[1,154]},{33:[1,155]},{33:[1,156]},{39:157,43:f,44:_,45:k},{33:[1,158]},{33:[1,159]},{33:[1,160]},{39:161,43:f,44:_,45:k},{33:[1,162]},{39:163,43:f,44:_,45:k},{33:[1,164]},{33:[1,165]},{33:[1,166]},{39:167,43:f,44:_,45:k},{33:[1,168]},r(s,[2,43],{35:[1,169]}),r(s,[2,44],{38:[1,170]}),r(s,[2,42],{32:[1,171]}),r(s,[2,45],{35:[1,172]}),r(s,[2,40],{38:[1,173]}),r(s,[2,41],{32:[1,174]}),{33:[1,175],36:[1,176]},{33:[1,177]},{33:[1,178]},{33:[1,179]},{33:[1,180]},r(s,[2,66],{42:[1,181]}),r(s,[2,79],{32:[1,182]}),r(s,[2,67],{42:[1,183]}),r(s,[2,90],{38:[1,184]}),r(s,[2,80],{32:[1,185]}),r(s,[2,89],{38:[1,186]}),r(s,[2,65],{42:[1,187]}),r(s,[2,78],{32:[1,188]}),r(s,[2,64],{42:[1,189]}),r(s,[2,84],{35:[1,190]}),r(s,[2,77],{32:[1,191]}),r(s,[2,83],{35:[1,192]}),r(s,[2,63],{42:[1,193]}),r(s,[2,91],{38:[1,194]}),r(s,[2,62],{42:[1,195]}),r(s,[2,85],{35:[1,196]}),r(s,[2,86],{35:[1,197]}),r(s,[2,92],{38:[1,198]}),r(s,[2,76],{32:[1,199]}),r(s,[2,87],{38:[1,200]}),r(s,[2,75],{32:[1,201]}),r(s,[2,81],{35:[1,202]}),r(s,[2,82],{35:[1,203]}),r(s,[2,88],{38:[1,204]}),{33:[1,205]},{39:206,43:f,44:_,45:k},{33:[1,207]},{33:[1,208]},{39:209,43:f,44:_,45:k},{33:[1,210]},r(s,[2,27]),r(s,[2,32]),r(s,[2,28]),r(s,[2,33]),r(s,[2,34]),r(s,[2,35]),{33:[1,211]},{33:[1,212]},{33:[1,213]},{39:214,43:f,44:_,45:k},{33:[1,215]},{39:216,43:f,44:_,45:k},{33:[1,217]},{33:[1,218]},{33:[1,219]},{33:[1,220]},{33:[1,221]},{33:[1,222]},{33:[1,223]},{39:224,43:f,44:_,45:k},{33:[1,225]},{33:[1,226]},{33:[1,227]},{39:228,43:f,44:_,45:k},{33:[1,229]},{39:230,43:f,44:_,45:k},{33:[1,231]},{33:[1,232]},{33:[1,233]},{39:234,43:f,44:_,45:k},r(s,[2,46]),r(s,[2,48]),r(s,[2,47]),r(s,[2,49]),r(s,[2,51]),r(s,[2,50]),r(s,[2,107]),r(s,[2,108]),r(s,[2,105]),r(s,[2,106]),r(s,[2,110]),r(s,[2,109]),r(s,[2,114]),r(s,[2,113]),r(s,[2,112]),r(s,[2,111]),r(s,[2,116]),r(s,[2,115]),r(s,[2,104]),r(s,[2,103]),r(s,[2,102]),r(s,[2,101]),r(s,[2,99]),r(s,[2,100]),r(s,[2,98]),r(s,[2,97]),r(s,[2,96]),r(s,[2,95]),r(s,[2,93]),r(s,[2,94])],defaultActions:{7:[2,1],13:[2,2],18:[2,3],36:[2,4]},parseError:d(function(l,g){if(g.recoverable)this.trace(l);else{var y=new Error(l);throw y.hash=g,y}},"parseError"),parse:d(function(l){var g=this,y=[0],n=[],L=[null],e=[],$=this.table,t="",ie=0,be=0,xe=0,je=2,de=1,Ke=e.slice.call(arguments,1),G=Object.create(this.lexer),U={yy:{}};for(var le in this.yy)Object.prototype.hasOwnProperty.call(this.yy,le)&&(U.yy[le]=this.yy[le]);G.setInput(l,U.yy),U.yy.lexer=G,U.yy.parser=this,typeof G.yylloc>"u"&&(G.yylloc={});var he=G.yylloc;e.push(he);var Ue=G.options&&G.options.ranges;typeof U.yy.parseError=="function"?this.parseError=U.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;function yt(z){y.length=y.length-2*z,L.length=L.length-z,e.length=e.length-z}d(yt,"popStack");function We(){var z;return z=n.pop()||G.lex()||de,typeof z!="number"&&(z instanceof Array&&(n=z,z=n.pop()),z=g.symbols_[z]||z),z}d(We,"lex");for(var D,me,W,q,_t,pe,X={},se,j,ke,ae;;){if(W=y[y.length-1],this.defaultActions[W]?q=this.defaultActions[W]:((D===null||typeof D>"u")&&(D=We()),q=$[W]&&$[W][D]),typeof q>"u"||!q.length||!q[0]){var fe="";ae=[];for(se in $[W])this.terminals_[se]&&se>je&&ae.push("'"+this.terminals_[se]+"'");G.showPosition?fe="Parse error on line "+(ie+1)+`:
`+G.showPosition()+`
Expecting `+ae.join(", ")+", got '"+(this.terminals_[D]||D)+"'":fe="Parse error on line "+(ie+1)+": Unexpected "+(D==de?"end of input":"'"+(this.terminals_[D]||D)+"'"),this.parseError(fe,{text:G.match,token:this.terminals_[D]||D,line:G.yylineno,loc:he,expected:ae})}if(q[0]instanceof Array&&q.length>1)throw new Error("Parse Error: multiple actions possible at state: "+W+", token: "+D);switch(q[0]){case 1:y.push(D),L.push(G.yytext),e.push(G.yylloc),y.push(q[1]),D=null,me?(D=me,me=null):(be=G.yyleng,t=G.yytext,ie=G.yylineno,he=G.yylloc,xe>0&&xe--);break;case 2:if(j=this.productions_[q[1]][1],X.$=L[L.length-j],X._$={first_line:e[e.length-(j||1)].first_line,last_line:e[e.length-1].last_line,first_column:e[e.length-(j||1)].first_column,last_column:e[e.length-1].last_column},Ue&&(X._$.range=[e[e.length-(j||1)].range[0],e[e.length-1].range[1]]),pe=this.performAction.apply(X,[t,be,ie,U.yy,q[1],L,e].concat(Ke)),typeof pe<"u")return pe;j&&(y=y.slice(0,-1*j*2),L=L.slice(0,-1*j),e=e.slice(0,-1*j)),y.push(this.productions_[q[1]][0]),L.push(X.$),e.push(X._$),ke=$[y[y.length-2]][y[y.length-1]],y.push(ke);break;case 3:return!0}}return!0},"parse")},P=function(){var A={EOF:1,parseError:d(function(g,y){if(this.yy.parser)this.yy.parser.parseError(g,y);else throw new Error(g)},"parseError"),setInput:function(l,g){return this.yy=g||this.yy||{},this._input=l,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var l=this._input[0];this.yytext+=l,this.yyleng++,this.offset++,this.match+=l,this.matched+=l;var g=l.match(/(?:\r\n?|\n).*/g);return g?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),l},unput:function(l){var g=l.length,y=l.split(/(?:\r\n?|\n)/g);this._input=l+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-g),this.offset-=g;var n=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),y.length-1&&(this.yylineno-=y.length-1);var L=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:y?(y.length===n.length?this.yylloc.first_column:0)+n[n.length-y.length].length-y[0].length:this.yylloc.first_column-g},this.options.ranges&&(this.yylloc.range=[L[0],L[0]+this.yyleng-g]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){if(this.options.backtrack_lexer)this._backtrack=!0;else return this.parseError("Lexical error on line "+(this.yylineno+1)+`. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).
`+this.showPosition(),{text:"",token:null,line:this.yylineno});return this},less:function(l){this.unput(this.match.slice(l))},pastInput:function(){var l=this.matched.substr(0,this.matched.length-this.match.length);return(l.length>20?"...":"")+l.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var l=this.match;return l.length<20&&(l+=this._input.substr(0,20-l.length)),(l.substr(0,20)+(l.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var l=this.pastInput(),g=new Array(l.length+1).join("-");return l+this.upcomingInput()+`
`+g+"^"},test_match:function(l,g){var y,n,L;if(this.options.backtrack_lexer&&(L={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(L.yylloc.range=this.yylloc.range.slice(0))),n=l[0].match(/(?:\r\n?|\n).*/g),n&&(this.yylineno+=n.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:n?n[n.length-1].length-n[n.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+l[0].length},this.yytext+=l[0],this.match+=l[0],this.matches=l,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(l[0].length),this.matched+=l[0],y=this.performAction.call(this,this.yy,this,g,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),y)return y;if(this._backtrack){for(var e in L)this[e]=L[e];return!1}return!1},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var l,g,y,n;this._more||(this.yytext="",this.match="");for(var L=this._currentRules(),e=0;e<L.length;e++)if(y=this._input.match(this.rules[L[e]]),y&&(!g||y[0].length>g[0].length)){if(g=y,n=e,this.options.backtrack_lexer){if(l=this.test_match(y,L[e]),l!==!1)return l;if(this._backtrack){g=!1;continue}else return!1}else if(!this.options.flex)break}return g?(l=this.test_match(g,L[n]),l!==!1?l:!1):this._input===""?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+`. Unrecognized text.
`+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:d(function(){var g=this.next();return g||this.lex()},"lex"),begin:d(function(g){this.conditionStack.push(g)},"begin"),popState:d(function(){var g=this.conditionStack.length-1;return g>0?this.conditionStack.pop():this.conditionStack[0]},"popState"),_currentRules:d(function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},"_currentRules"),topState:d(function(g){return g=this.conditionStack.length-1-Math.abs(g||0),g>=0?this.conditionStack[g]:"INITIAL"},"topState"),pushState:d(function(g){this.begin(g)},"pushState"),stateStackSize:d(function(){return this.conditionStack.length},"stateStackSize"),options:{"case-insensitive":!0},performAction:d(function(g,y,n,L){var e=L;switch(n){case 0:return this.begin("acc_title"),19;break;case 1:return this.popState(),"acc_title_value";break;case 2:return this.begin("acc_descr"),21;break;case 3:return this.popState(),"acc_descr_value";break;case 4:this.begin("acc_descr_multiline");break;case 5:this.popState();break;case 6:return"acc_descr_multiline_value";case 7:return 13;case 8:break;case 9:break;case 10:return 5;case 11:return 40;case 12:return 32;case 13:return 38;case 14:return 42;case 15:return 43;case 16:return 44;case 17:return 45;case 18:return 35;case 19:return 28;case 20:return 29;case 21:return 37;case 22:return 31;case 23:return 34;case 24:return 26;case 25:return 9;case 26:return 9;case 27:return 9;case 28:return 8;case 29:return"CARET";case 30:this.begin("options");break;case 31:this.popState();break;case 32:return 12;case 33:return 36;case 34:this.begin("string");break;case 35:this.popState();break;case 36:return 33;case 37:return 30;case 38:return 46;case 39:return 7;case 40:break}},"anonymous"),rules:[/^(?:accTitle\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*\{\s*)/i,/^(?:[\}])/i,/^(?:[^\}]*)/i,/^(?:(\r?\n)+)/i,/^(?:#[^\n]*)/i,/^(?:%[^\n]*)/i,/^(?:gitGraph\b)/i,/^(?:commit(?=\s|$))/i,/^(?:id:)/i,/^(?:type:)/i,/^(?:msg:)/i,/^(?:NORMAL\b)/i,/^(?:REVERSE\b)/i,/^(?:HIGHLIGHT\b)/i,/^(?:tag:)/i,/^(?:branch(?=\s|$))/i,/^(?:order:)/i,/^(?:merge(?=\s|$))/i,/^(?:cherry-pick(?=\s|$))/i,/^(?:parent:)/i,/^(?:\b(checkout|switch)(?=\s|$))/i,/^(?:LR\b)/i,/^(?:TB\b)/i,/^(?:BT\b)/i,/^(?::)/i,/^(?:\^)/i,/^(?:options\r?\n)/i,/^(?:[ \r\n\t]+end\b)/i,/^(?:[\s\S]+(?=[ \r\n\t]+end))/i,/^(?:["]["])/i,/^(?:["])/i,/^(?:["])/i,/^(?:[^"]*)/i,/^(?:[0-9]+(?=\s|$))/i,/^(?:\w([-\./\w]*[-\w])?)/i,/^(?:$)/i,/^(?:\s+)/i],conditions:{acc_descr_multiline:{rules:[5,6],inclusive:!1},acc_descr:{rules:[3],inclusive:!1},acc_title:{rules:[1],inclusive:!1},options:{rules:[31,32],inclusive:!1},string:{rules:[35,36],inclusive:!1},INITIAL:{rules:[0,2,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,37,38,39,40],inclusive:!0}}};return A}();F.lexer=P;function N(){this.yy={}}return d(N,"Parser"),N.prototype=F,F.Parser=N,new N}();ue.parser=ue;var Ge=ue;var ne=R().gitGraph.mainBranchName,Je=R().gitGraph.mainBranchOrder,S=new Map,V=null,ee=new Map;ee.set(ne,{name:ne,order:Je});var C=new Map;C.set(ne,V);var O=ne,Se="LR",J=0;function ge(){return _e({length:7})}d(ge,"getId");function Qe(r,c){let o=Object.create(null);return r.reduce((m,i)=>{let a=c(i);return o[a]||(o[a]=!0,m.push(i)),m},[])}d(Qe,"uniqBy");var Xe=d(function(r){Se=r},"setDirection"),Ie={},Ze=d(function(r){H.debug("options str",r),r=r&&r.trim(),r=r||"{}";try{Ie=JSON.parse(r)}catch(c){H.error("error while parsing gitGraph options",c.message)}},"setOptions"),$e=d(function(){return Ie},"getOptions"),et=d(function(r,c,o,m){H.debug("Entering commit:",r,c,o,m),c=Y.sanitizeText(c,R()),r=Y.sanitizeText(r,R()),m=Y.sanitizeText(m,R());let i={id:c||J+"-"+ge(),message:r,seq:J++,type:o||Z.NORMAL,tag:m||"",parents:V==null?[]:[V.id],branch:O};V=i,S.set(i.id,i),C.set(O,i.id),H.debug("in pushCommit "+i.id)},"commit"),tt=d(function(r,c){if(r=Y.sanitizeText(r,R()),!C.has(r))C.set(r,V!=null?V.id:null),ee.set(r,{name:r,order:c?parseInt(c,10):null}),Ae(r),H.debug("in createBranch");else{let o=new Error('Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using "checkout '+r+'")');throw o.hash={text:"branch "+r,token:"branch "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"checkout '+r+'"']},o}},"branch"),rt=d(function(r,c,o,m){r=Y.sanitizeText(r,R()),c=Y.sanitizeText(c,R());let i=S.get(C.get(O)),a=S.get(C.get(r));if(O===r){let h=new Error('Incorrect usage of "merge". Cannot merge a branch to itself');throw h.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},h}else if(i===void 0||!i){let h=new Error('Incorrect usage of "merge". Current branch ('+O+")has no commits");throw h.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["commit"]},h}else if(C.has(r)){if(a===void 0||!a){let h=new Error('Incorrect usage of "merge". Branch to be merged ('+r+") has no commits");throw h.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"commit"']},h}else if(i===a){let h=new Error('Incorrect usage of "merge". Both branches have same head');throw h.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},h}else if(c&&S.has(c)){let h=new Error('Incorrect usage of "merge". Commit with id:'+c+" already exists, use different custom Id");throw h.hash={text:"merge "+r+c+o+m,token:"merge "+r+c+o+m,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["merge "+r+" "+c+"_UNIQUE "+o+" "+m]},h}}else{let h=new Error('Incorrect usage of "merge". Branch to be merged ('+r+") does not exist");throw h.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch "+r]},h}let p={id:c||J+"-"+ge(),message:"merged branch "+r+" into "+O,seq:J++,parents:[V==null?null:V.id,C.get(r)],branch:O,type:Z.MERGE,customType:o,customId:!!c,tag:m||""};V=p,S.set(p.id,p),C.set(O,p.id),H.debug(C),H.debug("in mergeBranch")},"merge"),it=d(function(r,c,o,m){if(H.debug("Entering cherryPick:",r,c,o),r=Y.sanitizeText(r,R()),c=Y.sanitizeText(c,R()),o=Y.sanitizeText(o,R()),m=Y.sanitizeText(m,R()),!r||!S.has(r)){let p=new Error('Incorrect usage of "cherryPick". Source commit id should exist and provided');throw p.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},p}let i=S.get(r),a=i.branch;if(m&&!(Array.isArray(i.parents)&&i.parents.includes(m)))throw new Error("Invalid operation: The specified parent commit is not an immediate parent of the cherry-picked commit.");if(i.type===Z.MERGE&&!m)throw new Error("Incorrect usage of cherry-pick: If the source commit is a merge commit, an immediate parent commit must be specified.");if(!c||!S.has(c)){if(a===O){let b=new Error('Incorrect usage of "cherryPick". Source commit is already on current branch');throw b.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},b}let p=S.get(C.get(O));if(p===void 0||!p){let b=new Error('Incorrect usage of "cherry-pick". Current branch ('+O+")has no commits");throw b.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},b}let h={id:J+"-"+ge(),message:"cherry-picked "+i+" into "+O,seq:J++,parents:[V==null?null:V.id,i.id],branch:O,type:Z.CHERRY_PICK,tag:o??`cherry-pick:${i.id}${i.type===Z.MERGE?`|parent:${m}`:""}`};V=h,S.set(h.id,h),C.set(O,h.id),H.debug(C),H.debug("in cherryPick")}},"cherryPick"),Ae=d(function(r){if(r=Y.sanitizeText(r,R()),C.has(r)){O=r;let c=C.get(O);V=S.get(c)}else{let c=new Error('Trying to checkout branch which is not yet created. (Help try using "branch '+r+'")');throw c.hash={text:"checkout "+r,token:"checkout "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"branch '+r+'"']},c}},"checkout");function Oe(r,c,o){let m=r.indexOf(c);m===-1?r.push(o):r.splice(m,1,o)}d(Oe,"upsert");function Be(r){let c=r.reduce((i,a)=>i.seq>a.seq?i:a,r[0]),o="";r.forEach(function(i){i===c?o+="	*":o+="	|"});let m=[o,c.id,c.seq];for(let i in C)C.get(i)===c.id&&m.push(i);if(H.debug(m.join(" ")),c.parents&&c.parents.length==2){let i=S.get(c.parents[0]);Oe(r,c,i),r.push(S.get(c.parents[1]))}else{if(c.parents.length==0)return;{let i=S.get(c.parents);Oe(r,c,i)}}r=Qe(r,i=>i.id),Be(r)}d(Be,"prettyPrintCommitHistory");var st=d(function(){H.debug(S);let r=Ne()[0];Be([r])},"prettyPrint"),at=d(function(){S=new Map,V=null;let r=R().gitGraph.mainBranchName,c=R().gitGraph.mainBranchOrder;C=new Map,C.set(r,null),ee=new Map,ee.set(r,{name:r,order:c}),O=r,J=0,Ee()},"clear"),nt=d(function(){return[...ee.values()].map((c,o)=>c.order!==null?c:{...c,order:parseFloat(`0.${o}`,10)}).sort((c,o)=>c.order-o.order).map(({name:c})=>({name:c}))},"getBranchesAsObjArray"),ct=d(function(){return C},"getBranches"),ot=d(function(){return S},"getCommits"),Ne=d(function(){let r=[...S.values()];return r.forEach(function(c){H.debug(c.id)}),r.sort((c,o)=>c.seq-o.seq),r},"getCommitsArray"),lt=d(function(){return O},"getCurrentBranch"),ht=d(function(){return Se},"getDirection"),mt=d(function(){return V},"getHead"),Z={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},He={getConfig:()=>R().gitGraph,setDirection:Xe,setOptions:Ze,getOptions:$e,commit:et,branch:tt,merge:rt,cherryPick:it,checkout:Ae,prettyPrint:st,clear:at,getBranchesAsObjArray:nt,getBranches:ct,getCommits:ot,getCommitsArray:Ne,getCurrentBranch:lt,getDirection:ht,getHead:mt,setAccTitle:we,getAccTitle:Le,getAccDescription:Re,setAccDescription:Me,setDiagramTitle:Ce,getDiagramTitle:ve,commitType:Z};var te=new Map,v={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},Q=8,I={},B={},ce=[],K=0,E="LR",oe=30,pt=d(()=>{I=new Map,B=new Map,te=new Map,K=0,ce=[],E="LR"},"clear"),Ve=d(r=>{let c=document.createElementNS("http://www.w3.org/2000/svg","text"),o=[];typeof r=="string"?o=r.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(r)?o=r:o=[];for(let m of o){let i=document.createElementNS("http://www.w3.org/2000/svg","tspan");i.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),i.setAttribute("dy","1em"),i.setAttribute("x","0"),i.setAttribute("class","row"),i.textContent=m.trim(),c.appendChild(i)}return c},"drawText"),ze=d(r=>{let c="",o=0;return r.forEach(m=>{let i=E==="TB"||E==="BT"?B.get(m).y:B.get(m).x;i>=o&&(c=m,o=i)}),c||void 0},"findClosestParent"),qe=d(r=>{let c="",o=1/0;return r.forEach(m=>{let i=B.get(m).y;i<=o&&(c=m,o=i)}),c||void 0},"findClosestParentBT"),ft=d((r,c,o,m,i)=>{let a=o,p=o,h=[];r.forEach(b=>{let u=c.get(b);if(u.parents.length){let T=ze(u.parents);a=B.get(T).y+m,a>=p&&(p=a)}else h.push(u);let s=I.get(u.branch).pos,w=a+i;B.set(u.id,{x:s,y:w})}),a=p,h.forEach(b=>{let s=a+o,w=I.get(b.branch).pos;B.set(b.id,{x:w,y:s})}),r.forEach(b=>{let u=c.get(b);if(u.parents.length){let s=qe(u.parents);a=B.get(s).y-m,a<=p&&(p=a);let w=I.get(u.branch).pos,T=a-i;B.set(u.id,{x:w,y:T})}})},"setParallelBTPos"),De=d((r,c,o)=>{let m=R().gitGraph,i=r.append("g").attr("class","commit-bullets"),a=r.append("g").attr("class","commit-labels"),p=0;(E==="TB"||E==="BT")&&(p=oe);let h=[...c.keys()],b=m.parallelCommits,u=10,s=40,w=E!=="BT"||E==="BT"&&b?h.sort((T,x)=>c.get(T).seq-c.get(x).seq):h.sort((T,x)=>c.get(T).seq-c.get(x).seq).reverse();E==="BT"&&b&&(ft(w,c,p,s,u),w=w.reverse()),w.forEach(T=>{let x=c.get(T);if(b)if(x.parents.length){let M=E==="BT"?qe(x.parents):ze(x.parents);E==="TB"?p=B.get(M).y+s:E==="BT"?p=B.get(T).y-s:p=B.get(M).x+s}else E==="TB"?p=oe:E==="BT"?p=B.get(T).y-s:p=0;let f=E==="BT"&&b?p:p+u,_=E==="TB"||E==="BT"?f:I.get(x.branch).pos,k=E==="TB"||E==="BT"?I.get(x.branch).pos:f;if(o){let M,F=x.customType!==void 0&&x.customType!==""?x.customType:x.type;switch(F){case v.NORMAL:M="commit-normal";break;case v.REVERSE:M="commit-reverse";break;case v.HIGHLIGHT:M="commit-highlight";break;case v.MERGE:M="commit-merge";break;case v.CHERRY_PICK:M="commit-cherry-pick";break;default:M="commit-normal"}if(F===v.HIGHLIGHT){let P=i.append("rect");P.attr("x",k-10),P.attr("y",_-10),P.attr("height",20),P.attr("width",20),P.attr("class",`commit ${x.id} commit-highlight${I.get(x.branch).index%Q} ${M}-outer`),i.append("rect").attr("x",k-6).attr("y",_-6).attr("height",12).attr("width",12).attr("class",`commit ${x.id} commit${I.get(x.branch).index%Q} ${M}-inner`)}else if(F===v.CHERRY_PICK)i.append("circle").attr("cx",k).attr("cy",_).attr("r",10).attr("class",`commit ${x.id} ${M}`),i.append("circle").attr("cx",k-3).attr("cy",_+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${x.id} ${M}`),i.append("circle").attr("cx",k+3).attr("cy",_+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${x.id} ${M}`),i.append("line").attr("x1",k+3).attr("y1",_+1).attr("x2",k).attr("y2",_-5).attr("stroke","#fff").attr("class",`commit ${x.id} ${M}`),i.append("line").attr("x1",k-3).attr("y1",_+1).attr("x2",k).attr("y2",_-5).attr("stroke","#fff").attr("class",`commit ${x.id} ${M}`);else{let P=i.append("circle");if(P.attr("cx",k),P.attr("cy",_),P.attr("r",x.type===v.MERGE?9:10),P.attr("class",`commit ${x.id} commit${I.get(x.branch).index%Q}`),F===v.MERGE){let N=i.append("circle");N.attr("cx",k),N.attr("cy",_),N.attr("r",6),N.attr("class",`commit ${M} ${x.id} commit${I.get(x.branch).index%Q}`)}F===v.REVERSE&&i.append("path").attr("d",`M ${k-5},${_-5}L${k+5},${_+5}M${k-5},${_+5}L${k+5},${_-5}`).attr("class",`commit ${M} ${x.id} commit${I.get(x.branch).index%Q}`)}}if(E==="TB"||E==="BT"?B.set(x.id,{x:k,y:f}):B.set(x.id,{x:f,y:_}),o){if(x.type!==v.CHERRY_PICK&&(x.customId&&x.type===v.MERGE||x.type!==v.MERGE)&&m.showCommitLabel){let P=a.append("g"),N=P.insert("rect").attr("class","commit-label-bkg"),A=P.append("text").attr("x",p).attr("y",_+25).attr("class","commit-label").text(x.id),l=A.node().getBBox();if(N.attr("x",f-l.width/2-2).attr("y",_+13.5).attr("width",l.width+2*2).attr("height",l.height+2*2),E==="TB"||E==="BT"?(N.attr("x",k-(l.width+4*4+5)).attr("y",_-12),A.attr("x",k-(l.width+4*4)).attr("y",_+l.height-12)):A.attr("x",f-l.width/2),m.rotateCommitLabel)if(E==="TB"||E==="BT")A.attr("transform","rotate(-45, "+k+", "+_+")"),N.attr("transform","rotate(-45, "+k+", "+_+")");else{let g=-7.5-(l.width+10)/25*9.5,y=10+l.width/25*8.5;P.attr("transform","translate("+g+", "+y+") rotate(-45, "+p+", "+_+")")}}if(x.tag){let P=a.insert("polygon"),N=a.append("circle"),A=a.append("text").attr("y",_-16).attr("class","tag-label").text(x.tag),l=A.node().getBBox();A.attr("x",f-l.width/2);let g=l.height/2,y=_-19.2;P.attr("class","tag-label-bkg").attr("points",`
          ${p-l.width/2-4/2},${y+2}
          ${p-l.width/2-4/2},${y-2}
          ${f-l.width/2-4},${y-g-2}
          ${f+l.width/2+4},${y-g-2}
          ${f+l.width/2+4},${y+g+2}
          ${f-l.width/2-4},${y+g+2}`),N.attr("cx",p-l.width/2+4/2).attr("cy",y).attr("r",1.5).attr("class","tag-hole"),(E==="TB"||E==="BT")&&(P.attr("class","tag-label-bkg").attr("points",`
            ${k},${p+2}
            ${k},${p-2}
            ${k+u},${p-g-2}
            ${k+u+l.width+4},${p-g-2}
            ${k+u+l.width+4},${p+g+2}
            ${k+u},${p+g+2}`).attr("transform","translate(12,12) rotate(45, "+k+","+p+")"),N.attr("cx",k+4/2).attr("cy",p).attr("transform","translate(12,12) rotate(45, "+k+","+p+")"),A.attr("x",k+5).attr("y",p+3).attr("transform","translate(14,14) rotate(45, "+k+","+p+")"))}}p=E==="BT"&&b?p+s:p+s+u,p>K&&(K=p)})},"drawCommits"),ut=d((r,c,o,m,i)=>{let p=(E==="TB"||E==="BT"?o.x<m.x:o.y<m.y)?c.branch:r.branch,h=d(u=>u.branch===p,"isOnBranchToGetCurve"),b=d(u=>u.seq>r.seq&&u.seq<c.seq,"isBetweenCommits");return[...i.values()].some(u=>b(u)&&h(u))},"shouldRerouteArrow"),re=d((r,c,o=0)=>{let m=r+Math.abs(r-c)/2;if(o>5)return m;if(ce.every(p=>Math.abs(p-m)>=10))return ce.push(m),m;let a=Math.abs(r-c);return re(r,c-a/5,o+1)},"findLane"),gt=d((r,c,o,m)=>{let i=B.get(c.id),a=B.get(o.id),p=ut(c,o,i,a,m),h="",b="",u=0,s=0,w=I.get(o.branch).index;o.type===v.MERGE&&c.id!==o.parents[0]&&(w=I.get(c.branch).index);let T;if(p){h="A 10 10, 0, 0, 0,",b="A 10 10, 0, 0, 1,",u=10,s=10;let x=i.y<a.y?re(i.y,a.y):re(a.y,i.y),f=i.x<a.x?re(i.x,a.x):re(a.x,i.x);E==="TB"?i.x<a.x?T=`M ${i.x} ${i.y} L ${f-u} ${i.y} ${b} ${f} ${i.y+s} L ${f} ${a.y-u} ${h} ${f+s} ${a.y} L ${a.x} ${a.y}`:(w=I.get(c.branch).index,T=`M ${i.x} ${i.y} L ${f+u} ${i.y} ${h} ${f} ${i.y+s} L ${f} ${a.y-u} ${b} ${f-s} ${a.y} L ${a.x} ${a.y}`):E==="BT"?i.x<a.x?T=`M ${i.x} ${i.y} L ${f-u} ${i.y} ${h} ${f} ${i.y-s} L ${f} ${a.y+u} ${b} ${f+s} ${a.y} L ${a.x} ${a.y}`:(w=I.get(c.branch).index,T=`M ${i.x} ${i.y} L ${f+u} ${i.y} ${b} ${f} ${i.y-s} L ${f} ${a.y+u} ${h} ${f-s} ${a.y} L ${a.x} ${a.y}`):i.y<a.y?T=`M ${i.x} ${i.y} L ${i.x} ${x-u} ${h} ${i.x+s} ${x} L ${a.x-u} ${x} ${b} ${a.x} ${x+s} L ${a.x} ${a.y}`:(w=I.get(c.branch).index,T=`M ${i.x} ${i.y} L ${i.x} ${x+u} ${b} ${i.x+s} ${x} L ${a.x-u} ${x} ${h} ${a.x} ${x-s} L ${a.x} ${a.y}`)}else h="A 20 20, 0, 0, 0,",b="A 20 20, 0, 0, 1,",u=20,s=20,E==="TB"?(i.x<a.x&&(o.type===v.MERGE&&c.id!==o.parents[0]?T=`M ${i.x} ${i.y} L ${i.x} ${a.y-u} ${h} ${i.x+s} ${a.y} L ${a.x} ${a.y}`:T=`M ${i.x} ${i.y} L ${a.x-u} ${i.y} ${b} ${a.x} ${i.y+s} L ${a.x} ${a.y}`),i.x>a.x&&(h="A 20 20, 0, 0, 0,",b="A 20 20, 0, 0, 1,",u=20,s=20,o.type===v.MERGE&&c.id!==o.parents[0]?T=`M ${i.x} ${i.y} L ${i.x} ${a.y-u} ${b} ${i.x-s} ${a.y} L ${a.x} ${a.y}`:T=`M ${i.x} ${i.y} L ${a.x+u} ${i.y} ${h} ${a.x} ${i.y+s} L ${a.x} ${a.y}`),i.x===a.x&&(T=`M ${i.x} ${i.y} L ${a.x} ${a.y}`)):E==="BT"?(i.x<a.x&&(o.type===v.MERGE&&c.id!==o.parents[0]?T=`M ${i.x} ${i.y} L ${i.x} ${a.y+u} ${b} ${i.x+s} ${a.y} L ${a.x} ${a.y}`:T=`M ${i.x} ${i.y} L ${a.x-u} ${i.y} ${h} ${a.x} ${i.y-s} L ${a.x} ${a.y}`),i.x>a.x&&(h="A 20 20, 0, 0, 0,",b="A 20 20, 0, 0, 1,",u=20,s=20,o.type===v.MERGE&&c.id!==o.parents[0]?T=`M ${i.x} ${i.y} L ${i.x} ${a.y+u} ${h} ${i.x-s} ${a.y} L ${a.x} ${a.y}`:T=`M ${i.x} ${i.y} L ${a.x-u} ${i.y} ${h} ${a.x} ${i.y-s} L ${a.x} ${a.y}`),i.x===a.x&&(T=`M ${i.x} ${i.y} L ${a.x} ${a.y}`)):(i.y<a.y&&(o.type===v.MERGE&&c.id!==o.parents[0]?T=`M ${i.x} ${i.y} L ${a.x-u} ${i.y} ${b} ${a.x} ${i.y+s} L ${a.x} ${a.y}`:T=`M ${i.x} ${i.y} L ${i.x} ${a.y-u} ${h} ${i.x+s} ${a.y} L ${a.x} ${a.y}`),i.y>a.y&&(o.type===v.MERGE&&c.id!==o.parents[0]?T=`M ${i.x} ${i.y} L ${a.x-u} ${i.y} ${h} ${a.x} ${i.y-s} L ${a.x} ${a.y}`:T=`M ${i.x} ${i.y} L ${i.x} ${a.y+u} ${b} ${i.x+s} ${a.y} L ${a.x} ${a.y}`),i.y===a.y&&(T=`M ${i.x} ${i.y} L ${a.x} ${a.y}`));r.append("path").attr("d",T).attr("class","arrow arrow"+w%Q)},"drawArrow"),bt=d((r,c)=>{let o=r.append("g").attr("class","commit-arrows");[...c.keys()].forEach(m=>{let i=c.get(m);i.parents&&i.parents.length>0&&i.parents.forEach(a=>{gt(o,c.get(a),i,c)})})},"drawArrows"),xt=d((r,c)=>{let o=R().gitGraph,m=r.append("g");c.forEach((i,a)=>{let p=a%Q,h=I.get(i.name).pos,b=m.append("line");b.attr("x1",0),b.attr("y1",h),b.attr("x2",K),b.attr("y2",h),b.attr("class","branch branch"+p),E==="TB"?(b.attr("y1",oe),b.attr("x1",h),b.attr("y2",K),b.attr("x2",h)):E==="BT"&&(b.attr("y1",K),b.attr("x1",h),b.attr("y2",oe),b.attr("x2",h)),ce.push(h);let u=i.name,s=Ve(u),w=m.insert("rect"),x=m.insert("g").attr("class","branchLabel").insert("g").attr("class","label branch-label"+p);x.node().appendChild(s);let f=s.getBBox();w.attr("class","branchLabelBkg label"+p).attr("rx",4).attr("ry",4).attr("x",-f.width-4-(o.rotateCommitLabel===!0?30:0)).attr("y",-f.height/2+8).attr("width",f.width+18).attr("height",f.height+4),x.attr("transform","translate("+(-f.width-14-(o.rotateCommitLabel===!0?30:0))+", "+(h-f.height/2-1)+")"),E==="TB"?(w.attr("x",h-f.width/2-10).attr("y",0),x.attr("transform","translate("+(h-f.width/2-5)+", 0)")):E==="BT"?(w.attr("x",h-f.width/2-10).attr("y",K),x.attr("transform","translate("+(h-f.width/2-5)+", "+K+")")):w.attr("transform","translate(-19, "+(h-f.height/2)+")")})},"drawBranches"),dt=d(function(r,c,o,m){pt();let i=R(),a=i.gitGraph;H.debug("in gitgraph renderer",r+`
`,"id:",c,o),te=m.db.getCommits();let p=m.db.getBranchesAsObjArray();E=m.db.getDirection();let h=ye(`[id="${c}"]`),b=0;p.forEach((u,s)=>{let w=Ve(u.name),T=h.append("g"),x=T.insert("g").attr("class","branchLabel"),f=x.insert("g").attr("class","label branch-label");f.node().appendChild(w);let _=w.getBBox();I.set(u.name,{pos:b,index:s}),b+=50+(a.rotateCommitLabel?40:0)+(E==="TB"||E==="BT"?_.width/2:0),f.remove(),x.remove(),T.remove()}),De(h,te,!1),a.showBranches&&xt(h,p),bt(h,te),De(h,te,!0),Te.insertTitle(h,"gitTitleText",a.titleTopMargin,m.db.getDiagramTitle()),Pe(void 0,h,a.diagramPadding,a.useMaxWidth??i.useMaxWidth)},"draw"),Ye={draw:dt};var kt=d(r=>`
  .commit-id,
  .commit-msg,
  .branch-label {
    fill: lightgrey;
    color: lightgrey;
    font-family: 'trebuchet ms', verdana, arial, sans-serif;
    font-family: var(--mermaid-font-family);
  }
  ${[0,1,2,3,4,5,6,7].map(c=>`
        .branch-label${c} { fill: ${r["gitBranchLabel"+c]}; }
        .commit${c} { stroke: ${r["git"+c]}; fill: ${r["git"+c]}; }
        .commit-highlight${c} { stroke: ${r["gitInv"+c]}; fill: ${r["gitInv"+c]}; }
        .label${c}  { fill: ${r["git"+c]}; }
        .arrow${c} { stroke: ${r["git"+c]}; }
        `).join(`
`)}

  .branch {
    stroke-width: 1;
    stroke: ${r.lineColor};
    stroke-dasharray: 2;
  }
  .commit-label { font-size: ${r.commitLabelFontSize}; fill: ${r.commitLabelColor};}
  .commit-label-bkg { font-size: ${r.commitLabelFontSize}; fill: ${r.commitLabelBackground}; opacity: 0.5; }
  .tag-label { font-size: ${r.tagLabelFontSize}; fill: ${r.tagLabelColor};}
  .tag-label-bkg { fill: ${r.tagLabelBackground}; stroke: ${r.tagLabelBorder}; }
  .tag-hole { fill: ${r.textColor}; }

  .commit-merge {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
  }
  .commit-reverse {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
    stroke-width: 3;
  }
  .commit-highlight-outer {
  }
  .commit-highlight-inner {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
  }

  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}
  .gitTitleText {
    text-anchor: middle;
    font-size: 18px;
    fill: ${r.textColor};
  }
`,"getStyles"),Fe=kt;var Yt={parser:Ge,db:He,renderer:Ye,styles:Fe};export{Yt as diagram};
