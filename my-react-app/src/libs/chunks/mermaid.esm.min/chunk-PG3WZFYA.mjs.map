{
  "version": 3,
  "sources": ["../../../src/diagrams/state/parser/stateDiagram.jison", "../../../src/diagrams/state/stateCommon.ts", "../../../src/diagrams/state/stateDb.js", "../../../src/diagrams/state/styles.js"],
  "sourcesContent": ["/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,2],$V1=[1,3],$V2=[1,4],$V3=[2,4],$V4=[1,9],$V5=[1,11],$V6=[1,15],$V7=[1,16],$V8=[1,17],$V9=[1,18],$Va=[1,30],$Vb=[1,19],$Vc=[1,20],$Vd=[1,21],$Ve=[1,22],$Vf=[1,23],$Vg=[1,25],$Vh=[1,26],$Vi=[1,27],$Vj=[1,28],$Vk=[1,29],$Vl=[1,32],$Vm=[1,33],$Vn=[1,34],$Vo=[1,35],$Vp=[1,31],$Vq=[1,4,5,15,16,18,20,21,23,24,25,26,27,28,32,34,36,37,41,44,45,46,47,50],$Vr=[1,4,5,13,14,15,16,18,20,21,23,24,25,26,27,28,32,34,36,37,41,44,45,46,47,50],$Vs=[4,5,15,16,18,20,21,23,24,25,26,27,28,32,34,36,37,41,44,45,46,47,50];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"start\":3,\"SPACE\":4,\"NL\":5,\"SD\":6,\"document\":7,\"line\":8,\"statement\":9,\"classDefStatement\":10,\"cssClassStatement\":11,\"idStatement\":12,\"DESCR\":13,\"-->\":14,\"HIDE_EMPTY\":15,\"scale\":16,\"WIDTH\":17,\"COMPOSIT_STATE\":18,\"STRUCT_START\":19,\"STRUCT_STOP\":20,\"STATE_DESCR\":21,\"AS\":22,\"ID\":23,\"FORK\":24,\"JOIN\":25,\"CHOICE\":26,\"CONCURRENT\":27,\"note\":28,\"notePosition\":29,\"NOTE_TEXT\":30,\"direction\":31,\"acc_title\":32,\"acc_title_value\":33,\"acc_descr\":34,\"acc_descr_value\":35,\"acc_descr_multiline_value\":36,\"classDef\":37,\"CLASSDEF_ID\":38,\"CLASSDEF_STYLEOPTS\":39,\"DEFAULT\":40,\"class\":41,\"CLASSENTITY_IDS\":42,\"STYLECLASS\":43,\"direction_tb\":44,\"direction_bt\":45,\"direction_rl\":46,\"direction_lr\":47,\"eol\":48,\";\":49,\"EDGE_STATE\":50,\"STYLE_SEPARATOR\":51,\"left_of\":52,\"right_of\":53,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"SPACE\",5:\"NL\",6:\"SD\",13:\"DESCR\",14:\"-->\",15:\"HIDE_EMPTY\",16:\"scale\",17:\"WIDTH\",18:\"COMPOSIT_STATE\",19:\"STRUCT_START\",20:\"STRUCT_STOP\",21:\"STATE_DESCR\",22:\"AS\",23:\"ID\",24:\"FORK\",25:\"JOIN\",26:\"CHOICE\",27:\"CONCURRENT\",28:\"note\",30:\"NOTE_TEXT\",32:\"acc_title\",33:\"acc_title_value\",34:\"acc_descr\",35:\"acc_descr_value\",36:\"acc_descr_multiline_value\",37:\"classDef\",38:\"CLASSDEF_ID\",39:\"CLASSDEF_STYLEOPTS\",40:\"DEFAULT\",41:\"class\",42:\"CLASSENTITY_IDS\",43:\"STYLECLASS\",44:\"direction_tb\",45:\"direction_bt\",46:\"direction_rl\",47:\"direction_lr\",49:\";\",50:\"EDGE_STATE\",51:\"STYLE_SEPARATOR\",52:\"left_of\",53:\"right_of\"},\nproductions_: [0,[3,2],[3,2],[3,2],[7,0],[7,2],[8,2],[8,1],[8,1],[9,1],[9,1],[9,1],[9,2],[9,3],[9,4],[9,1],[9,2],[9,1],[9,4],[9,3],[9,6],[9,1],[9,1],[9,1],[9,1],[9,4],[9,4],[9,1],[9,2],[9,2],[9,1],[10,3],[10,3],[11,3],[31,1],[31,1],[31,1],[31,1],[48,1],[48,1],[12,1],[12,1],[12,3],[12,3],[29,1],[29,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 3:\n /* console.log('--> Root document', $$[$0]); */   yy.setRootDoc($$[$0]); return $$[$0]; \nbreak;\ncase 4:\n /*console.log('empty document'); */ this.$ = [] \nbreak;\ncase 5:\n\n        if($$[$0] !='nl'){\n            /* console.log(' document: 1: ', $$[$0-1], ' pushing 2: ', $$[$0]); */\n            $$[$0-1].push($$[$0]); this.$ = $$[$0-1]\n        }\n        /* console.log('Got document',$$[$0-1], $$[$0]); */\n    \nbreak;\ncase 6: case 7:\n this.$ = $$[$0] \nbreak;\ncase 8:\n this.$='nl';\nbreak;\ncase 11:\n /* console.log('got id', $$[$0]); */\n            this.$=$$[$0];\n\t    \nbreak;\ncase 12:\n\n            const stateStmt = $$[$0-1];\n            stateStmt.description = yy.trimColon($$[$0]);\n            this.$ = stateStmt;\n\t    \nbreak;\ncase 13:\n\n            /* console.info('got ids: 1: ', $$[$0-2], ' 2:', $$[$0-1],'  3: ', $$[$0]); */\n            // console.log(' idStatement --> idStatement : state1 =', $$[$0-2], ' state2 =', $$[$0]);\n            this.$={ stmt: 'relation', state1: $$[$0-2], state2: $$[$0]};\n        \nbreak;\ncase 14:\n\n            const relDescription = yy.trimColon($$[$0]);\n            /* console.log(' idStatement --> idStatement DESCR : state1 =', $$[$0-3], ' state2stmt =', $$[$0-1], '  description: ', relDescription); */\n            this.$={ stmt: 'relation', state1: $$[$0-3], state2: $$[$0-1], description: relDescription};\n        \nbreak;\ncase 18:\n\n        // console.log('Adding document for state without id ', $$[$0-3]);\n        this.$={ stmt: 'state', id: $$[$0-3], type: 'default', description: '', doc: $$[$0-1] }\n    \nbreak;\ncase 19:\n\n        var id=$$[$0];\n        var description = $$[$0-2].trim();\n        if($$[$0].match(':')){\n            var parts = $$[$0].split(':');\n            id=parts[0];\n            description = [description, parts[1]];\n        }\n        this.$={stmt: 'state', id: id, type: 'default', description: description};\n\n    \nbreak;\ncase 20:\n\n         // console.log('state with id ', $$[$0-3],' document = ', $$[$0-1], );\n         this.$={ stmt: 'state', id: $$[$0-3], type: 'default', description: $$[$0-5], doc: $$[$0-1] }\n    \nbreak;\ncase 21:\n\n        this.$={ stmt: 'state', id: $$[$0], type: 'fork' }\n    \nbreak;\ncase 22:\n\n        this.$={ stmt: 'state', id: $$[$0], type: 'join' }\n    \nbreak;\ncase 23:\n\n        this.$={ stmt: 'state', id: $$[$0], type: 'choice' }\n    \nbreak;\ncase 24:\n\n        this.$={ stmt: 'state', id: yy.getDividerId(), type: 'divider' }\n    \nbreak;\ncase 25:\n\n        /* console.warn('got NOTE, position: ', $$[$0-2].trim(), 'id = ', $$[$0-1].trim(), 'note: ', $$[$0]);*/\n        this.$={ stmt: 'state', id: $$[$0-1].trim(), note:{position: $$[$0-2].trim(), text: $$[$0].trim()}};\n    \nbreak;\ncase 28:\n this.$=$$[$0].trim();yy.setAccTitle(this.$); \nbreak;\ncase 29: case 30:\n this.$=$$[$0].trim();yy.setAccDescription(this.$); \nbreak;\ncase 31: case 32:\n\n        this.$ = { stmt: 'classDef', id: $$[$0-1].trim(), classes: $$[$0].trim() };\n        \nbreak;\ncase 33:\n\n        //console.log('apply class: id(s): ',$$[$0-1], '  style class: ', $$[$0]);\n        this.$={ stmt: 'applyClass', id: $$[$0-1].trim(), styleClass: $$[$0].trim() };\n        \nbreak;\ncase 34:\n yy.setDirection('TB');this.$={stmt:'dir', value:'TB'};\nbreak;\ncase 35:\n yy.setDirection('BT');this.$={stmt:'dir', value:'BT'};\nbreak;\ncase 36:\n yy.setDirection('RL'); this.$={stmt:'dir', value:'RL'};\nbreak;\ncase 37:\n yy.setDirection('LR');this.$={stmt:'dir', value:'LR'};\nbreak;\ncase 40: case 41:\n   /* console.log('idStatement id: ', $$[$0]); */\n            this.$={ stmt: 'state', id: $$[$0].trim(), type: 'default', description: '' };\n        \nbreak;\ncase 42:\n   /*console.log('idStatement ID STYLE_SEPARATOR ID'); */\n            this.$={ stmt: 'state', id: $$[$0-2].trim(), classes: [$$[$0].trim()], type: 'default', description: '' };\n        \nbreak;\ncase 43:\n   /*console.log('idStatement EDGE_STATE STYLE_SEPARATOR ID'); */\n            this.$={ stmt: 'state', id: $$[$0-2].trim(), classes: [$$[$0].trim()], type: 'default', description: '' };\n        \nbreak;\n}\n},\ntable: [{3:1,4:$V0,5:$V1,6:$V2},{1:[3]},{3:5,4:$V0,5:$V1,6:$V2},{3:6,4:$V0,5:$V1,6:$V2},o([1,4,5,15,16,18,21,23,24,25,26,27,28,32,34,36,37,41,44,45,46,47,50],$V3,{7:7}),{1:[2,1]},{1:[2,2]},{1:[2,3],4:$V4,5:$V5,8:8,9:10,10:12,11:13,12:14,15:$V6,16:$V7,18:$V8,21:$V9,23:$Va,24:$Vb,25:$Vc,26:$Vd,27:$Ve,28:$Vf,31:24,32:$Vg,34:$Vh,36:$Vi,37:$Vj,41:$Vk,44:$Vl,45:$Vm,46:$Vn,47:$Vo,50:$Vp},o($Vq,[2,5]),{9:36,10:12,11:13,12:14,15:$V6,16:$V7,18:$V8,21:$V9,23:$Va,24:$Vb,25:$Vc,26:$Vd,27:$Ve,28:$Vf,31:24,32:$Vg,34:$Vh,36:$Vi,37:$Vj,41:$Vk,44:$Vl,45:$Vm,46:$Vn,47:$Vo,50:$Vp},o($Vq,[2,7]),o($Vq,[2,8]),o($Vq,[2,9]),o($Vq,[2,10]),o($Vq,[2,11],{13:[1,37],14:[1,38]}),o($Vq,[2,15]),{17:[1,39]},o($Vq,[2,17],{19:[1,40]}),{22:[1,41]},o($Vq,[2,21]),o($Vq,[2,22]),o($Vq,[2,23]),o($Vq,[2,24]),{29:42,30:[1,43],52:[1,44],53:[1,45]},o($Vq,[2,27]),{33:[1,46]},{35:[1,47]},o($Vq,[2,30]),{38:[1,48],40:[1,49]},{42:[1,50]},o($Vr,[2,40],{51:[1,51]}),o($Vr,[2,41],{51:[1,52]}),o($Vq,[2,34]),o($Vq,[2,35]),o($Vq,[2,36]),o($Vq,[2,37]),o($Vq,[2,6]),o($Vq,[2,12]),{12:53,23:$Va,50:$Vp},o($Vq,[2,16]),o($Vs,$V3,{7:54}),{23:[1,55]},{23:[1,56]},{22:[1,57]},{23:[2,44]},{23:[2,45]},o($Vq,[2,28]),o($Vq,[2,29]),{39:[1,58]},{39:[1,59]},{43:[1,60]},{23:[1,61]},{23:[1,62]},o($Vq,[2,13],{13:[1,63]}),{4:$V4,5:$V5,8:8,9:10,10:12,11:13,12:14,15:$V6,16:$V7,18:$V8,20:[1,64],21:$V9,23:$Va,24:$Vb,25:$Vc,26:$Vd,27:$Ve,28:$Vf,31:24,32:$Vg,34:$Vh,36:$Vi,37:$Vj,41:$Vk,44:$Vl,45:$Vm,46:$Vn,47:$Vo,50:$Vp},o($Vq,[2,19],{19:[1,65]}),{30:[1,66]},{23:[1,67]},o($Vq,[2,31]),o($Vq,[2,32]),o($Vq,[2,33]),o($Vr,[2,42]),o($Vr,[2,43]),o($Vq,[2,14]),o($Vq,[2,18]),o($Vs,$V3,{7:68}),o($Vq,[2,25]),o($Vq,[2,26]),{4:$V4,5:$V5,8:8,9:10,10:12,11:13,12:14,15:$V6,16:$V7,18:$V8,20:[1,69],21:$V9,23:$Va,24:$Vb,25:$Vc,26:$Vd,27:$Ve,28:$Vf,31:24,32:$Vg,34:$Vh,36:$Vi,37:$Vj,41:$Vk,44:$Vl,45:$Vm,46:$Vn,47:$Vo,50:$Vp},o($Vq,[2,20])],\ndefaultActions: {5:[2,1],6:[2,2],44:[2,44],45:[2,45]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n            function lex() {\n            var token;\n            token = tstack.pop() || lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                if (token instanceof Array) {\n                    tstack = token;\n                    token = tstack.pop();\n                }\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var errStr = '';\n            expected = [];\n            for (p in table[state]) {\n                if (this.terminals_[p] && p > TERROR) {\n                    expected.push('\\'' + this.terminals_[p] + '\\'');\n                }\n            }\n            if (lexer.showPosition) {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n            } else {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n            }\n            this.parseError(errStr, {\n                text: lexer.match,\n                token: this.terminals_[symbol] || symbol,\n                line: lexer.yylineno,\n                loc: yyloc,\n                expected: expected\n            });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 40;\nbreak;\ncase 1:return 44;\nbreak;\ncase 2:return 45;\nbreak;\ncase 3:return 46;\nbreak;\ncase 4:return 47;\nbreak;\ncase 5:/* skip comments */\nbreak;\ncase 6:/* skip comments */{ /*console.log('Crap after close');*/ }\nbreak;\ncase 7:return 5;\nbreak;\ncase 8:/* skip all whitespace */\nbreak;\ncase 9:/* skip same-line whitespace */\nbreak;\ncase 10:/* skip comments */\nbreak;\ncase 11:/* skip comments */\nbreak;\ncase 12: this.pushState('SCALE'); /* console.log('Got scale', yy_.yytext);*/ return 16; \nbreak;\ncase 13:return 17;\nbreak;\ncase 14: this.popState(); \nbreak;\ncase 15: this.begin(\"acc_title\");return 32; \nbreak;\ncase 16: this.popState(); return \"acc_title_value\"; \nbreak;\ncase 17: this.begin(\"acc_descr\");return 34; \nbreak;\ncase 18: this.popState(); return \"acc_descr_value\"; \nbreak;\ncase 19: this.begin(\"acc_descr_multiline\"); \nbreak;\ncase 20: this.popState(); \nbreak;\ncase 21:return \"acc_descr_multiline_value\";\nbreak;\ncase 22: this.pushState('CLASSDEF'); return 37; \nbreak;\ncase 23: this.popState(); this.pushState('CLASSDEFID'); return 'DEFAULT_CLASSDEF_ID' \nbreak;\ncase 24: this.popState(); this.pushState('CLASSDEFID'); return 38 \nbreak;\ncase 25: this.popState(); return 39 \nbreak;\ncase 26: this.pushState('CLASS'); return 41; \nbreak;\ncase 27: this.popState(); this.pushState('CLASS_STYLE'); return 42 \nbreak;\ncase 28: this.popState(); return 43 \nbreak;\ncase 29: this.pushState('SCALE'); /* console.log('Got scale', yy_.yytext);*/ return 16; \nbreak;\ncase 30:return 17;\nbreak;\ncase 31:this.popState();\nbreak;\ncase 32: /* console.log('Starting STATE '); */ this.pushState('STATE'); \nbreak;\ncase 33:this.popState();yy_.yytext=yy_.yytext.slice(0,-8).trim(); /*console.warn('Fork Fork: ',yy_.yytext);*/return 24;\nbreak;\ncase 34:this.popState();yy_.yytext=yy_.yytext.slice(0,-8).trim();/*console.warn('Fork Join: ',yy_.yytext);*/return 25;\nbreak;\ncase 35:this.popState();yy_.yytext=yy_.yytext.slice(0,-10).trim();/*console.warn('Fork Join: ',yy_.yytext);*/return 26;\nbreak;\ncase 36:this.popState();yy_.yytext=yy_.yytext.slice(0,-8).trim();/*console.warn('Fork Fork: ',yy_.yytext);*/return 24;\nbreak;\ncase 37:this.popState();yy_.yytext=yy_.yytext.slice(0,-8).trim();/*console.warn('Fork Join: ',yy_.yytext);*/return 25;\nbreak;\ncase 38:this.popState();yy_.yytext=yy_.yytext.slice(0,-10).trim();/*console.warn('Fork Join: ',yy_.yytext);*/return 26;\nbreak;\ncase 39: return 44;\nbreak;\ncase 40: return 45;\nbreak;\ncase 41: return 46;\nbreak;\ncase 42: return 47;\nbreak;\ncase 43: /* console.log('Starting STATE_STRING'); */ this.pushState(\"STATE_STRING\"); \nbreak;\ncase 44: this.pushState('STATE_ID'); /* console.log('pushState(STATE_ID)'); */ return \"AS\"; \nbreak;\ncase 45: this.popState(); /* console.log('STATE_ID', yy_.yytext); */ return \"ID\"; \nbreak;\ncase 46: this.popState(); \nbreak;\ncase 47: /* console.log('Long description:', yy_.yytext); */ return \"STATE_DESCR\"; \nbreak;\ncase 48: /* console.log('COMPOSIT_STATE', yy_.yytext); */ return 18; \nbreak;\ncase 49: this.popState(); \nbreak;\ncase 50: this.popState(); this.pushState('struct'); /* console.log('begin struct', yy_.yytext); */ return 19; \nbreak;\ncase 51:/* skip comments inside state*/\nbreak;\ncase 52: /*console.log('Ending struct');*/ this.popState(); return 20;\nbreak;\ncase 53:/* nothing */\nbreak;\ncase 54: this.begin('NOTE'); return 28; \nbreak;\ncase 55: this.popState(); this.pushState('NOTE_ID'); return 52; \nbreak;\ncase 56: this.popState(); this.pushState('NOTE_ID'); return 53; \nbreak;\ncase 57: this.popState(); this.pushState('FLOATING_NOTE'); \nbreak;\ncase 58: this.popState(); this.pushState('FLOATING_NOTE_ID'); return \"AS\"; \nbreak;\ncase 59:/**/\nbreak;\ncase 60: /* console.log('Floating note text: ', yy_.yytext); */ return \"NOTE_TEXT\"; \nbreak;\ncase 61: this.popState(); /* console.log('Floating note ID', yy_.yytext);*/ return \"ID\"; \nbreak;\ncase 62: this.popState(); this.pushState('NOTE_TEXT'); /*console.log('Got ID for note', yy_.yytext);*/ return 23; \nbreak;\ncase 63: this.popState(); /* console.log('Got NOTE_TEXT for note',yy_.yytext);*/yy_.yytext = yy_.yytext.substr(2).trim(); return 30; \nbreak;\ncase 64: this.popState(); /* console.log('Got NOTE_TEXT for note',yy_.yytext);*/yy_.yytext = yy_.yytext.slice(0,-8).trim(); return 30; \nbreak;\ncase 65: /* console.log('Got state diagram', yy_.yytext,'#'); */ return 6; \nbreak;\ncase 66: /* console.log('Got state diagram', yy_.yytext,'#'); */ return 6; \nbreak;\ncase 67: /* console.log('HIDE_EMPTY', yy_.yytext,'#'); */ return 15; \nbreak;\ncase 68: /* console.log('EDGE_STATE=',yy_.yytext); */ return 50; \nbreak;\ncase 69: /* console.log('=>ID=',yy_.yytext); */ return 23; \nbreak;\ncase 70: yy_.yytext = yy_.yytext.trim(); /* console.log('Descr = ', yy_.yytext); */ return 13; \nbreak;\ncase 71:return 14;\nbreak;\ncase 72:return 27;\nbreak;\ncase 73:return 51;\nbreak;\ncase 74:return 5;\nbreak;\ncase 75:return 'INVALID';\nbreak;\n}\n},\nrules: [/^(?:default\\b)/i,/^(?:.*direction\\s+TB[^\\n]*)/i,/^(?:.*direction\\s+BT[^\\n]*)/i,/^(?:.*direction\\s+RL[^\\n]*)/i,/^(?:.*direction\\s+LR[^\\n]*)/i,/^(?:%%(?!\\{)[^\\n]*)/i,/^(?:[^\\}]%%[^\\n]*)/i,/^(?:[\\n]+)/i,/^(?:[\\s]+)/i,/^(?:((?!\\n)\\s)+)/i,/^(?:#[^\\n]*)/i,/^(?:%[^\\n]*)/i,/^(?:scale\\s+)/i,/^(?:\\d+)/i,/^(?:\\s+width\\b)/i,/^(?:accTitle\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*\\{\\s*)/i,/^(?:[\\}])/i,/^(?:[^\\}]*)/i,/^(?:classDef\\s+)/i,/^(?:DEFAULT\\s+)/i,/^(?:\\w+\\s+)/i,/^(?:[^\\n]*)/i,/^(?:class\\s+)/i,/^(?:(\\w+)+((,\\s*\\w+)*))/i,/^(?:[^\\n]*)/i,/^(?:scale\\s+)/i,/^(?:\\d+)/i,/^(?:\\s+width\\b)/i,/^(?:state\\s+)/i,/^(?:.*<<fork>>)/i,/^(?:.*<<join>>)/i,/^(?:.*<<choice>>)/i,/^(?:.*\\[\\[fork\\]\\])/i,/^(?:.*\\[\\[join\\]\\])/i,/^(?:.*\\[\\[choice\\]\\])/i,/^(?:.*direction\\s+TB[^\\n]*)/i,/^(?:.*direction\\s+BT[^\\n]*)/i,/^(?:.*direction\\s+RL[^\\n]*)/i,/^(?:.*direction\\s+LR[^\\n]*)/i,/^(?:[\"])/i,/^(?:\\s*as\\s+)/i,/^(?:[^\\n\\{]*)/i,/^(?:[\"])/i,/^(?:[^\"]*)/i,/^(?:[^\\n\\s\\{]+)/i,/^(?:\\n)/i,/^(?:\\{)/i,/^(?:%%(?!\\{)[^\\n]*)/i,/^(?:\\})/i,/^(?:[\\n])/i,/^(?:note\\s+)/i,/^(?:left of\\b)/i,/^(?:right of\\b)/i,/^(?:\")/i,/^(?:\\s*as\\s*)/i,/^(?:[\"])/i,/^(?:[^\"]*)/i,/^(?:[^\\n]*)/i,/^(?:\\s*[^:\\n\\s\\-]+)/i,/^(?:\\s*:[^:\\n;]+)/i,/^(?:[\\s\\S]*?end note\\b)/i,/^(?:stateDiagram\\s+)/i,/^(?:stateDiagram-v2\\s+)/i,/^(?:hide empty description\\b)/i,/^(?:\\[\\*\\])/i,/^(?:[^:\\n\\s\\-\\{]+)/i,/^(?:\\s*:[^:\\n;]+)/i,/^(?:-->)/i,/^(?:--)/i,/^(?::::)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"LINE\":{\"rules\":[9,10],\"inclusive\":false},\"struct\":{\"rules\":[9,10,22,26,32,39,40,41,42,51,52,53,54,68,69,70,71,72],\"inclusive\":false},\"FLOATING_NOTE_ID\":{\"rules\":[61],\"inclusive\":false},\"FLOATING_NOTE\":{\"rules\":[58,59,60],\"inclusive\":false},\"NOTE_TEXT\":{\"rules\":[63,64],\"inclusive\":false},\"NOTE_ID\":{\"rules\":[62],\"inclusive\":false},\"NOTE\":{\"rules\":[55,56,57],\"inclusive\":false},\"CLASS_STYLE\":{\"rules\":[28],\"inclusive\":false},\"CLASS\":{\"rules\":[27],\"inclusive\":false},\"CLASSDEFID\":{\"rules\":[25],\"inclusive\":false},\"CLASSDEF\":{\"rules\":[23,24],\"inclusive\":false},\"acc_descr_multiline\":{\"rules\":[20,21],\"inclusive\":false},\"acc_descr\":{\"rules\":[18],\"inclusive\":false},\"acc_title\":{\"rules\":[16],\"inclusive\":false},\"SCALE\":{\"rules\":[13,14,30,31],\"inclusive\":false},\"ALIAS\":{\"rules\":[],\"inclusive\":false},\"STATE_ID\":{\"rules\":[45],\"inclusive\":false},\"STATE_STRING\":{\"rules\":[46,47],\"inclusive\":false},\"FORK_STATE\":{\"rules\":[],\"inclusive\":false},\"STATE\":{\"rules\":[9,10,33,34,35,36,37,38,43,44,48,49,50],\"inclusive\":false},\"ID\":{\"rules\":[9,10],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,10,11,12,15,17,19,22,26,29,32,50,54,65,66,67,68,69,70,71,73,74,75],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})(); \n\tparser.parser = parser;\n\texport { parser };\n\texport default parser;\n\t", "/**\n * Constants common to all State Diagram code\n */\n\n// default diagram direction\nexport const DEFAULT_DIAGRAM_DIRECTION = 'LR';\n\n// default direction for any nested documents (composites)\nexport const DEFAULT_NESTED_DOC_DIR = 'TB';\n\n// parsed statement type for a state\nexport const STMT_STATE = 'state';\n// parsed statement type for a relation\nexport const STMT_RELATION = 'relation';\n// parsed statement type for a classDef\nexport const STMT_CLASSDEF = 'classDef';\n// parsed statement type for applyClass\nexport const STMT_APPLYCLASS = 'applyClass';\n\nexport const DEFAULT_STATE_TYPE = 'default';\nexport const DIVIDER_TYPE = 'divider';\n\nexport default {\n  DEFAULT_DIAGRAM_DIRECTION,\n  DEFAULT_NESTED_DOC_DIR,\n  STMT_STATE,\n  STMT_RELATION,\n  STMT_CLASSDEF,\n  STMT_APPLYCLASS,\n  DEFAULT_STATE_TYPE,\n  DIVIDER_TYPE,\n};\n", "import { log } from '../../logger.js';\nimport { generateId } from '../../utils.js';\nimport common from '../common/common.js';\nimport { getConfig } from '../../diagram-api/diagramAPI.js';\nimport {\n  setAccTitle,\n  getAccTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n  setDiagramTitle,\n  getDiagramTitle,\n} from '../common/commonDb.js';\n\nimport {\n  DEFAULT_DIAGRAM_DIRECTION,\n  STMT_STATE,\n  STMT_RELATION,\n  STMT_CLASSDEF,\n  STMT_APPLYCLASS,\n  DEFAULT_STATE_TYPE,\n  DIVIDER_TYPE,\n} from './stateCommon.js';\n\nconst START_NODE = '[*]';\nconst START_TYPE = 'start';\nconst END_NODE = START_NODE;\nconst END_TYPE = 'end';\n\nconst COLOR_KEYWORD = 'color';\nconst FILL_KEYWORD = 'fill';\nconst BG_FILL = 'bgFill';\nconst STYLECLASS_SEP = ',';\n\n/**\n * Returns a new list of classes.\n * In the future, this can be replaced with a class common to all diagrams.\n * ClassDef information = { id: id, styles: [], textStyles: [] }\n *\n * @returns {Map<string, any>}\n */\nfunction newClassesList() {\n  return new Map();\n}\n\nlet direction = DEFAULT_DIAGRAM_DIRECTION;\nlet rootDoc = [];\nlet classes = newClassesList(); // style classes defined by a classDef\n\nconst newDoc = () => {\n  return {\n    /** @type {{ id1: string, id2: string, relationTitle: string }[]} */\n    relations: [],\n    states: new Map(),\n    documents: {},\n  };\n};\nlet documents = {\n  root: newDoc(),\n};\n\nlet currentDocument = documents.root;\nlet startEndCount = 0;\nlet dividerCnt = 0;\n\nexport const lineType = {\n  LINE: 0,\n  DOTTED_LINE: 1,\n};\n\nexport const relationType = {\n  AGGREGATION: 0,\n  EXTENSION: 1,\n  COMPOSITION: 2,\n  DEPENDENCY: 3,\n};\n\nconst clone = (o) => JSON.parse(JSON.stringify(o));\n\nconst setRootDoc = (o) => {\n  log.info('Setting root doc', o);\n  // rootDoc = { id: 'root', doc: o };\n  rootDoc = o;\n};\n\nconst getRootDoc = () => rootDoc;\n\nconst docTranslator = (parent, node, first) => {\n  if (node.stmt === STMT_RELATION) {\n    docTranslator(parent, node.state1, true);\n    docTranslator(parent, node.state2, false);\n  } else {\n    if (node.stmt === STMT_STATE) {\n      if (node.id === '[*]') {\n        node.id = first ? parent.id + '_start' : parent.id + '_end';\n        node.start = first;\n      } else {\n        // This is just a plain state, not a start or end\n        node.id = node.id.trim();\n      }\n    }\n\n    if (node.doc) {\n      const doc = [];\n      // Check for concurrency\n      let currentDoc = [];\n      let i;\n      for (i = 0; i < node.doc.length; i++) {\n        if (node.doc[i].type === DIVIDER_TYPE) {\n          // debugger;\n          const newNode = clone(node.doc[i]);\n          newNode.doc = clone(currentDoc);\n          doc.push(newNode);\n          currentDoc = [];\n        } else {\n          currentDoc.push(node.doc[i]);\n        }\n      }\n\n      // If any divider was encountered\n      if (doc.length > 0 && currentDoc.length > 0) {\n        const newNode = {\n          stmt: STMT_STATE,\n          id: generateId(),\n          type: 'divider',\n          doc: clone(currentDoc),\n        };\n        doc.push(clone(newNode));\n        node.doc = doc;\n      }\n\n      node.doc.forEach((docNode) => docTranslator(node, docNode, true));\n    }\n  }\n};\nconst getRootDocV2 = () => {\n  docTranslator({ id: 'root' }, { id: 'root', doc: rootDoc }, true);\n  return { id: 'root', doc: rootDoc };\n  // Here\n};\n\n/**\n * Convert all of the statements (stmts) that were parsed into states and relationships.\n * This is done because a state diagram may have nested sections,\n * where each section is a 'document' and has its own set of statements.\n * Ex: the section within a fork has its own statements, and incoming and outgoing statements\n * refer to the fork as a whole (document).\n * See the parser grammar:  the definition of a document is a document then a 'line', where a line can be a statement.\n * This will push the statement into the list of statements for the current document.\n *\n * @param _doc\n */\nconst extract = (_doc) => {\n  // const res = { states: [], relations: [] };\n  let doc;\n  if (_doc.doc) {\n    doc = _doc.doc;\n  } else {\n    doc = _doc;\n  }\n  // let doc = root.doc;\n  // if (!doc) {\n  //   doc = root;\n  // }\n  log.info(doc);\n  clear(true);\n\n  log.info('Extract', doc);\n\n  doc.forEach((item) => {\n    switch (item.stmt) {\n      case STMT_STATE:\n        addState(\n          item.id.trim(),\n          item.type,\n          item.doc,\n          item.description,\n          item.note,\n          item.classes,\n          item.styles,\n          item.textStyles\n        );\n        break;\n      case STMT_RELATION:\n        addRelation(item.state1, item.state2, item.description);\n        break;\n      case STMT_CLASSDEF:\n        addStyleClass(item.id.trim(), item.classes);\n        break;\n      case STMT_APPLYCLASS:\n        setCssClass(item.id.trim(), item.styleClass);\n        break;\n    }\n  });\n};\n\n/**\n * Function called by parser when a node definition has been found.\n *\n * @param {null | string} id\n * @param {null | string} type\n * @param {null | string} doc\n * @param {null | string | string[]} descr - description for the state. Can be a string or a list or strings\n * @param {null | string} note\n * @param {null | string | string[]} classes - class styles to apply to this state. Can be a string (1 style) or an array of styles. If it's just 1 class, convert it to an array of that 1 class.\n * @param {null | string | string[]} styles - styles to apply to this state. Can be a string (1 style) or an array of styles. If it's just 1 style, convert it to an array of that 1 style.\n * @param {null | string | string[]} textStyles - text styles to apply to this state. Can be a string (1 text test) or an array of text styles. If it's just 1 text style, convert it to an array of that 1 text style.\n */\nexport const addState = function (\n  id,\n  type = DEFAULT_STATE_TYPE,\n  doc = null,\n  descr = null,\n  note = null,\n  classes = null,\n  styles = null,\n  textStyles = null\n) {\n  const trimmedId = id?.trim();\n  // add the state if needed\n  if (!currentDocument.states.has(trimmedId)) {\n    log.info('Adding state ', trimmedId, descr);\n    currentDocument.states.set(trimmedId, {\n      id: trimmedId,\n      descriptions: [],\n      type,\n      doc,\n      note,\n      classes: [],\n      styles: [],\n      textStyles: [],\n    });\n  } else {\n    if (!currentDocument.states.get(trimmedId).doc) {\n      currentDocument.states.get(trimmedId).doc = doc;\n    }\n    if (!currentDocument.states.get(trimmedId).type) {\n      currentDocument.states.get(trimmedId).type = type;\n    }\n  }\n\n  if (descr) {\n    log.info('Setting state description', trimmedId, descr);\n    if (typeof descr === 'string') {\n      addDescription(trimmedId, descr.trim());\n    }\n\n    if (typeof descr === 'object') {\n      descr.forEach((des) => addDescription(trimmedId, des.trim()));\n    }\n  }\n\n  if (note) {\n    const doc2 = currentDocument.states.get(trimmedId);\n    doc2.note = note;\n    doc2.note.text = common.sanitizeText(doc2.note.text, getConfig());\n  }\n\n  if (classes) {\n    log.info('Setting state classes', trimmedId, classes);\n    const classesList = typeof classes === 'string' ? [classes] : classes;\n    classesList.forEach((cssClass) => setCssClass(trimmedId, cssClass.trim()));\n  }\n\n  if (styles) {\n    log.info('Setting state styles', trimmedId, styles);\n    const stylesList = typeof styles === 'string' ? [styles] : styles;\n    stylesList.forEach((style) => setStyle(trimmedId, style.trim()));\n  }\n\n  if (textStyles) {\n    log.info('Setting state styles', trimmedId, styles);\n    const textStylesList = typeof textStyles === 'string' ? [textStyles] : textStyles;\n    textStylesList.forEach((textStyle) => setTextStyle(trimmedId, textStyle.trim()));\n  }\n};\n\nexport const clear = function (saveCommon) {\n  documents = {\n    root: newDoc(),\n  };\n  currentDocument = documents.root;\n\n  // number of start and end nodes; used to construct ids\n  startEndCount = 0;\n  classes = newClassesList();\n  if (!saveCommon) {\n    commonClear();\n  }\n};\n\nexport const getState = function (id) {\n  return currentDocument.states.get(id);\n};\n\nexport const getStates = function () {\n  return currentDocument.states;\n};\nexport const logDocuments = function () {\n  log.info('Documents = ', documents);\n};\nexport const getRelations = function () {\n  return currentDocument.relations;\n};\n\n/**\n * If the id is a start node ( [*] ), then return a new id constructed from\n * the start node name and the current start node count.\n * else return the given id\n *\n * @param {string} id\n * @returns {string} - the id (original or constructed)\n */\nfunction startIdIfNeeded(id = '') {\n  let fixedId = id;\n  if (id === START_NODE) {\n    startEndCount++;\n    fixedId = `${START_TYPE}${startEndCount}`;\n  }\n  return fixedId;\n}\n\n/**\n * If the id is a start node ( [*] ), then return the start type ('start')\n * else return the given type\n *\n * @param {string} id\n * @param {string} type\n * @returns {string} - the type that should be used\n */\nfunction startTypeIfNeeded(id = '', type = DEFAULT_STATE_TYPE) {\n  return id === START_NODE ? START_TYPE : type;\n}\n\n/**\n * If the id is an end node ( [*] ), then return a new id constructed from\n * the end node name and the current start_end node count.\n * else return the given id\n *\n * @param {string} id\n * @returns {string} - the id (original or constructed)\n */\nfunction endIdIfNeeded(id = '') {\n  let fixedId = id;\n  if (id === END_NODE) {\n    startEndCount++;\n    fixedId = `${END_TYPE}${startEndCount}`;\n  }\n  return fixedId;\n}\n\n/**\n * If the id is an end node ( [*] ), then return the end type\n * else return the given type\n *\n * @param {string} id\n * @param {string} type\n * @returns {string} - the type that should be used\n */\nfunction endTypeIfNeeded(id = '', type = DEFAULT_STATE_TYPE) {\n  return id === END_NODE ? END_TYPE : type;\n}\n\n/**\n *\n * @param item1\n * @param item2\n * @param relationTitle\n */\nexport function addRelationObjs(item1, item2, relationTitle) {\n  let id1 = startIdIfNeeded(item1.id.trim());\n  let type1 = startTypeIfNeeded(item1.id.trim(), item1.type);\n  let id2 = startIdIfNeeded(item2.id.trim());\n  let type2 = startTypeIfNeeded(item2.id.trim(), item2.type);\n\n  addState(\n    id1,\n    type1,\n    item1.doc,\n    item1.description,\n    item1.note,\n    item1.classes,\n    item1.styles,\n    item1.textStyles\n  );\n  addState(\n    id2,\n    type2,\n    item2.doc,\n    item2.description,\n    item2.note,\n    item2.classes,\n    item2.styles,\n    item2.textStyles\n  );\n\n  currentDocument.relations.push({\n    id1,\n    id2,\n    relationTitle: common.sanitizeText(relationTitle, getConfig()),\n  });\n}\n\n/**\n * Add a relation between two items.  The items may be full objects or just the string id of a state.\n *\n * @param {string | object} item1\n * @param {string | object} item2\n * @param {string} title\n */\nexport const addRelation = function (item1, item2, title) {\n  if (typeof item1 === 'object') {\n    addRelationObjs(item1, item2, title);\n  } else {\n    const id1 = startIdIfNeeded(item1.trim());\n    const type1 = startTypeIfNeeded(item1);\n    const id2 = endIdIfNeeded(item2.trim());\n    const type2 = endTypeIfNeeded(item2);\n\n    addState(id1, type1);\n    addState(id2, type2);\n    currentDocument.relations.push({\n      id1,\n      id2,\n      title: common.sanitizeText(title, getConfig()),\n    });\n  }\n};\n\nexport const addDescription = function (id, descr) {\n  const theState = currentDocument.states.get(id);\n  const _descr = descr.startsWith(':') ? descr.replace(':', '').trim() : descr;\n  theState.descriptions.push(common.sanitizeText(_descr, getConfig()));\n};\n\nexport const cleanupLabel = function (label) {\n  if (label.substring(0, 1) === ':') {\n    return label.substr(2).trim();\n  } else {\n    return label.trim();\n  }\n};\n\nconst getDividerId = () => {\n  dividerCnt++;\n  return 'divider-id-' + dividerCnt;\n};\n\n/**\n * Called when the parser comes across a (style) class definition\n * @example classDef my-style fill:#f96;\n *\n * @param {string} id - the id of this (style) class\n * @param  {string | null} styleAttributes - the string with 1 or more style attributes (each separated by a comma)\n */\nexport const addStyleClass = function (id, styleAttributes = '') {\n  // create a new style class object with this id\n  if (!classes.has(id)) {\n    classes.set(id, { id: id, styles: [], textStyles: [] }); // This is a classDef\n  }\n  const foundClass = classes.get(id);\n  if (styleAttributes !== undefined && styleAttributes !== null) {\n    styleAttributes.split(STYLECLASS_SEP).forEach((attrib) => {\n      // remove any trailing ;\n      const fixedAttrib = attrib.replace(/([^;]*);/, '$1').trim();\n\n      // replace some style keywords\n      if (attrib.match(COLOR_KEYWORD)) {\n        const newStyle1 = fixedAttrib.replace(FILL_KEYWORD, BG_FILL);\n        const newStyle2 = newStyle1.replace(COLOR_KEYWORD, FILL_KEYWORD);\n        foundClass.textStyles.push(newStyle2);\n      }\n      foundClass.styles.push(fixedAttrib);\n    });\n  }\n};\n\n/**\n * Return all of the style classes\n * @returns {{} | any | classes}\n */\nexport const getClasses = function () {\n  return classes;\n};\n\n/**\n * Add a (style) class or css class to a state with the given id.\n * If the state isn't already in the list of known states, add it.\n * Might be called by parser when a style class or CSS class should be applied to a state\n *\n * @param {string | string[]} itemIds The id or a list of ids of the item(s) to apply the css class to\n * @param {string} cssClassName CSS class name\n */\nexport const setCssClass = function (itemIds, cssClassName) {\n  itemIds.split(',').forEach(function (id) {\n    let foundState = getState(id);\n    if (foundState === undefined) {\n      const trimmedId = id.trim();\n      addState(trimmedId);\n      foundState = getState(trimmedId);\n    }\n    foundState.classes.push(cssClassName);\n  });\n};\n\n/**\n * Add a style to a state with the given id.\n * @example style stateId fill:#f9f,stroke:#333,stroke-width:4px\n *   where 'style' is the keyword\n *   stateId is the id of a state\n *   the rest of the string is the styleText (all of the attributes to be applied to the state)\n *\n * @param itemId The id of item to apply the style to\n * @param styleText - the text of the attributes for the style\n */\nexport const setStyle = function (itemId, styleText) {\n  const item = getState(itemId);\n  if (item !== undefined) {\n    item.textStyles.push(styleText);\n  }\n};\n\n/**\n * Add a text style to a state with the given id\n *\n * @param itemId The id of item to apply the css class to\n * @param cssClassName CSS class name\n */\nexport const setTextStyle = function (itemId, cssClassName) {\n  const item = getState(itemId);\n  if (item !== undefined) {\n    item.textStyles.push(cssClassName);\n  }\n};\n\nconst getDirection = () => direction;\nconst setDirection = (dir) => {\n  direction = dir;\n};\n\nconst trimColon = (str) => (str && str[0] === ':' ? str.substr(1).trim() : str.trim());\n\nexport default {\n  getConfig: () => getConfig().state,\n  addState,\n  clear,\n  getState,\n  getStates,\n  getRelations,\n  getClasses,\n  getDirection,\n  addRelation,\n  getDividerId,\n  setDirection,\n  cleanupLabel,\n  lineType,\n  relationType,\n  logDocuments,\n  getRootDoc,\n  setRootDoc,\n  getRootDocV2,\n  extract,\n  trimColon,\n  getAccTitle,\n  setAccTitle,\n  getAccDescription,\n  setAccDescription,\n  addStyleClass,\n  setCssClass,\n  addDescription,\n  setDiagramTitle,\n  getDiagramTitle,\n};\n", "const getStyles = (options) =>\n  `\ndefs #statediagram-barbEnd {\n    fill: ${options.transitionColor};\n    stroke: ${options.transitionColor};\n  }\ng.stateGroup text {\n  fill: ${options.nodeBorder};\n  stroke: none;\n  font-size: 10px;\n}\ng.stateGroup text {\n  fill: ${options.textColor};\n  stroke: none;\n  font-size: 10px;\n\n}\ng.stateGroup .state-title {\n  font-weight: bolder;\n  fill: ${options.stateLabelColor};\n}\n\ng.stateGroup rect {\n  fill: ${options.mainBkg};\n  stroke: ${options.nodeBorder};\n}\n\ng.stateGroup line {\n  stroke: ${options.lineColor};\n  stroke-width: 1;\n}\n\n.transition {\n  stroke: ${options.transitionColor};\n  stroke-width: 1;\n  fill: none;\n}\n\n.stateGroup .composit {\n  fill: ${options.background};\n  border-bottom: 1px\n}\n\n.stateGroup .alt-composit {\n  fill: #e0e0e0;\n  border-bottom: 1px\n}\n\n.state-note {\n  stroke: ${options.noteBorderColor};\n  fill: ${options.noteBkgColor};\n\n  text {\n    fill: ${options.noteTextColor};\n    stroke: none;\n    font-size: 10px;\n  }\n}\n\n.stateLabel .box {\n  stroke: none;\n  stroke-width: 0;\n  fill: ${options.mainBkg};\n  opacity: 0.5;\n}\n\n.edgeLabel .label rect {\n  fill: ${options.labelBackgroundColor};\n  opacity: 0.5;\n}\n.edgeLabel .label text {\n  fill: ${options.transitionLabelColor || options.tertiaryTextColor};\n}\n.label div .edgeLabel {\n  color: ${options.transitionLabelColor || options.tertiaryTextColor};\n}\n\n.stateLabel text {\n  fill: ${options.stateLabelColor};\n  font-size: 10px;\n  font-weight: bold;\n}\n\n.node circle.state-start {\n  fill: ${options.specialStateColor};\n  stroke: ${options.specialStateColor};\n}\n\n.node .fork-join {\n  fill: ${options.specialStateColor};\n  stroke: ${options.specialStateColor};\n}\n\n.node circle.state-end {\n  fill: ${options.innerEndBackground};\n  stroke: ${options.background};\n  stroke-width: 1.5\n}\n.end-state-inner {\n  fill: ${options.compositeBackground || options.background};\n  // stroke: ${options.background};\n  stroke-width: 1.5\n}\n\n.node rect {\n  fill: ${options.stateBkg || options.mainBkg};\n  stroke: ${options.stateBorder || options.nodeBorder};\n  stroke-width: 1px;\n}\n.node polygon {\n  fill: ${options.mainBkg};\n  stroke: ${options.stateBorder || options.nodeBorder};;\n  stroke-width: 1px;\n}\n#statediagram-barbEnd {\n  fill: ${options.lineColor};\n}\n\n.statediagram-cluster rect {\n  fill: ${options.compositeTitleBackground};\n  stroke: ${options.stateBorder || options.nodeBorder};\n  stroke-width: 1px;\n}\n\n.cluster-label, .nodeLabel {\n  color: ${options.stateLabelColor};\n}\n\n.statediagram-cluster rect.outer {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-state .divider {\n  stroke: ${options.stateBorder || options.nodeBorder};\n}\n\n.statediagram-state .title-state {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-cluster.statediagram-cluster .inner {\n  fill: ${options.compositeBackground || options.background};\n}\n.statediagram-cluster.statediagram-cluster-alt .inner {\n  fill: ${options.altBackground ? options.altBackground : '#efefef'};\n}\n\n.statediagram-cluster .inner {\n  rx:0;\n  ry:0;\n}\n\n.statediagram-state rect.basic {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-state rect.divider {\n  stroke-dasharray: 10,10;\n  fill: ${options.altBackground ? options.altBackground : '#efefef'};\n}\n\n.note-edge {\n  stroke-dasharray: 5;\n}\n\n.statediagram-note rect {\n  fill: ${options.noteBkgColor};\n  stroke: ${options.noteBorderColor};\n  stroke-width: 1px;\n  rx: 0;\n  ry: 0;\n}\n.statediagram-note rect {\n  fill: ${options.noteBkgColor};\n  stroke: ${options.noteBorderColor};\n  stroke-width: 1px;\n  rx: 0;\n  ry: 0;\n}\n\n.statediagram-note text {\n  fill: ${options.noteTextColor};\n}\n\n.statediagram-note .nodeLabel {\n  color: ${options.noteTextColor};\n}\n.statediagram .edgeLabel {\n  color: red; // ${options.noteTextColor};\n}\n\n#dependencyStart, #dependencyEnd {\n  fill: ${options.lineColor};\n  stroke: ${options.lineColor};\n  stroke-width: 1;\n}\n\n.statediagramTitleText {\n  text-anchor: middle;\n  font-size: 18px;\n  fill: ${options.textColor};\n}\n`;\n\n// todo: change composit to composite\n// cspell:ignore composit\n\nexport default getStyles;\n"],
  "mappings": "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",
  "names": ["parser", "o", "__name", "k", "v", "l", "$V0", "$V1", "$V2", "$V3", "$V4", "$V5", "$V6", "$V7", "$V8", "$V9", "$Va", "$Vb", "$Vc", "$Vd", "$Ve", "$Vf", "$Vg", "$Vh", "$Vi", "$Vj", "$Vk", "$Vl", "$Vm", "$Vn", "$Vo", "$Vp", "$Vq", "$Vr", "$Vs", "yytext", "yyleng", "yylineno", "yy", "yystate", "$$", "_$", "$0", "stateStmt", "relDescription", "id", "description", "parts", "str", "hash", "error", "input", "self", "stack", "tstack", "vstack", "lstack", "table", "recovering", "TERROR", "EOF", "args", "lexer", "sharedState", "yyloc", "ranges", "popStack", "n", "lex", "token", "symbol", "preErrorSymbol", "state", "action", "a", "r", "yyval", "p", "len", "newState", "expected", "errStr", "ch", "lines", "oldLines", "past", "next", "pre", "c", "match", "indexed_rule", "backup", "tempMatch", "index", "rules", "i", "condition", "yy_", "$avoiding_name_collisions", "YY_START", "YYSTATE", "Parser", "stateDiagram_default", "parser", "DEFAULT_DIAGRAM_DIRECTION", "DEFAULT_NESTED_DOC_DIR", "STMT_STATE", "STMT_RELATION", "STMT_CLASSDEF", "STMT_APPLYCLASS", "DEFAULT_STATE_TYPE", "DIVIDER_TYPE", "START_NODE", "START_TYPE", "END_NODE", "END_TYPE", "COLOR_KEYWORD", "FILL_KEYWORD", "BG_FILL", "STYLECLASS_SEP", "newClassesList", "__name", "direction", "DEFAULT_DIAGRAM_DIRECTION", "rootDoc", "classes", "newDoc", "documents", "currentDocument", "startEndCount", "dividerCnt", "lineType", "relationType", "clone", "o", "setRootDoc", "log", "getRootDoc", "docTranslator", "parent", "node", "first", "STMT_RELATION", "STMT_STATE", "doc", "currentDoc", "i", "DIVIDER_TYPE", "newNode", "generateId", "docNode", "getRootDocV2", "extract", "_doc", "clear", "item", "addState", "addRelation", "STMT_CLASSDEF", "addStyleClass", "STMT_APPLYCLASS", "setCssClass", "id", "type", "DEFAULT_STATE_TYPE", "descr", "note", "styles", "textStyles", "trimmedId", "addDescription", "des", "doc2", "common_default", "getConfig", "cssClass", "style", "setStyle", "textStyle", "setTextStyle", "saveCommon", "getState", "getStates", "logDocuments", "getRelations", "startIdIfNeeded", "fixedId", "startTypeIfNeeded", "endIdIfNeeded", "endTypeIfNeeded", "addRelationObjs", "item1", "item2", "relationTitle", "id1", "type1", "id2", "type2", "title", "theState", "_descr", "cleanupLabel", "label", "getDividerId", "styleAttributes", "foundClass", "attrib", "fixedAttrib", "newStyle2", "getClasses", "itemIds", "cssClassName", "foundState", "itemId", "styleText", "getDirection", "setDirection", "dir", "trimColon", "str", "stateDb_default", "getAccTitle", "setAccTitle", "getAccDescription", "setAccDescription", "setDiagramTitle", "getDiagramTitle", "getStyles", "__name", "options", "styles_default"]
}
