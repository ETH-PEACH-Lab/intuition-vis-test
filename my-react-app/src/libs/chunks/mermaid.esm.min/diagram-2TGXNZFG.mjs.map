{
  "version": 3,
  "sources": ["../../../src/diagrams/visslides/db.ts", "../../../src/diagrams/visslides/parser.ts", "../../../src/diagrams/visslides/drawArrayDiagram.ts", "../../../src/diagrams/visslides/drawMatrixDiagram.ts", "../../../src/diagrams/visslides/renderer.ts", "../../../src/diagrams/visslides/styles.ts", "../../../src/diagrams/visslides/diagram.ts"],
  "sourcesContent": ["import { getConfig as commonGetConfig } from '../../config.js';\nimport type { VisSlidesDiagramConfig } from '../../config.type.js';\nimport DEFAULT_CONFIG from '../../defaultConfig.js';\nimport { cleanAndMerge } from '../../utils.js';\nimport {\n  clear as commonClear,\n  getAccDescription,\n  getAccTitle,\n  getDiagramTitle,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle,\n} from '../common/commonDb.js';\nimport type { VisSlidesDB, VisSlidePage } from './types.js';\n\nconst defaultVisSlidesData: VisSlidePage[] = [];\n\nlet data: VisSlidePage[] = [...defaultVisSlidesData];\n\nconst DEFAULT_VISSLIDES_CONFIG: Required<VisSlidesDiagramConfig> = DEFAULT_CONFIG.visslides;\n\nconst getConfig = (): Required<VisSlidesDiagramConfig> => {\n  return cleanAndMerge({\n    ...DEFAULT_VISSLIDES_CONFIG,\n    ...commonGetConfig().visslides,\n  });\n};\n\nconst getPages = (): VisSlidePage[] => data;\n\nconst addPage = (page: VisSlidePage) => {\n  data.push(page);\n};\n\nconst clear = () => {\n  commonClear();\n  data = [...defaultVisSlidesData];\n};\n\nexport const db: VisSlidesDB = {\n  getPages,\n  addPage,\n  getConfig,\n  clear,\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle,\n  getAccDescription,\n  setAccDescription,\n};\n", "import type { VisSlidesDiagram } from '@mermaid-js/parser';\nimport { parse } from '@mermaid-js/parser';\nimport type { ParserDefinition } from '../../diagram-api/types.js';\nimport { log } from '../../logger.js';\nimport { populateCommonDb } from '../common/populateCommonDb.js';\nimport { db } from './db.js';\n\nconst populate = (ast: VisSlidesDiagram) => {\n  populateCommonDb(ast, db);\n  for (const page of ast.pages) {\n    const subDiagrams = page.subDiagrams.map((subDiagram) => {\n      if ('elements' in subDiagram) {\n        return {\n          elements: subDiagram.elements.map((e) => ({\n            value: e.value,\n            arrow: e.arrow ? true : undefined,\n            context: e.context,\n            color: e.color,\n          })),\n          showIndex: subDiagram.showIndex ? true : undefined,\n        };\n      } else {\n        return {\n          rows: subDiagram.rows.map((row) => ({\n            elements: row.elements.map((e) => ({\n              value: e.value,\n              color: e.color,\n            })),\n          })),\n        };\n      }\n    });\n\n    db.addPage({ subDiagrams });\n  }\n};\n\nexport const parser: ParserDefinition = {\n  parse: async (input: string): Promise<void> => {\n    const ast: VisSlidesDiagram = await parse('visslides', input);\n    log.debug(ast);\n    populate(ast);\n  },\n};\n", "import type { ArrayDiagram, ArrayElement } from './types.js';\nimport type { ArrayDiagramConfig } from '../../config.type.js';\nimport type { DiagramRenderer, DrawDefinition, Group, SVG } from '../../diagram-api/types.js';\n\nexport const drawArrayDiagram = (svg: SVG, arrayDiagram: ArrayDiagram, yOffset: number, config: Required<ArrayDiagramConfig>) => {\n  const group = svg.append('g').attr('transform', `translate(0, ${yOffset})`);\n  \n  arrayDiagram.elements.forEach((element, index) => {\n    drawElement(group as unknown as SVG, element, index, config, arrayDiagram.showIndex || false);\n  });\n};\n\nconst drawElement = (\n  svg: SVG,\n  element: ArrayElement,\n  index: number,\n  {\n    elementColor,\n    borderColor,\n    borderWidth,\n    labelColor,\n    labelFontSize,\n  }: Required<ArrayDiagramConfig>,\n  showIndex: boolean\n) => {\n  const group = svg.append('g');\n  const elementX = index * 50 + 50;\n  const elementY = 50;\n\n  const fillColor = getColor(element.color);\n\n  if (element.arrow) {\n    const arrowYStart = elementY - 40;\n    const arrowYEnd = elementY - 10;\n    group.append('line')\n      .attr('x1', elementX + 20)\n      .attr('y1', arrowYStart)\n      .attr('x2', elementX + 20)\n      .attr('y2', arrowYEnd)\n      .attr('stroke', 'black')\n      .attr('marker-end', 'url(#arrowhead)');\n\n    if (element.context) {\n      group.append('text')\n        .attr('x', elementX + 20)\n        .attr('y', arrowYStart - 10)\n        .attr('fill', labelColor)\n        .attr('font-size', labelFontSize)\n        .attr('dominant-baseline', 'hanging')\n        .attr('text-anchor', 'middle')\n        .attr('class', 'arrowContext')\n        .text(element.context);\n    }\n  }\n\n  group.append('rect')\n    .attr('x', elementX)\n    .attr('y', elementY)\n    .attr('width', 40)\n    .attr('height', 40)\n    .style('fill', fillColor)\n    .attr('stroke', borderColor)\n    .attr('stroke-width', borderWidth)\n    .attr('class', 'arrayElement');\n\n  group.append('text')\n    .attr('x', elementX + 20)\n    .attr('y', elementY + 20)\n    .attr('fill', labelColor)\n    .attr('font-size', labelFontSize)\n    .attr('dominant-baseline', 'middle')\n    .attr('text-anchor', 'middle')\n    .attr('class', 'elementLabel')\n    .text(element.value);\n\n  if (showIndex) {\n    group.append('text')\n      .attr('x', elementX + 20)\n      .attr('y', elementY + 60)\n      .attr('fill', labelColor)\n      .attr('font-size', 25)\n      .attr('dominant-baseline', 'middle')\n      .attr('text-anchor', 'middle')\n      .attr('class', 'indexLabel')\n      .text(index);\n  }\n};\n\nconst getColor = (color?: string): string => {\n  switch (color) {\n    case 'blue':\n      return 'rgba(0, 0, 255, 0.3)';\n    case 'green':\n      return 'rgba(0, 255, 0, 0.3)';\n    case 'red':\n      return 'rgba(255, 0, 0, 0.3)';\n    default:\n      return 'none';\n  }\n};\n", "import type { MatrixDiagram, MatrixRow, MatrixElement } from './types.js';\nimport type { MatrixDiagramConfig } from '../../config.type.js';\nimport type { DiagramRenderer, DrawDefinition, Group, SVG } from '../../diagram-api/types.js';\n\nexport const drawMatrixDiagram = (svg: SVG, matrixDiagram: MatrixDiagram, yOffset: number, config: Required<MatrixDiagramConfig>) => {\n  const group = svg.append('g').attr('transform', `translate(0, ${yOffset})`);\n  \n  matrixDiagram.rows.forEach((row, rowIndex) => {\n    row.elements.forEach((element, colIndex) => {\n      drawElement(group as unknown as SVG, element, rowIndex, colIndex, config);\n    });\n  });\n};\n\nconst drawElement = (\n  svg: SVG,\n  element: MatrixElement,\n  rowIndex: number,\n  colIndex: number,\n  {\n    borderColor,\n    borderWidth,\n    labelColor,\n    labelFontSize,\n  }: Required<MatrixDiagramConfig>\n) => {\n  const group = svg.append('g');\n  const elementX = colIndex * 50 + 50;\n  const elementY = rowIndex * 50 + 50;\n\n  const fillColor = getColor(element.color);\n\n  group.append('rect')\n    .attr('x', elementX)\n    .attr('y', elementY)\n    .attr('width', 40)\n    .attr('height', 40)\n    .style('fill', fillColor)\n    .attr('stroke', borderColor)\n    .attr('stroke-width', borderWidth)\n    .attr('class', 'matrixElement');\n\n  group.append('text')\n    .attr('x', elementX + 20)\n    .attr('y', elementY + 20)\n    .attr('fill', labelColor)\n    .attr('font-size', labelFontSize)\n    .attr('dominant-baseline', 'middle')\n    .attr('text-anchor', 'middle')\n    .attr('class', 'elementLabel')\n    .text(element.value.toString());\n};\n\nconst getColor = (color?: string): string => {\n  switch (color) {\n    case 'blue':\n      return 'rgba(0, 0, 255, 0.3)';\n    case 'green':\n      return 'rgba(0, 255, 0, 0.3)';\n    case 'red':\n      return 'rgba(255, 0, 0, 0.3)';\n    default:\n      return 'none';\n  }\n};\n", "import * as d3 from 'd3';\nimport type { Diagram } from '../../Diagram.js';\nimport type { DiagramRenderer, DrawDefinition, SVG } from '../../diagram-api/types.js';\nimport { selectSvgElement } from '../../rendering-util/selectSvgElement.js';\nimport { configureSvgSize } from '../../setupGraphViewbox.js';\nimport type { VisSlidesDB, VisSlidePage, ArrayDiagram, MatrixDiagram } from './types.js';\nimport { drawArrayDiagram } from './drawArrayDiagram.js';\nimport { drawMatrixDiagram } from './drawMatrixDiagram.js';\n\nconst draw: DrawDefinition = (_text, id, _version, diagram: Diagram) => {\n  const db = diagram.db as VisSlidesDB;\n  const config = db.getConfig();\n  const pages = db.getPages();\n  const title = db.getDiagramTitle();\n  const svgHeight = 800;\n  const svgWidth = 600;\n  const svg: SVG = selectSvgElement(id);\n\n  let currentPage = 0;\n\n  const renderPage = (pageIndex: number) => {\n    svg.selectAll('g.page').attr('display', 'none');\n    svg.select(`#page${pageIndex}`).attr('display', 'inline');\n\n    // Update button states\n    svg.select('#prevButton').attr('fill', pageIndex > 0 ? '#007bff' : '#c0c0c0');\n    svg.select('#nextButton').attr('fill', pageIndex < pages.length - 1 ? '#007bff' : '#c0c0c0');\n  };\n\n  const addNavigationButtons = (svg: SVG, totalPages: number) => {\n    const buttonGroup = svg.append('g')\n      .attr('class', 'navigation-buttons');\n\n    // Prev button\n    const prevButtonGroup = buttonGroup.append('g')\n      .attr('id', 'prevButtonGroup')\n      .attr('cursor', 'pointer');\n\n    prevButtonGroup.append('rect')\n      .attr('id', 'prevButton')\n      .attr('x', 10)\n      .attr('y', svgHeight - 40)\n      .attr('width', 60)\n      .attr('height', 30)\n      .attr('fill', '#c0c0c0'); // Initially disabled\n\n    prevButtonGroup.append('text')\n      .text('Prev')\n      .attr('x', 40)\n      .attr('y', svgHeight - 20)\n      .attr('fill', 'white')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle');\n\n    // Next button\n    const nextButtonGroup = buttonGroup.append('g')\n      .attr('id', 'nextButtonGroup')\n      .attr('cursor', 'pointer');\n\n    nextButtonGroup.append('rect')\n      .attr('id', 'nextButton')\n      .attr('x', svgWidth - 70)\n      .attr('y', svgHeight - 40)\n      .attr('width', 60)\n      .attr('height', 30)\n      .attr('fill', '#007bff'); // Initially enabled\n\n    nextButtonGroup.append('text')\n      .text('Next')\n      .attr('x', svgWidth - 40)\n      .attr('y', svgHeight - 20)\n      .attr('fill', 'white')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle');\n\n    prevButtonGroup.node()?.addEventListener('click', () => {\n      if (currentPage > 0) {\n        currentPage -= 1;\n        renderPage(currentPage);\n      }\n    });\n\n    nextButtonGroup.node()?.addEventListener('click', () => {\n      if (currentPage < totalPages - 1) {\n        currentPage += 1;\n        renderPage(currentPage);\n      }\n    });\n  };\n\n  const drawPage = (svg: SVG, page: VisSlidePage, pageIndex: number) => {\n    const pageGroup = svg.append('g')\n      .attr('id', `page${pageIndex}`)\n      .attr('class', 'page')\n      .attr('display', pageIndex === 0 ? 'inline' : 'none');\n\n    if (title) {\n      pageGroup\n        .append('text')\n        .text(title)\n        .attr('x', svgWidth / 2)\n        .attr('y', 25)\n        .attr('dominant-baseline', 'middle')\n        .attr('text-anchor', 'middle')\n        .attr('class', 'pageTitle');\n    }\n\n    let yOffset = 50;\n\n    for (const subDiagram of page.subDiagrams) {\n      if ((subDiagram as ArrayDiagram).elements) {\n        drawArrayDiagram(pageGroup as unknown as SVG, subDiagram as ArrayDiagram, yOffset, config);\n        yOffset += 100; // Adjust the offset for next sub-diagram\n      } else {\n        drawMatrixDiagram(pageGroup as unknown as SVG, subDiagram as MatrixDiagram, yOffset, config);\n        yOffset += 200; // Adjust the offset for next sub-diagram\n      }\n    }\n  };\n\n  svg.attr('viewBox', `0 0 ${svgWidth} ${svgHeight}`);\n  configureSvgSize(svg, svgHeight, svgWidth, config.useMaxWidth);\n\n  pages.forEach((page, index) => {\n    drawPage(svg, page, index);\n  });\n\n  addNavigationButtons(svg, pages.length);\n\n  renderPage(currentPage);\n};\n\nexport const renderer: DiagramRenderer = { draw };\n", "import { log } from '../../logger.js';\n\nexport const styles = (options: any = {}) => {\n  log.debug({ options });\n  return `\n    .element {\n      font-size: ${options.array?.elementFontSize ?? '10px'};\n      fill: ${options.array?.valueColor ?? 'black'};\n    }\n    .element.index {\n      fill: ${options.array?.indexColor ?? 'black'};\n    }\n    .element {\n      stroke: ${options.array?.elementStrokeColor ?? 'black'};\n      stroke-width: ${options.array?.elementStrokeWidth ?? '1'};\n      fill: ${options.array?.elementFillColor ?? '#efefef'};\n    }\n  `;\n};\n\nexport default styles;", "import type { DiagramDefinition } from '../../diagram-api/types.js';\nimport { db } from './db.js';\nimport { parser } from './parser.js';\nimport { renderer } from './renderer.js';\nimport { styles } from './styles.js';\n\nexport const diagram: DiagramDefinition = {\n  parser,\n  db,\n  renderer,\n  styles,\n};"],
  "mappings": "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",
  "names": ["defaultVisSlidesData", "data", "DEFAULT_VISSLIDES_CONFIG", "defaultConfig_default", "getConfig", "__name", "cleanAndMerge", "getPages", "addPage", "page", "clear", "db", "setAccTitle", "getAccTitle", "setDiagramTitle", "getDiagramTitle", "getAccDescription", "setAccDescription", "populate", "__name", "ast", "populateCommonDb", "db", "page", "subDiagrams", "subDiagram", "e", "row", "parser", "input", "parse", "log", "drawArrayDiagram", "__name", "svg", "arrayDiagram", "yOffset", "config", "group", "element", "index", "drawElement", "elementColor", "borderColor", "borderWidth", "labelColor", "labelFontSize", "showIndex", "elementX", "elementY", "fillColor", "getColor", "arrowYStart", "arrowYEnd", "color", "drawMatrixDiagram", "__name", "svg", "matrixDiagram", "yOffset", "config", "group", "row", "rowIndex", "element", "colIndex", "drawElement", "borderColor", "borderWidth", "labelColor", "labelFontSize", "elementX", "elementY", "fillColor", "getColor", "color", "draw", "__name", "_text", "id", "_version", "diagram", "db", "config", "pages", "title", "svgHeight", "svgWidth", "svg", "selectSvgElement", "currentPage", "renderPage", "pageIndex", "addNavigationButtons", "totalPages", "buttonGroup", "prevButtonGroup", "nextButtonGroup", "drawPage", "page", "pageGroup", "yOffset", "subDiagram", "drawArrayDiagram", "drawMatrixDiagram", "configureSvgSize", "index", "renderer", "styles", "__name", "options", "log", "diagram", "parser", "db", "renderer", "styles"]
}
