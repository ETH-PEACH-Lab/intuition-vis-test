import{a as E}from"./chunk-PESYNNQV.mjs";import"./chunk-WUM4NJK5.mjs";import"./chunk-CIOHJ5F5.mjs";import"./chunk-EAJACKDH.mjs";import"./chunk-XYHAFWDE.mjs";import"./chunk-SP6X4G6O.mjs";import{a as I}from"./chunk-BEH7KTBC.mjs";import"./chunk-VMDNBU76.mjs";import"./chunk-LEAL3RNQ.mjs";import{l as y}from"./chunk-JT6TYY6Y.mjs";import"./chunk-EZ6AQD5Z.mjs";import{Fa as M,Ia as b,La as w,Ma as h,Na as C,Oa as R,Pa as S,Qa as v,Ra as j,b as x,pa as D}from"./chunk-3RIG7DRU.mjs";import"./chunk-RS46GSJM.mjs";import{a as r}from"./chunk-J73WXDYM.mjs";var k={rows:[]},u=structuredClone(k),F=D.matrix,_=r(()=>y({...F,...M().matrix}),"getConfig"),q=r(()=>u.rows,"getMatrix"),B=r(t=>{u.rows.push(t)},"addRow"),V=r(()=>{w(),u=structuredClone(k)},"clear"),f={addRow:B,getMatrix:q,getConfig:_,clear:V,setAccTitle:h,getAccTitle:C,setDiagramTitle:v,getDiagramTitle:j,getAccDescription:S,setAccDescription:R};var W=r(t=>{for(let a of t.rows){let m=a.elements.map(i=>({value:i.value,color:i.color}));f.addRow({elements:m})}},"populate"),G={parse:async t=>{let a=await E("matrix",t);x.debug(a),W(a)}};var P=r((t,a,m,i)=>{let n=i.db,e=n.getConfig(),l=n.getMatrix(),c=n.getDiagramTitle(),g=i.text.toLowerCase().includes("showindex"),d=1600,s=1600,o=I(a);o.attr("viewbox",`0 0 ${s} ${d}`),b(o,d,s,e.useMaxWidth),c&&o.append("text").text(c).attr("x",s/2).attr("y",25).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","matrixTitle");for(let[p,L]of l.entries())for(let[$,z]of L.elements.entries())O(o,z,p,$,e,g);g&&U(o,l.length,l[0]?.elements.length||0,e)},"draw"),N=r(t=>{switch(t){case"blue":return"rgba(0, 0, 255, 0.4)";case"green":return"rgba(0, 255, 0, 0.4)";case"red":return"rgba(255, 0, 0, 0.4)";default:return"none"}},"getColor"),O=r((t,a,m,i,{borderColor:n,borderWidth:e,labelColor:l,labelFontSize:c},g)=>{let d=t.append("g"),s=i*50+50,o=m*50+50,p=N(a.color);d.append("rect").attr("x",s).attr("y",o).attr("width",50).attr("height",50).style("fill",p).attr("stroke","blue").attr("stroke-width",1).attr("class","matrixElement"),d.append("text").attr("x",s+20).attr("y",o+20).attr("fill",l).attr("font-size",c).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","elementLabel").text(a.value.toString())},"drawElement"),U=r((t,a,m,{labelColor:i,labelFontSize:n})=>{for(let e=0;e<a;e++)t.append("text").attr("x",20).attr("y",e*50+70).attr("fill",i).attr("font-size",n).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","indexLabel").text(e.toString());for(let e=0;e<m;e++)t.append("text").attr("x",e*50+70).attr("y",a*50+70).attr("fill",i).attr("font-size",n).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","indexLabel").text(e.toString())},"drawIndices"),T={draw:P};var A=r((t={})=>(x.debug({options:t}),`
    .element {
      font-size: ${t.array?.elementFontSize??"10px"};
      fill: ${t.array?.valueColor??"black"};
    }
    .element.index {
      fill: ${t.array?.indexColor??"black"};
    }
    .element {
      stroke: ${t.array?.elementStrokeColor??"black"};
      stroke-width: ${t.array?.elementStrokeWidth??"1"};
      fill: ${t.array?.elementFillColor??"#efefef"};
    }
  `),"styles");var pt={parser:G,db:f,renderer:T,styles:A};export{pt as diagram};
