{
  "version": 3,
  "sources": ["../../../src/diagrams/state/parser/stateDiagram.jison", "../../../src/diagrams/state/stateCommon.ts", "../../../src/diagrams/state/stateDb.js", "../../../src/diagrams/state/styles.js"],
  "sourcesContent": ["/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,2],$V1=[1,3],$V2=[1,4],$V3=[2,4],$V4=[1,9],$V5=[1,11],$V6=[1,15],$V7=[1,16],$V8=[1,17],$V9=[1,18],$Va=[1,30],$Vb=[1,19],$Vc=[1,20],$Vd=[1,21],$Ve=[1,22],$Vf=[1,23],$Vg=[1,25],$Vh=[1,26],$Vi=[1,27],$Vj=[1,28],$Vk=[1,29],$Vl=[1,32],$Vm=[1,33],$Vn=[1,34],$Vo=[1,35],$Vp=[1,31],$Vq=[1,4,5,15,16,18,20,21,23,24,25,26,27,28,32,34,36,37,41,44,45,46,47,50],$Vr=[1,4,5,13,14,15,16,18,20,21,23,24,25,26,27,28,32,34,36,37,41,44,45,46,47,50],$Vs=[4,5,15,16,18,20,21,23,24,25,26,27,28,32,34,36,37,41,44,45,46,47,50];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"start\":3,\"SPACE\":4,\"NL\":5,\"SD\":6,\"document\":7,\"line\":8,\"statement\":9,\"classDefStatement\":10,\"cssClassStatement\":11,\"idStatement\":12,\"DESCR\":13,\"-->\":14,\"HIDE_EMPTY\":15,\"scale\":16,\"WIDTH\":17,\"COMPOSIT_STATE\":18,\"STRUCT_START\":19,\"STRUCT_STOP\":20,\"STATE_DESCR\":21,\"AS\":22,\"ID\":23,\"FORK\":24,\"JOIN\":25,\"CHOICE\":26,\"CONCURRENT\":27,\"note\":28,\"notePosition\":29,\"NOTE_TEXT\":30,\"direction\":31,\"acc_title\":32,\"acc_title_value\":33,\"acc_descr\":34,\"acc_descr_value\":35,\"acc_descr_multiline_value\":36,\"classDef\":37,\"CLASSDEF_ID\":38,\"CLASSDEF_STYLEOPTS\":39,\"DEFAULT\":40,\"class\":41,\"CLASSENTITY_IDS\":42,\"STYLECLASS\":43,\"direction_tb\":44,\"direction_bt\":45,\"direction_rl\":46,\"direction_lr\":47,\"eol\":48,\";\":49,\"EDGE_STATE\":50,\"STYLE_SEPARATOR\":51,\"left_of\":52,\"right_of\":53,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"SPACE\",5:\"NL\",6:\"SD\",13:\"DESCR\",14:\"-->\",15:\"HIDE_EMPTY\",16:\"scale\",17:\"WIDTH\",18:\"COMPOSIT_STATE\",19:\"STRUCT_START\",20:\"STRUCT_STOP\",21:\"STATE_DESCR\",22:\"AS\",23:\"ID\",24:\"FORK\",25:\"JOIN\",26:\"CHOICE\",27:\"CONCURRENT\",28:\"note\",30:\"NOTE_TEXT\",32:\"acc_title\",33:\"acc_title_value\",34:\"acc_descr\",35:\"acc_descr_value\",36:\"acc_descr_multiline_value\",37:\"classDef\",38:\"CLASSDEF_ID\",39:\"CLASSDEF_STYLEOPTS\",40:\"DEFAULT\",41:\"class\",42:\"CLASSENTITY_IDS\",43:\"STYLECLASS\",44:\"direction_tb\",45:\"direction_bt\",46:\"direction_rl\",47:\"direction_lr\",49:\";\",50:\"EDGE_STATE\",51:\"STYLE_SEPARATOR\",52:\"left_of\",53:\"right_of\"},\nproductions_: [0,[3,2],[3,2],[3,2],[7,0],[7,2],[8,2],[8,1],[8,1],[9,1],[9,1],[9,1],[9,2],[9,3],[9,4],[9,1],[9,2],[9,1],[9,4],[9,3],[9,6],[9,1],[9,1],[9,1],[9,1],[9,4],[9,4],[9,1],[9,2],[9,2],[9,1],[10,3],[10,3],[11,3],[31,1],[31,1],[31,1],[31,1],[48,1],[48,1],[12,1],[12,1],[12,3],[12,3],[29,1],[29,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 3:\n /* console.log('--> Root document', $$[$0]); */   yy.setRootDoc($$[$0]); return $$[$0]; \nbreak;\ncase 4:\n /*console.log('empty document'); */ this.$ = [] \nbreak;\ncase 5:\n\n        if($$[$0] !='nl'){\n            /* console.log(' document: 1: ', $$[$0-1], ' pushing 2: ', $$[$0]); */\n            $$[$0-1].push($$[$0]); this.$ = $$[$0-1]\n        }\n        /* console.log('Got document',$$[$0-1], $$[$0]); */\n    \nbreak;\ncase 6: case 7:\n this.$ = $$[$0] \nbreak;\ncase 8:\n this.$='nl';\nbreak;\ncase 11:\n /* console.log('got id', $$[$0]); */\n            this.$=$$[$0];\n\t    \nbreak;\ncase 12:\n\n            const stateStmt = $$[$0-1];\n            stateStmt.description = yy.trimColon($$[$0]);\n            this.$ = stateStmt;\n\t    \nbreak;\ncase 13:\n\n            /* console.info('got ids: 1: ', $$[$0-2], ' 2:', $$[$0-1],'  3: ', $$[$0]); */\n            // console.log(' idStatement --> idStatement : state1 =', $$[$0-2], ' state2 =', $$[$0]);\n            this.$={ stmt: 'relation', state1: $$[$0-2], state2: $$[$0]};\n        \nbreak;\ncase 14:\n\n            const relDescription = yy.trimColon($$[$0]);\n            /* console.log(' idStatement --> idStatement DESCR : state1 =', $$[$0-3], ' state2stmt =', $$[$0-1], '  description: ', relDescription); */\n            this.$={ stmt: 'relation', state1: $$[$0-3], state2: $$[$0-1], description: relDescription};\n        \nbreak;\ncase 18:\n\n        // console.log('Adding document for state without id ', $$[$0-3]);\n        this.$={ stmt: 'state', id: $$[$0-3], type: 'default', description: '', doc: $$[$0-1] }\n    \nbreak;\ncase 19:\n\n        var id=$$[$0];\n        var description = $$[$0-2].trim();\n        if($$[$0].match(':')){\n            var parts = $$[$0].split(':');\n            id=parts[0];\n            description = [description, parts[1]];\n        }\n        this.$={stmt: 'state', id: id, type: 'default', description: description};\n\n    \nbreak;\ncase 20:\n\n         // console.log('state with id ', $$[$0-3],' document = ', $$[$0-1], );\n         this.$={ stmt: 'state', id: $$[$0-3], type: 'default', description: $$[$0-5], doc: $$[$0-1] }\n    \nbreak;\ncase 21:\n\n        this.$={ stmt: 'state', id: $$[$0], type: 'fork' }\n    \nbreak;\ncase 22:\n\n        this.$={ stmt: 'state', id: $$[$0], type: 'join' }\n    \nbreak;\ncase 23:\n\n        this.$={ stmt: 'state', id: $$[$0], type: 'choice' }\n    \nbreak;\ncase 24:\n\n        this.$={ stmt: 'state', id: yy.getDividerId(), type: 'divider' }\n    \nbreak;\ncase 25:\n\n        /* console.warn('got NOTE, position: ', $$[$0-2].trim(), 'id = ', $$[$0-1].trim(), 'note: ', $$[$0]);*/\n        this.$={ stmt: 'state', id: $$[$0-1].trim(), note:{position: $$[$0-2].trim(), text: $$[$0].trim()}};\n    \nbreak;\ncase 28:\n this.$=$$[$0].trim();yy.setAccTitle(this.$); \nbreak;\ncase 29: case 30:\n this.$=$$[$0].trim();yy.setAccDescription(this.$); \nbreak;\ncase 31: case 32:\n\n        this.$ = { stmt: 'classDef', id: $$[$0-1].trim(), classes: $$[$0].trim() };\n        \nbreak;\ncase 33:\n\n        //console.log('apply class: id(s): ',$$[$0-1], '  style class: ', $$[$0]);\n        this.$={ stmt: 'applyClass', id: $$[$0-1].trim(), styleClass: $$[$0].trim() };\n        \nbreak;\ncase 34:\n yy.setDirection('TB');this.$={stmt:'dir', value:'TB'};\nbreak;\ncase 35:\n yy.setDirection('BT');this.$={stmt:'dir', value:'BT'};\nbreak;\ncase 36:\n yy.setDirection('RL'); this.$={stmt:'dir', value:'RL'};\nbreak;\ncase 37:\n yy.setDirection('LR');this.$={stmt:'dir', value:'LR'};\nbreak;\ncase 40: case 41:\n   /* console.log('idStatement id: ', $$[$0]); */\n            this.$={ stmt: 'state', id: $$[$0].trim(), type: 'default', description: '' };\n        \nbreak;\ncase 42:\n   /*console.log('idStatement ID STYLE_SEPARATOR ID'); */\n            this.$={ stmt: 'state', id: $$[$0-2].trim(), classes: [$$[$0].trim()], type: 'default', description: '' };\n        \nbreak;\ncase 43:\n   /*console.log('idStatement EDGE_STATE STYLE_SEPARATOR ID'); */\n            this.$={ stmt: 'state', id: $$[$0-2].trim(), classes: [$$[$0].trim()], type: 'default', description: '' };\n        \nbreak;\n}\n},\ntable: [{3:1,4:$V0,5:$V1,6:$V2},{1:[3]},{3:5,4:$V0,5:$V1,6:$V2},{3:6,4:$V0,5:$V1,6:$V2},o([1,4,5,15,16,18,21,23,24,25,26,27,28,32,34,36,37,41,44,45,46,47,50],$V3,{7:7}),{1:[2,1]},{1:[2,2]},{1:[2,3],4:$V4,5:$V5,8:8,9:10,10:12,11:13,12:14,15:$V6,16:$V7,18:$V8,21:$V9,23:$Va,24:$Vb,25:$Vc,26:$Vd,27:$Ve,28:$Vf,31:24,32:$Vg,34:$Vh,36:$Vi,37:$Vj,41:$Vk,44:$Vl,45:$Vm,46:$Vn,47:$Vo,50:$Vp},o($Vq,[2,5]),{9:36,10:12,11:13,12:14,15:$V6,16:$V7,18:$V8,21:$V9,23:$Va,24:$Vb,25:$Vc,26:$Vd,27:$Ve,28:$Vf,31:24,32:$Vg,34:$Vh,36:$Vi,37:$Vj,41:$Vk,44:$Vl,45:$Vm,46:$Vn,47:$Vo,50:$Vp},o($Vq,[2,7]),o($Vq,[2,8]),o($Vq,[2,9]),o($Vq,[2,10]),o($Vq,[2,11],{13:[1,37],14:[1,38]}),o($Vq,[2,15]),{17:[1,39]},o($Vq,[2,17],{19:[1,40]}),{22:[1,41]},o($Vq,[2,21]),o($Vq,[2,22]),o($Vq,[2,23]),o($Vq,[2,24]),{29:42,30:[1,43],52:[1,44],53:[1,45]},o($Vq,[2,27]),{33:[1,46]},{35:[1,47]},o($Vq,[2,30]),{38:[1,48],40:[1,49]},{42:[1,50]},o($Vr,[2,40],{51:[1,51]}),o($Vr,[2,41],{51:[1,52]}),o($Vq,[2,34]),o($Vq,[2,35]),o($Vq,[2,36]),o($Vq,[2,37]),o($Vq,[2,6]),o($Vq,[2,12]),{12:53,23:$Va,50:$Vp},o($Vq,[2,16]),o($Vs,$V3,{7:54}),{23:[1,55]},{23:[1,56]},{22:[1,57]},{23:[2,44]},{23:[2,45]},o($Vq,[2,28]),o($Vq,[2,29]),{39:[1,58]},{39:[1,59]},{43:[1,60]},{23:[1,61]},{23:[1,62]},o($Vq,[2,13],{13:[1,63]}),{4:$V4,5:$V5,8:8,9:10,10:12,11:13,12:14,15:$V6,16:$V7,18:$V8,20:[1,64],21:$V9,23:$Va,24:$Vb,25:$Vc,26:$Vd,27:$Ve,28:$Vf,31:24,32:$Vg,34:$Vh,36:$Vi,37:$Vj,41:$Vk,44:$Vl,45:$Vm,46:$Vn,47:$Vo,50:$Vp},o($Vq,[2,19],{19:[1,65]}),{30:[1,66]},{23:[1,67]},o($Vq,[2,31]),o($Vq,[2,32]),o($Vq,[2,33]),o($Vr,[2,42]),o($Vr,[2,43]),o($Vq,[2,14]),o($Vq,[2,18]),o($Vs,$V3,{7:68}),o($Vq,[2,25]),o($Vq,[2,26]),{4:$V4,5:$V5,8:8,9:10,10:12,11:13,12:14,15:$V6,16:$V7,18:$V8,20:[1,69],21:$V9,23:$Va,24:$Vb,25:$Vc,26:$Vd,27:$Ve,28:$Vf,31:24,32:$Vg,34:$Vh,36:$Vi,37:$Vj,41:$Vk,44:$Vl,45:$Vm,46:$Vn,47:$Vo,50:$Vp},o($Vq,[2,20])],\ndefaultActions: {5:[2,1],6:[2,2],44:[2,44],45:[2,45]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n            function lex() {\n            var token;\n            token = tstack.pop() || lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                if (token instanceof Array) {\n                    tstack = token;\n                    token = tstack.pop();\n                }\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var errStr = '';\n            expected = [];\n            for (p in table[state]) {\n                if (this.terminals_[p] && p > TERROR) {\n                    expected.push('\\'' + this.terminals_[p] + '\\'');\n                }\n            }\n            if (lexer.showPosition) {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n            } else {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n            }\n            this.parseError(errStr, {\n                text: lexer.match,\n                token: this.terminals_[symbol] || symbol,\n                line: lexer.yylineno,\n                loc: yyloc,\n                expected: expected\n            });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 40;\nbreak;\ncase 1:return 44;\nbreak;\ncase 2:return 45;\nbreak;\ncase 3:return 46;\nbreak;\ncase 4:return 47;\nbreak;\ncase 5:/* skip comments */\nbreak;\ncase 6:/* skip comments */{ /*console.log('Crap after close');*/ }\nbreak;\ncase 7:return 5;\nbreak;\ncase 8:/* skip all whitespace */\nbreak;\ncase 9:/* skip same-line whitespace */\nbreak;\ncase 10:/* skip comments */\nbreak;\ncase 11:/* skip comments */\nbreak;\ncase 12: this.pushState('SCALE'); /* console.log('Got scale', yy_.yytext);*/ return 16; \nbreak;\ncase 13:return 17;\nbreak;\ncase 14: this.popState(); \nbreak;\ncase 15: this.begin(\"acc_title\");return 32; \nbreak;\ncase 16: this.popState(); return \"acc_title_value\"; \nbreak;\ncase 17: this.begin(\"acc_descr\");return 34; \nbreak;\ncase 18: this.popState(); return \"acc_descr_value\"; \nbreak;\ncase 19: this.begin(\"acc_descr_multiline\"); \nbreak;\ncase 20: this.popState(); \nbreak;\ncase 21:return \"acc_descr_multiline_value\";\nbreak;\ncase 22: this.pushState('CLASSDEF'); return 37; \nbreak;\ncase 23: this.popState(); this.pushState('CLASSDEFID'); return 'DEFAULT_CLASSDEF_ID' \nbreak;\ncase 24: this.popState(); this.pushState('CLASSDEFID'); return 38 \nbreak;\ncase 25: this.popState(); return 39 \nbreak;\ncase 26: this.pushState('CLASS'); return 41; \nbreak;\ncase 27: this.popState(); this.pushState('CLASS_STYLE'); return 42 \nbreak;\ncase 28: this.popState(); return 43 \nbreak;\ncase 29: this.pushState('SCALE'); /* console.log('Got scale', yy_.yytext);*/ return 16; \nbreak;\ncase 30:return 17;\nbreak;\ncase 31:this.popState();\nbreak;\ncase 32: /* console.log('Starting STATE '); */ this.pushState('STATE'); \nbreak;\ncase 33:this.popState();yy_.yytext=yy_.yytext.slice(0,-8).trim(); /*console.warn('Fork Fork: ',yy_.yytext);*/return 24;\nbreak;\ncase 34:this.popState();yy_.yytext=yy_.yytext.slice(0,-8).trim();/*console.warn('Fork Join: ',yy_.yytext);*/return 25;\nbreak;\ncase 35:this.popState();yy_.yytext=yy_.yytext.slice(0,-10).trim();/*console.warn('Fork Join: ',yy_.yytext);*/return 26;\nbreak;\ncase 36:this.popState();yy_.yytext=yy_.yytext.slice(0,-8).trim();/*console.warn('Fork Fork: ',yy_.yytext);*/return 24;\nbreak;\ncase 37:this.popState();yy_.yytext=yy_.yytext.slice(0,-8).trim();/*console.warn('Fork Join: ',yy_.yytext);*/return 25;\nbreak;\ncase 38:this.popState();yy_.yytext=yy_.yytext.slice(0,-10).trim();/*console.warn('Fork Join: ',yy_.yytext);*/return 26;\nbreak;\ncase 39: return 44;\nbreak;\ncase 40: return 45;\nbreak;\ncase 41: return 46;\nbreak;\ncase 42: return 47;\nbreak;\ncase 43: /* console.log('Starting STATE_STRING'); */ this.pushState(\"STATE_STRING\"); \nbreak;\ncase 44: this.pushState('STATE_ID'); /* console.log('pushState(STATE_ID)'); */ return \"AS\"; \nbreak;\ncase 45: this.popState(); /* console.log('STATE_ID', yy_.yytext); */ return \"ID\"; \nbreak;\ncase 46: this.popState(); \nbreak;\ncase 47: /* console.log('Long description:', yy_.yytext); */ return \"STATE_DESCR\"; \nbreak;\ncase 48: /* console.log('COMPOSIT_STATE', yy_.yytext); */ return 18; \nbreak;\ncase 49: this.popState(); \nbreak;\ncase 50: this.popState(); this.pushState('struct'); /* console.log('begin struct', yy_.yytext); */ return 19; \nbreak;\ncase 51:/* skip comments inside state*/\nbreak;\ncase 52: /*console.log('Ending struct');*/ this.popState(); return 20;\nbreak;\ncase 53:/* nothing */\nbreak;\ncase 54: this.begin('NOTE'); return 28; \nbreak;\ncase 55: this.popState(); this.pushState('NOTE_ID'); return 52; \nbreak;\ncase 56: this.popState(); this.pushState('NOTE_ID'); return 53; \nbreak;\ncase 57: this.popState(); this.pushState('FLOATING_NOTE'); \nbreak;\ncase 58: this.popState(); this.pushState('FLOATING_NOTE_ID'); return \"AS\"; \nbreak;\ncase 59:/**/\nbreak;\ncase 60: /* console.log('Floating note text: ', yy_.yytext); */ return \"NOTE_TEXT\"; \nbreak;\ncase 61: this.popState(); /* console.log('Floating note ID', yy_.yytext);*/ return \"ID\"; \nbreak;\ncase 62: this.popState(); this.pushState('NOTE_TEXT'); /*console.log('Got ID for note', yy_.yytext);*/ return 23; \nbreak;\ncase 63: this.popState(); /* console.log('Got NOTE_TEXT for note',yy_.yytext);*/yy_.yytext = yy_.yytext.substr(2).trim(); return 30; \nbreak;\ncase 64: this.popState(); /* console.log('Got NOTE_TEXT for note',yy_.yytext);*/yy_.yytext = yy_.yytext.slice(0,-8).trim(); return 30; \nbreak;\ncase 65: /* console.log('Got state diagram', yy_.yytext,'#'); */ return 6; \nbreak;\ncase 66: /* console.log('Got state diagram', yy_.yytext,'#'); */ return 6; \nbreak;\ncase 67: /* console.log('HIDE_EMPTY', yy_.yytext,'#'); */ return 15; \nbreak;\ncase 68: /* console.log('EDGE_STATE=',yy_.yytext); */ return 50; \nbreak;\ncase 69: /* console.log('=>ID=',yy_.yytext); */ return 23; \nbreak;\ncase 70: yy_.yytext = yy_.yytext.trim(); /* console.log('Descr = ', yy_.yytext); */ return 13; \nbreak;\ncase 71:return 14;\nbreak;\ncase 72:return 27;\nbreak;\ncase 73:return 51;\nbreak;\ncase 74:return 5;\nbreak;\ncase 75:return 'INVALID';\nbreak;\n}\n},\nrules: [/^(?:default\\b)/i,/^(?:.*direction\\s+TB[^\\n]*)/i,/^(?:.*direction\\s+BT[^\\n]*)/i,/^(?:.*direction\\s+RL[^\\n]*)/i,/^(?:.*direction\\s+LR[^\\n]*)/i,/^(?:%%(?!\\{)[^\\n]*)/i,/^(?:[^\\}]%%[^\\n]*)/i,/^(?:[\\n]+)/i,/^(?:[\\s]+)/i,/^(?:((?!\\n)\\s)+)/i,/^(?:#[^\\n]*)/i,/^(?:%[^\\n]*)/i,/^(?:scale\\s+)/i,/^(?:\\d+)/i,/^(?:\\s+width\\b)/i,/^(?:accTitle\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*\\{\\s*)/i,/^(?:[\\}])/i,/^(?:[^\\}]*)/i,/^(?:classDef\\s+)/i,/^(?:DEFAULT\\s+)/i,/^(?:\\w+\\s+)/i,/^(?:[^\\n]*)/i,/^(?:class\\s+)/i,/^(?:(\\w+)+((,\\s*\\w+)*))/i,/^(?:[^\\n]*)/i,/^(?:scale\\s+)/i,/^(?:\\d+)/i,/^(?:\\s+width\\b)/i,/^(?:state\\s+)/i,/^(?:.*<<fork>>)/i,/^(?:.*<<join>>)/i,/^(?:.*<<choice>>)/i,/^(?:.*\\[\\[fork\\]\\])/i,/^(?:.*\\[\\[join\\]\\])/i,/^(?:.*\\[\\[choice\\]\\])/i,/^(?:.*direction\\s+TB[^\\n]*)/i,/^(?:.*direction\\s+BT[^\\n]*)/i,/^(?:.*direction\\s+RL[^\\n]*)/i,/^(?:.*direction\\s+LR[^\\n]*)/i,/^(?:[\"])/i,/^(?:\\s*as\\s+)/i,/^(?:[^\\n\\{]*)/i,/^(?:[\"])/i,/^(?:[^\"]*)/i,/^(?:[^\\n\\s\\{]+)/i,/^(?:\\n)/i,/^(?:\\{)/i,/^(?:%%(?!\\{)[^\\n]*)/i,/^(?:\\})/i,/^(?:[\\n])/i,/^(?:note\\s+)/i,/^(?:left of\\b)/i,/^(?:right of\\b)/i,/^(?:\")/i,/^(?:\\s*as\\s*)/i,/^(?:[\"])/i,/^(?:[^\"]*)/i,/^(?:[^\\n]*)/i,/^(?:\\s*[^:\\n\\s\\-]+)/i,/^(?:\\s*:[^:\\n;]+)/i,/^(?:[\\s\\S]*?end note\\b)/i,/^(?:stateDiagram\\s+)/i,/^(?:stateDiagram-v2\\s+)/i,/^(?:hide empty description\\b)/i,/^(?:\\[\\*\\])/i,/^(?:[^:\\n\\s\\-\\{]+)/i,/^(?:\\s*:[^:\\n;]+)/i,/^(?:-->)/i,/^(?:--)/i,/^(?::::)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"LINE\":{\"rules\":[9,10],\"inclusive\":false},\"struct\":{\"rules\":[9,10,22,26,32,39,40,41,42,51,52,53,54,68,69,70,71,72],\"inclusive\":false},\"FLOATING_NOTE_ID\":{\"rules\":[61],\"inclusive\":false},\"FLOATING_NOTE\":{\"rules\":[58,59,60],\"inclusive\":false},\"NOTE_TEXT\":{\"rules\":[63,64],\"inclusive\":false},\"NOTE_ID\":{\"rules\":[62],\"inclusive\":false},\"NOTE\":{\"rules\":[55,56,57],\"inclusive\":false},\"CLASS_STYLE\":{\"rules\":[28],\"inclusive\":false},\"CLASS\":{\"rules\":[27],\"inclusive\":false},\"CLASSDEFID\":{\"rules\":[25],\"inclusive\":false},\"CLASSDEF\":{\"rules\":[23,24],\"inclusive\":false},\"acc_descr_multiline\":{\"rules\":[20,21],\"inclusive\":false},\"acc_descr\":{\"rules\":[18],\"inclusive\":false},\"acc_title\":{\"rules\":[16],\"inclusive\":false},\"SCALE\":{\"rules\":[13,14,30,31],\"inclusive\":false},\"ALIAS\":{\"rules\":[],\"inclusive\":false},\"STATE_ID\":{\"rules\":[45],\"inclusive\":false},\"STATE_STRING\":{\"rules\":[46,47],\"inclusive\":false},\"FORK_STATE\":{\"rules\":[],\"inclusive\":false},\"STATE\":{\"rules\":[9,10,33,34,35,36,37,38,43,44,48,49,50],\"inclusive\":false},\"ID\":{\"rules\":[9,10],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,10,11,12,15,17,19,22,26,29,32,50,54,65,66,67,68,69,70,71,73,74,75],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})(); \n\tparser.parser = parser;\n\texport { parser };\n\texport default parser;\n\t", "/**\n * Constants common to all State Diagram code\n */\n\n// default diagram direction\nexport const DEFAULT_DIAGRAM_DIRECTION = 'LR';\n\n// default direction for any nested documents (composites)\nexport const DEFAULT_NESTED_DOC_DIR = 'TB';\n\n// parsed statement type for a state\nexport const STMT_STATE = 'state';\n// parsed statement type for a relation\nexport const STMT_RELATION = 'relation';\n// parsed statement type for a classDef\nexport const STMT_CLASSDEF = 'classDef';\n// parsed statement type for applyClass\nexport const STMT_APPLYCLASS = 'applyClass';\n\nexport const DEFAULT_STATE_TYPE = 'default';\nexport const DIVIDER_TYPE = 'divider';\n\nexport default {\n  DEFAULT_DIAGRAM_DIRECTION,\n  DEFAULT_NESTED_DOC_DIR,\n  STMT_STATE,\n  STMT_RELATION,\n  STMT_CLASSDEF,\n  STMT_APPLYCLASS,\n  DEFAULT_STATE_TYPE,\n  DIVIDER_TYPE,\n};\n", "import { log } from '../../logger.js';\nimport { generateId } from '../../utils.js';\nimport common from '../common/common.js';\nimport { getConfig } from '../../diagram-api/diagramAPI.js';\nimport {\n  setAccTitle,\n  getAccTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n  setDiagramTitle,\n  getDiagramTitle,\n} from '../common/commonDb.js';\n\nimport {\n  DEFAULT_DIAGRAM_DIRECTION,\n  STMT_STATE,\n  STMT_RELATION,\n  STMT_CLASSDEF,\n  STMT_APPLYCLASS,\n  DEFAULT_STATE_TYPE,\n  DIVIDER_TYPE,\n} from './stateCommon.js';\n\nconst START_NODE = '[*]';\nconst START_TYPE = 'start';\nconst END_NODE = START_NODE;\nconst END_TYPE = 'end';\n\nconst COLOR_KEYWORD = 'color';\nconst FILL_KEYWORD = 'fill';\nconst BG_FILL = 'bgFill';\nconst STYLECLASS_SEP = ',';\n\n/**\n * Returns a new list of classes.\n * In the future, this can be replaced with a class common to all diagrams.\n * ClassDef information = { id: id, styles: [], textStyles: [] }\n *\n * @returns {Map<string, any>}\n */\nfunction newClassesList() {\n  return new Map();\n}\n\nlet direction = DEFAULT_DIAGRAM_DIRECTION;\nlet rootDoc = [];\nlet classes = newClassesList(); // style classes defined by a classDef\n\nconst newDoc = () => {\n  return {\n    /** @type {{ id1: string, id2: string, relationTitle: string }[]} */\n    relations: [],\n    states: new Map(),\n    documents: {},\n  };\n};\nlet documents = {\n  root: newDoc(),\n};\n\nlet currentDocument = documents.root;\nlet startEndCount = 0;\nlet dividerCnt = 0;\n\nexport const lineType = {\n  LINE: 0,\n  DOTTED_LINE: 1,\n};\n\nexport const relationType = {\n  AGGREGATION: 0,\n  EXTENSION: 1,\n  COMPOSITION: 2,\n  DEPENDENCY: 3,\n};\n\nconst clone = (o) => JSON.parse(JSON.stringify(o));\n\nconst setRootDoc = (o) => {\n  log.info('Setting root doc', o);\n  // rootDoc = { id: 'root', doc: o };\n  rootDoc = o;\n};\n\nconst getRootDoc = () => rootDoc;\n\nconst docTranslator = (parent, node, first) => {\n  if (node.stmt === STMT_RELATION) {\n    docTranslator(parent, node.state1, true);\n    docTranslator(parent, node.state2, false);\n  } else {\n    if (node.stmt === STMT_STATE) {\n      if (node.id === '[*]') {\n        node.id = first ? parent.id + '_start' : parent.id + '_end';\n        node.start = first;\n      } else {\n        // This is just a plain state, not a start or end\n        node.id = node.id.trim();\n      }\n    }\n\n    if (node.doc) {\n      const doc = [];\n      // Check for concurrency\n      let currentDoc = [];\n      let i;\n      for (i = 0; i < node.doc.length; i++) {\n        if (node.doc[i].type === DIVIDER_TYPE) {\n          // debugger;\n          const newNode = clone(node.doc[i]);\n          newNode.doc = clone(currentDoc);\n          doc.push(newNode);\n          currentDoc = [];\n        } else {\n          currentDoc.push(node.doc[i]);\n        }\n      }\n\n      // If any divider was encountered\n      if (doc.length > 0 && currentDoc.length > 0) {\n        const newNode = {\n          stmt: STMT_STATE,\n          id: generateId(),\n          type: 'divider',\n          doc: clone(currentDoc),\n        };\n        doc.push(clone(newNode));\n        node.doc = doc;\n      }\n\n      node.doc.forEach((docNode) => docTranslator(node, docNode, true));\n    }\n  }\n};\nconst getRootDocV2 = () => {\n  docTranslator({ id: 'root' }, { id: 'root', doc: rootDoc }, true);\n  return { id: 'root', doc: rootDoc };\n  // Here\n};\n\n/**\n * Convert all of the statements (stmts) that were parsed into states and relationships.\n * This is done because a state diagram may have nested sections,\n * where each section is a 'document' and has its own set of statements.\n * Ex: the section within a fork has its own statements, and incoming and outgoing statements\n * refer to the fork as a whole (document).\n * See the parser grammar:  the definition of a document is a document then a 'line', where a line can be a statement.\n * This will push the statement into the list of statements for the current document.\n *\n * @param _doc\n */\nconst extract = (_doc) => {\n  // const res = { states: [], relations: [] };\n  let doc;\n  if (_doc.doc) {\n    doc = _doc.doc;\n  } else {\n    doc = _doc;\n  }\n  // let doc = root.doc;\n  // if (!doc) {\n  //   doc = root;\n  // }\n  log.info(doc);\n  clear(true);\n\n  log.info('Extract', doc);\n\n  doc.forEach((item) => {\n    switch (item.stmt) {\n      case STMT_STATE:\n        addState(\n          item.id.trim(),\n          item.type,\n          item.doc,\n          item.description,\n          item.note,\n          item.classes,\n          item.styles,\n          item.textStyles\n        );\n        break;\n      case STMT_RELATION:\n        addRelation(item.state1, item.state2, item.description);\n        break;\n      case STMT_CLASSDEF:\n        addStyleClass(item.id.trim(), item.classes);\n        break;\n      case STMT_APPLYCLASS:\n        setCssClass(item.id.trim(), item.styleClass);\n        break;\n    }\n  });\n};\n\n/**\n * Function called by parser when a node definition has been found.\n *\n * @param {null | string} id\n * @param {null | string} type\n * @param {null | string} doc\n * @param {null | string | string[]} descr - description for the state. Can be a string or a list or strings\n * @param {null | string} note\n * @param {null | string | string[]} classes - class styles to apply to this state. Can be a string (1 style) or an array of styles. If it's just 1 class, convert it to an array of that 1 class.\n * @param {null | string | string[]} styles - styles to apply to this state. Can be a string (1 style) or an array of styles. If it's just 1 style, convert it to an array of that 1 style.\n * @param {null | string | string[]} textStyles - text styles to apply to this state. Can be a string (1 text test) or an array of text styles. If it's just 1 text style, convert it to an array of that 1 text style.\n */\nexport const addState = function (\n  id,\n  type = DEFAULT_STATE_TYPE,\n  doc = null,\n  descr = null,\n  note = null,\n  classes = null,\n  styles = null,\n  textStyles = null\n) {\n  const trimmedId = id?.trim();\n  // add the state if needed\n  if (!currentDocument.states.has(trimmedId)) {\n    log.info('Adding state ', trimmedId, descr);\n    currentDocument.states.set(trimmedId, {\n      id: trimmedId,\n      descriptions: [],\n      type,\n      doc,\n      note,\n      classes: [],\n      styles: [],\n      textStyles: [],\n    });\n  } else {\n    if (!currentDocument.states.get(trimmedId).doc) {\n      currentDocument.states.get(trimmedId).doc = doc;\n    }\n    if (!currentDocument.states.get(trimmedId).type) {\n      currentDocument.states.get(trimmedId).type = type;\n    }\n  }\n\n  if (descr) {\n    log.info('Setting state description', trimmedId, descr);\n    if (typeof descr === 'string') {\n      addDescription(trimmedId, descr.trim());\n    }\n\n    if (typeof descr === 'object') {\n      descr.forEach((des) => addDescription(trimmedId, des.trim()));\n    }\n  }\n\n  if (note) {\n    const doc2 = currentDocument.states.get(trimmedId);\n    doc2.note = note;\n    doc2.note.text = common.sanitizeText(doc2.note.text, getConfig());\n  }\n\n  if (classes) {\n    log.info('Setting state classes', trimmedId, classes);\n    const classesList = typeof classes === 'string' ? [classes] : classes;\n    classesList.forEach((cssClass) => setCssClass(trimmedId, cssClass.trim()));\n  }\n\n  if (styles) {\n    log.info('Setting state styles', trimmedId, styles);\n    const stylesList = typeof styles === 'string' ? [styles] : styles;\n    stylesList.forEach((style) => setStyle(trimmedId, style.trim()));\n  }\n\n  if (textStyles) {\n    log.info('Setting state styles', trimmedId, styles);\n    const textStylesList = typeof textStyles === 'string' ? [textStyles] : textStyles;\n    textStylesList.forEach((textStyle) => setTextStyle(trimmedId, textStyle.trim()));\n  }\n};\n\nexport const clear = function (saveCommon) {\n  documents = {\n    root: newDoc(),\n  };\n  currentDocument = documents.root;\n\n  // number of start and end nodes; used to construct ids\n  startEndCount = 0;\n  classes = newClassesList();\n  if (!saveCommon) {\n    commonClear();\n  }\n};\n\nexport const getState = function (id) {\n  return currentDocument.states.get(id);\n};\n\nexport const getStates = function () {\n  return currentDocument.states;\n};\nexport const logDocuments = function () {\n  log.info('Documents = ', documents);\n};\nexport const getRelations = function () {\n  return currentDocument.relations;\n};\n\n/**\n * If the id is a start node ( [*] ), then return a new id constructed from\n * the start node name and the current start node count.\n * else return the given id\n *\n * @param {string} id\n * @returns {string} - the id (original or constructed)\n */\nfunction startIdIfNeeded(id = '') {\n  let fixedId = id;\n  if (id === START_NODE) {\n    startEndCount++;\n    fixedId = `${START_TYPE}${startEndCount}`;\n  }\n  return fixedId;\n}\n\n/**\n * If the id is a start node ( [*] ), then return the start type ('start')\n * else return the given type\n *\n * @param {string} id\n * @param {string} type\n * @returns {string} - the type that should be used\n */\nfunction startTypeIfNeeded(id = '', type = DEFAULT_STATE_TYPE) {\n  return id === START_NODE ? START_TYPE : type;\n}\n\n/**\n * If the id is an end node ( [*] ), then return a new id constructed from\n * the end node name and the current start_end node count.\n * else return the given id\n *\n * @param {string} id\n * @returns {string} - the id (original or constructed)\n */\nfunction endIdIfNeeded(id = '') {\n  let fixedId = id;\n  if (id === END_NODE) {\n    startEndCount++;\n    fixedId = `${END_TYPE}${startEndCount}`;\n  }\n  return fixedId;\n}\n\n/**\n * If the id is an end node ( [*] ), then return the end type\n * else return the given type\n *\n * @param {string} id\n * @param {string} type\n * @returns {string} - the type that should be used\n */\nfunction endTypeIfNeeded(id = '', type = DEFAULT_STATE_TYPE) {\n  return id === END_NODE ? END_TYPE : type;\n}\n\n/**\n *\n * @param item1\n * @param item2\n * @param relationTitle\n */\nexport function addRelationObjs(item1, item2, relationTitle) {\n  let id1 = startIdIfNeeded(item1.id.trim());\n  let type1 = startTypeIfNeeded(item1.id.trim(), item1.type);\n  let id2 = startIdIfNeeded(item2.id.trim());\n  let type2 = startTypeIfNeeded(item2.id.trim(), item2.type);\n\n  addState(\n    id1,\n    type1,\n    item1.doc,\n    item1.description,\n    item1.note,\n    item1.classes,\n    item1.styles,\n    item1.textStyles\n  );\n  addState(\n    id2,\n    type2,\n    item2.doc,\n    item2.description,\n    item2.note,\n    item2.classes,\n    item2.styles,\n    item2.textStyles\n  );\n\n  currentDocument.relations.push({\n    id1,\n    id2,\n    relationTitle: common.sanitizeText(relationTitle, getConfig()),\n  });\n}\n\n/**\n * Add a relation between two items.  The items may be full objects or just the string id of a state.\n *\n * @param {string | object} item1\n * @param {string | object} item2\n * @param {string} title\n */\nexport const addRelation = function (item1, item2, title) {\n  if (typeof item1 === 'object') {\n    addRelationObjs(item1, item2, title);\n  } else {\n    const id1 = startIdIfNeeded(item1.trim());\n    const type1 = startTypeIfNeeded(item1);\n    const id2 = endIdIfNeeded(item2.trim());\n    const type2 = endTypeIfNeeded(item2);\n\n    addState(id1, type1);\n    addState(id2, type2);\n    currentDocument.relations.push({\n      id1,\n      id2,\n      title: common.sanitizeText(title, getConfig()),\n    });\n  }\n};\n\nexport const addDescription = function (id, descr) {\n  const theState = currentDocument.states.get(id);\n  const _descr = descr.startsWith(':') ? descr.replace(':', '').trim() : descr;\n  theState.descriptions.push(common.sanitizeText(_descr, getConfig()));\n};\n\nexport const cleanupLabel = function (label) {\n  if (label.substring(0, 1) === ':') {\n    return label.substr(2).trim();\n  } else {\n    return label.trim();\n  }\n};\n\nconst getDividerId = () => {\n  dividerCnt++;\n  return 'divider-id-' + dividerCnt;\n};\n\n/**\n * Called when the parser comes across a (style) class definition\n * @example classDef my-style fill:#f96;\n *\n * @param {string} id - the id of this (style) class\n * @param  {string | null} styleAttributes - the string with 1 or more style attributes (each separated by a comma)\n */\nexport const addStyleClass = function (id, styleAttributes = '') {\n  // create a new style class object with this id\n  if (!classes.has(id)) {\n    classes.set(id, { id: id, styles: [], textStyles: [] }); // This is a classDef\n  }\n  const foundClass = classes.get(id);\n  if (styleAttributes !== undefined && styleAttributes !== null) {\n    styleAttributes.split(STYLECLASS_SEP).forEach((attrib) => {\n      // remove any trailing ;\n      const fixedAttrib = attrib.replace(/([^;]*);/, '$1').trim();\n\n      // replace some style keywords\n      if (attrib.match(COLOR_KEYWORD)) {\n        const newStyle1 = fixedAttrib.replace(FILL_KEYWORD, BG_FILL);\n        const newStyle2 = newStyle1.replace(COLOR_KEYWORD, FILL_KEYWORD);\n        foundClass.textStyles.push(newStyle2);\n      }\n      foundClass.styles.push(fixedAttrib);\n    });\n  }\n};\n\n/**\n * Return all of the style classes\n * @returns {{} | any | classes}\n */\nexport const getClasses = function () {\n  return classes;\n};\n\n/**\n * Add a (style) class or css class to a state with the given id.\n * If the state isn't already in the list of known states, add it.\n * Might be called by parser when a style class or CSS class should be applied to a state\n *\n * @param {string | string[]} itemIds The id or a list of ids of the item(s) to apply the css class to\n * @param {string} cssClassName CSS class name\n */\nexport const setCssClass = function (itemIds, cssClassName) {\n  itemIds.split(',').forEach(function (id) {\n    let foundState = getState(id);\n    if (foundState === undefined) {\n      const trimmedId = id.trim();\n      addState(trimmedId);\n      foundState = getState(trimmedId);\n    }\n    foundState.classes.push(cssClassName);\n  });\n};\n\n/**\n * Add a style to a state with the given id.\n * @example style stateId fill:#f9f,stroke:#333,stroke-width:4px\n *   where 'style' is the keyword\n *   stateId is the id of a state\n *   the rest of the string is the styleText (all of the attributes to be applied to the state)\n *\n * @param itemId The id of item to apply the style to\n * @param styleText - the text of the attributes for the style\n */\nexport const setStyle = function (itemId, styleText) {\n  const item = getState(itemId);\n  if (item !== undefined) {\n    item.textStyles.push(styleText);\n  }\n};\n\n/**\n * Add a text style to a state with the given id\n *\n * @param itemId The id of item to apply the css class to\n * @param cssClassName CSS class name\n */\nexport const setTextStyle = function (itemId, cssClassName) {\n  const item = getState(itemId);\n  if (item !== undefined) {\n    item.textStyles.push(cssClassName);\n  }\n};\n\nconst getDirection = () => direction;\nconst setDirection = (dir) => {\n  direction = dir;\n};\n\nconst trimColon = (str) => (str && str[0] === ':' ? str.substr(1).trim() : str.trim());\n\nexport default {\n  getConfig: () => getConfig().state,\n  addState,\n  clear,\n  getState,\n  getStates,\n  getRelations,\n  getClasses,\n  getDirection,\n  addRelation,\n  getDividerId,\n  setDirection,\n  cleanupLabel,\n  lineType,\n  relationType,\n  logDocuments,\n  getRootDoc,\n  setRootDoc,\n  getRootDocV2,\n  extract,\n  trimColon,\n  getAccTitle,\n  setAccTitle,\n  getAccDescription,\n  setAccDescription,\n  addStyleClass,\n  setCssClass,\n  addDescription,\n  setDiagramTitle,\n  getDiagramTitle,\n};\n", "const getStyles = (options) =>\n  `\ndefs #statediagram-barbEnd {\n    fill: ${options.transitionColor};\n    stroke: ${options.transitionColor};\n  }\ng.stateGroup text {\n  fill: ${options.nodeBorder};\n  stroke: none;\n  font-size: 10px;\n}\ng.stateGroup text {\n  fill: ${options.textColor};\n  stroke: none;\n  font-size: 10px;\n\n}\ng.stateGroup .state-title {\n  font-weight: bolder;\n  fill: ${options.stateLabelColor};\n}\n\ng.stateGroup rect {\n  fill: ${options.mainBkg};\n  stroke: ${options.nodeBorder};\n}\n\ng.stateGroup line {\n  stroke: ${options.lineColor};\n  stroke-width: 1;\n}\n\n.transition {\n  stroke: ${options.transitionColor};\n  stroke-width: 1;\n  fill: none;\n}\n\n.stateGroup .composit {\n  fill: ${options.background};\n  border-bottom: 1px\n}\n\n.stateGroup .alt-composit {\n  fill: #e0e0e0;\n  border-bottom: 1px\n}\n\n.state-note {\n  stroke: ${options.noteBorderColor};\n  fill: ${options.noteBkgColor};\n\n  text {\n    fill: ${options.noteTextColor};\n    stroke: none;\n    font-size: 10px;\n  }\n}\n\n.stateLabel .box {\n  stroke: none;\n  stroke-width: 0;\n  fill: ${options.mainBkg};\n  opacity: 0.5;\n}\n\n.edgeLabel .label rect {\n  fill: ${options.labelBackgroundColor};\n  opacity: 0.5;\n}\n.edgeLabel .label text {\n  fill: ${options.transitionLabelColor || options.tertiaryTextColor};\n}\n.label div .edgeLabel {\n  color: ${options.transitionLabelColor || options.tertiaryTextColor};\n}\n\n.stateLabel text {\n  fill: ${options.stateLabelColor};\n  font-size: 10px;\n  font-weight: bold;\n}\n\n.node circle.state-start {\n  fill: ${options.specialStateColor};\n  stroke: ${options.specialStateColor};\n}\n\n.node .fork-join {\n  fill: ${options.specialStateColor};\n  stroke: ${options.specialStateColor};\n}\n\n.node circle.state-end {\n  fill: ${options.innerEndBackground};\n  stroke: ${options.background};\n  stroke-width: 1.5\n}\n.end-state-inner {\n  fill: ${options.compositeBackground || options.background};\n  // stroke: ${options.background};\n  stroke-width: 1.5\n}\n\n.node rect {\n  fill: ${options.stateBkg || options.mainBkg};\n  stroke: ${options.stateBorder || options.nodeBorder};\n  stroke-width: 1px;\n}\n.node polygon {\n  fill: ${options.mainBkg};\n  stroke: ${options.stateBorder || options.nodeBorder};;\n  stroke-width: 1px;\n}\n#statediagram-barbEnd {\n  fill: ${options.lineColor};\n}\n\n.statediagram-cluster rect {\n  fill: ${options.compositeTitleBackground};\n  stroke: ${options.stateBorder || options.nodeBorder};\n  stroke-width: 1px;\n}\n\n.cluster-label, .nodeLabel {\n  color: ${options.stateLabelColor};\n}\n\n.statediagram-cluster rect.outer {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-state .divider {\n  stroke: ${options.stateBorder || options.nodeBorder};\n}\n\n.statediagram-state .title-state {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-cluster.statediagram-cluster .inner {\n  fill: ${options.compositeBackground || options.background};\n}\n.statediagram-cluster.statediagram-cluster-alt .inner {\n  fill: ${options.altBackground ? options.altBackground : '#efefef'};\n}\n\n.statediagram-cluster .inner {\n  rx:0;\n  ry:0;\n}\n\n.statediagram-state rect.basic {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-state rect.divider {\n  stroke-dasharray: 10,10;\n  fill: ${options.altBackground ? options.altBackground : '#efefef'};\n}\n\n.note-edge {\n  stroke-dasharray: 5;\n}\n\n.statediagram-note rect {\n  fill: ${options.noteBkgColor};\n  stroke: ${options.noteBorderColor};\n  stroke-width: 1px;\n  rx: 0;\n  ry: 0;\n}\n.statediagram-note rect {\n  fill: ${options.noteBkgColor};\n  stroke: ${options.noteBorderColor};\n  stroke-width: 1px;\n  rx: 0;\n  ry: 0;\n}\n\n.statediagram-note text {\n  fill: ${options.noteTextColor};\n}\n\n.statediagram-note .nodeLabel {\n  color: ${options.noteTextColor};\n}\n.statediagram .edgeLabel {\n  color: red; // ${options.noteTextColor};\n}\n\n#dependencyStart, #dependencyEnd {\n  fill: ${options.lineColor};\n  stroke: ${options.lineColor};\n  stroke-width: 1;\n}\n\n.statediagramTitleText {\n  text-anchor: middle;\n  font-size: 18px;\n  fill: ${options.textColor};\n}\n`;\n\n// todo: change composit to composite\n// cspell:ignore composit\n\nexport default getStyles;\n"],
  "mappings": "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AAE,EAAC,GAAE,CAAC,GAAE,CAAC,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,CAAC,GAAE,GAAE,KAAI,GAAE,KAAI,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAE,KAAI,CAAC,GAAE,CAAC,CAAC,GAAE,EAAC,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAE,KAAI,CAAC,GAAE,CAAC,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,CAAC,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,CAAC,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,EAAC,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,CAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,IAAG,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,CAAC,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,KAAI,EAAC,GAAE,GAAE,CAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,CAAC,GAAE,EAAC,GAAE,KAAI,GAAE,KAAI,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,CAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,KAAI,EAAC,GAAE,GAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,GAAE,KAAI,GAAE,KAAI,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,I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",
  "names": ["o", "parser", "lexer", "clear", "classes"]
}
