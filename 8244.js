"use strict";(self.webpackChunkonsenui_v2_react_minimum=self.webpackChunkonsenui_v2_react_minimum||[]).push([[8244],{803:(t,a,e)=>{function r(t,a){t.accDescr&&a.setAccDescription?.(t.accDescr),t.accTitle&&a.setAccTitle?.(t.accTitle),t.title&&a.setDiagramTitle?.(t.title)}e.d(a,{S:()=>r}),(0,e(6009).K2)(r,"populateCommonDb")},8244:(t,a,e)=>{e.d(a,{diagram:()=>H});var r=e(803),n=e(7501),l=(e(9955),e(1360),e(2235),e(962),e(6979),e(9731),e(389)),o=(e(1265),e(3615),e(57)),i=(e(5070),e(772)),d=(e(8605),e(6009)),s=[],c=[...s],p=i.UI.visual,g=(0,d.K2)((()=>(0,o.$t)({...p,...(0,i.zj)().visual})),"getConfig"),x={getPages:(0,d.K2)((()=>c),"getPages"),addPage:(0,d.K2)((t=>{c.push(t)}),"addPage"),getConfig:g,clear:(0,d.K2)((()=>{(0,i.IU)(),c=[...s]}),"clear"),setAccTitle:i.SV,getAccTitle:i.iN,setDiagramTitle:i.ke,getDiagramTitle:i.ab,getAccDescription:i.m7,setAccDescription:i.EI},m=(0,d.K2)((t=>{(0,r.S)(t,x);for(const a of t.pages){const t=a.subDiagrams.map((t=>{switch(t.diagramType){case"array":return{type:"array",orientation:t.orientation,title:t.title,showIndex:t.showIndex,label:t.label,elements:t.elements.map((t=>({value:t.value,color:t.color,arrow:void 0!==t.arrowLabel&&null!==t.arrowLabel,arrowLabel:t.arrowLabel})))};case"matrix":return{type:"matrix",title:t.title,rows:t.rows.map((t=>({elements:t.elements.map((t=>({value:t.value,color:t.color,arrow:void 0!==t.arrowLabel&&null!==t.arrowLabel,arrowLabel:t.arrowLabel})))}))),showIndex:t.showIndex,label:t.label};case"stack":return{type:"stack",orientation:t.orientation,title:t.title,showIndex:t.showIndex,label:t.label,size:t.size,elements:t.elements.map((t=>({value:t.value,color:t.color,arrow:void 0!==t.arrowLabel&&null!==t.arrowLabel,arrowLabel:t.arrowLabel})))};case"tree":return{type:"tree",title:t.title,label:t.label,elements:t.elements.map((t=>({nodeId:t.nodeId,left:"None"==t.left?void 0:t.left,right:"None"==t.right?void 0:t.right,value:t.value,color:t.color,arrow:void 0!==t.arrowLabel&&null!==t.arrowLabel,arrowLabel:t.arrowLabel})))};case"graph":return{type:"graph",title:t.title,label:t.label,elements:t.elements.map((t=>{if("NodeDefinition"==t.$type)return{type:"node",nodeId:t.nodeId,value:t.value,color:t.color,arrow:void 0!==t.arrowLabel&&null!==t.arrowLabel,arrowLabel:t.arrowLabel,hidden:"true"==(t.hidden||"").toLowerCase()};if("EdgeDefinition"==t.$type)return{type:"edge",start:t.start,end:t.end,value:t.value,color:t.color};throw new Error("Unknown graph element type")}))};case"linkedList":return{type:"linkedList",title:t.title,label:t.label,elements:t.elements.map((t=>({value:t.value,color:t.color,arrow:!!t.arrowLabel,arrowLabel:t.arrowLabel})))};case"text":return{type:"text",title:t.title,elements:t.elements.map((t=>t.value))};default:throw new Error(`Unknown diagram type: ${t.diagramType}`)}}));x.addPage({subDiagrams:t})}}),"populate"),f={parse:async t=>{const a=await(0,n.q)("visual",t);i.Rm.debug(a),m(a)}},u=(0,d.K2)(((t,a=.6)=>{if(h(t))return t||"null";const e={black:"#000000",white:"#FFFFFF",red:"#FF0000",green:"#008000",blue:"#0000FF",yellow:"#FFFF00",cyan:"#00FFFF",magenta:"#FF00FF",gray:"#808080",grey:"#808080",maroon:"#800000",olive:"#808000",purple:"#800080",teal:"#008080",navy:"#000080",orange:"#FFA500",pink:"#FFC0CB",brown:"#A52A2A",aqua:"#00FFFF",lime:"#00FF00",gold:"#FFD700",silver:"#C0C0C0",beige:"#F5F5DC",coral:"#FF7F50",chocolate:"#D2691E",crimson:"#DC143C",indigo:"#4B0082",khaki:"#F0E68C",lavender:"#E6E6FA",orchid:"#DA70D6",plum:"#DDA0DD",salmon:"#FA8072",sienna:"#A0522D",turquoise:"#40E0D0",violet:"#EE82EE",wheat:"#F5DEB3",azure:"#F0FFFF",ivory:"#FFFFF0",mintcream:"#F5FFFA",snow:"#FFFAFA",goldenrod:"#DAA520",tomato:"#FF6347",slateblue:"#6A5ACD",darkgreen:"#006400",darkblue:"#00008B",darkred:"#8B0000",darkorange:"#FF8C00",darkviolet:"#9400D3",darkkhaki:"#BDB76B",lightblue:"#ADD8E6",lightgreen:"#90EE90",lightcoral:"#F08080",lightgray:"#D3D3D3",lightgrey:"#D3D3D3"},r=t?t.toLowerCase():"";return r in e?b(e[r],a):"white"}),"getColor");function h(t){return!!t&&/^#([\dA-Fa-f]{3}){1,2}$/.test(t)}(0,d.K2)(h,"isValidHexColor");var b=(0,d.K2)(((t,a)=>(t=t.replace(/^#/,""),`rgba(${parseInt(t.slice(0,2),16)}, ${parseInt(t.slice(2,4),16)}, ${parseInt(t.slice(4,6),16)}, ${a})`)),"hexToRgba"),y=(0,d.K2)(((t,a,e,r,n)=>{t.append("defs").append("marker").attr("id","arrowhead").attr("viewBox","0 0 10 10").attr("refX","5").attr("refY","5").attr("markerWidth","6").attr("markerHeight","6").attr("orient","auto-start-reverse").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").attr("fill","black"),a.title&&t.append("text").attr("x",100).attr("y",20).attr("fill",r.labelColor).attr("font-size","16").attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","arrayDiagramTitle").text(a.title);const l=t.append("g").attr("class","component").attr("id",`component_${n}`).attr("transform",`translate(50, ${e+40})`);let o=0;if(a.elements.forEach(((t,e)=>{w(l,t,e,r,a.showIndex||!1,o),o+=1})),a.label){const t=160,e=100;l.append("text").attr("x",e).attr("y",t).attr("fill",r.labelColor).attr("font-size","16").attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","arrayDiagramLabel").text(a.label)}}),"drawArrayDiagram"),w=(0,d.K2)(((t,a,e,{labelColor:r,labelFontSize:n},l,o)=>{const i=t.append("g");i.attr("class","unit").attr("id",`unit_${o}`);const d=40*e,s=u(a.color);if(a.arrow&&"null"!==a.arrowLabel){const t=10,e=40;i.append("line").attr("x1",d+20).attr("y1",t).attr("x2",d+20).attr("y2",e).attr("stroke","black").attr("stroke-width","1.5").attr("marker-end","url(#arrowhead)"),a.arrowLabel&&"null"!==a.arrowLabel&&i.append("text").attr("x",d+20).attr("y",t-20).attr("fill",r).attr("font-size","16").attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","arrowContext").text(a.arrowLabel)}i.append("rect").attr("x",d).attr("y",50).attr("width",40).attr("height",40).style("fill",s).attr("stroke","#000000").attr("stroke-width","2px").attr("class","arrayElement"),i.append("text").attr("x",d+20).attr("y",70).attr("fill",r).attr("font-size","16").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","elementLabel").text(a.value),l&&i.append("text").attr("x",d+20).attr("y",110).attr("fill",r).attr("font-size","16").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","indexLabel").text(e)}),"drawElement"),k=(0,d.K2)(((t,a,e,r,n)=>{a.title;const l=t.append("g");l.attr("transform",`translate(0, ${e})`).attr("class","component").attr("id",`component_${n}`);const o=a.rows.length,i=Math.max(...a.rows.map((t=>t.elements.length)));if(a.title&&t.append("text").attr("x",50).attr("y",e).attr("fill",r.labelColor).attr("font-size",r.labelFontSize).attr("dominant-baseline","hanging").attr("text-anchor","start").attr("class","diagramTitle").text(a.title),a.rows.forEach(((t,a)=>{t.elements.forEach(((t,e)=>{v(l,t,a,e,r),F(l,a,e,r)}))})),a.label){const t=50*o+50,e=25*i;l.append("text").attr("x",e).attr("y",t).attr("fill",r.labelColor).attr("font-size",r.labelFontSize).attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","arrayDiagramLabel").text(a.label)}a.showIndex&&L(l,o,i,r)}),"drawMatrixDiagram"),v=(0,d.K2)(((t,a,e,r,{labelColor:n,labelFontSize:l})=>{const o=t.append("g");o.attr("class","unit").attr("id",`unit_(${e},${r})`);const i=50*r,d=50*e,s=u(a.color);o.append("rect").attr("x",i).attr("y",d).attr("width",50).attr("height",50).style("fill",s).attr("stroke","#000000").attr("stroke-width","1.2px").attr("class","matrixElement"),o.append("text").attr("x",i+25).attr("y",d+25).attr("fill",n).attr("font-size",l).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","elementLabel").text(a.value.toString()),a.arrow&&"null"!==a.arrowLabel&&(o.append("circle").attr("cx",i+25).attr("cy",d+25).attr("r",23).attr("stroke","red").attr("stroke-width","2").attr("fill","none"),o.append("text").attr("x",i+52).attr("y",d+25).attr("fill","red").attr("font-size",l).attr("dominant-baseline","middle").attr("text-anchor","start").attr("class","arrowLabel").text(a.arrowLabel||""))}),"drawElement"),L=(0,d.K2)(((t,a,e,{labelColor:r,labelFontSize:n})=>{const l=t.append("g");for(let t=0;t<a;t++)l.append("text").attr("x",-10).attr("y",50*t+25).attr("fill",r).attr("font-size",n).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","rowIndex").text(t.toString());for(let t=0;t<e;t++)l.append("text").attr("x",50*t+25).attr("y",-10).attr("fill",r).attr("font-size",n).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","colIndex").text(t.toString())}),"addIndices"),F=(0,d.K2)(((t,a,e,{borderColor:r,borderWidth:n})=>{const l=50*e,o=50*a;t.append("g").append("rect").attr("x",l).attr("y",o).attr("width",50).attr("height",50).attr("stroke",r).attr("stroke-width",n).attr("fill","none")}),"drawGrid"),D=(0,d.K2)(((t,a,e,r)=>{t.append("defs").append("marker").attr("id","arrowhead").attr("viewBox","0 0 10 10").attr("refX","5").attr("refY","5").attr("markerWidth","6").attr("markerHeight","6").attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").attr("fill","black");const n=t.append("g");n.attr("transform",`translate(0, ${e})`).attr("class","component").attr("id",`component_${r}`);const l=40*a.size;I(n,50,0,70,l);let o=0;if(a.elements.forEach(((t,e)=>{const r=a.size-a.elements.length+e;E(n,t,r,o),o+=1})),a.label){const t=l+40+20,e=85;n.append("text").attr("x",e).attr("y",t).attr("fill","black").attr("font-size","16").attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","stackDiagramLabel").text(a.label)}}),"drawStackDiagram"),E=(0,d.K2)(((t,a,e,r)=>{const n=t.append("g");n.attr("class","unit").attr("id",`unit_${r}`);const l=40*e,o=u(a.color);if(n.append("rect").attr("x",50).attr("y",l).attr("width",70).attr("height",40).style("fill",o).attr("stroke","black").attr("stroke-width","1").attr("class","stackElement"),a.arrow&&"null"!==a.arrowLabel){const t=130,e=t+40;n.append("line").attr("x1",e).attr("y1",l+20).attr("x2",t).attr("y2",l+20).attr("stroke","black").attr("stroke-width","1.5").attr("marker-end","url(#arrowhead)"),a.arrowLabel&&"null"!==a.arrowLabel&&n.append("text").attr("x",e+10).attr("y",l+20).attr("fill","black").attr("font-size","16").attr("dominant-baseline","middle").attr("text-anchor","start").attr("class","arrowContext").text(a.arrowLabel)}n.append("text").attr("x",85).attr("y",l+20).attr("fill","black").attr("font-size","16").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","elementLabel").text(a.value)}),"drawElement"),I=(0,d.K2)(((t,a,e,r,n)=>{const l="#000000";t.append("line").attr("x1",a).attr("y1",e).attr("x2",a).attr("y2",e+n).attr("stroke",l).attr("stroke-width",2),t.append("line").attr("x1",a+r).attr("y1",e).attr("x2",a+r).attr("y2",e+n).attr("stroke",l).attr("stroke-width",2),t.append("line").attr("x1",a).attr("y1",e+n).attr("x2",a+r).attr("y2",e+n).attr("stroke",l).attr("stroke-width",2)}),"drawFramework"),z=(0,d.K2)(((t,a,e,r)=>{const n=t.append("g");n.attr("transform",`translate(0, ${e})`).attr("class","component").attr("id",`component_${r}`),n.append("defs").append("marker").attr("id","arrowhead").attr("viewBox","0 0 10 10").attr("refX","5").attr("refY","5").attr("markerWidth","4").attr("markerHeight","5").attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").attr("fill","black");const l=a.elements.filter((t=>"node"==t.type)),o=new Set(l.filter((t=>t.hidden)).map((t=>t.nodeId))),i=l.filter((t=>!t.hidden)),d=a.elements.filter((t=>"edge"==t.type&&!o.has(t.start)&&!o.has(t.end))),s=B(l||[]);if(d&&d.forEach((t=>{K(n,t,s)})),i){let t=0;i.forEach((a=>{$(n,a,s[a.nodeId],t),t+=1}))}if(a.label){const t=i?100*Math.ceil(i.length/3)+70:100,e=150;n.append("text").attr("x",e).attr("y",t).attr("fill","black").attr("font-size","16").attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","graphDiagramLabel").text(a.label)}}),"drawGraphDiagram"),B=(0,d.K2)((t=>{const a={},e=2*Math.PI/t.length;return t.forEach(((t,r)=>{const n=r*e;a[t.nodeId]={x:150+100*Math.cos(n),y:150+100*Math.sin(n)}})),a}),"calculateNodePositions"),$=(0,d.K2)(((t,a,e,r)=>{if(a.hidden)return;const n=e.x,l=e.y,o=u(a.color),i=t.append("g");if(i.attr("class","unit").attr("id",`unit_${r}`),i.append("circle").attr("cx",n).attr("cy",l).attr("r",20).style("fill",o).attr("stroke","black").attr("stroke-width","1").attr("class","graphNode"),i.append("text").attr("x",n).attr("y",l).attr("dy",".35em").attr("fill","black").attr("font-size","16").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","nodeLabel").text(a.value||a.nodeId),a.arrow&&"null"!==a.arrowLabel){const t=n+45,e=n+25;i.append("line").attr("x1",t).attr("y1",l).attr("x2",e).attr("y2",l).attr("stroke","black").attr("stroke-width","2").attr("marker-end","url(#arrowhead)"),i.append("text").attr("x",t+5).attr("y",l).attr("fill","black").attr("font-size","14").attr("dominant-baseline","middle").attr("text-anchor","start").attr("class","arrowLabel").text(a.arrowLabel||"")}}),"drawNode"),K=(0,d.K2)(((t,a,e)=>{const r=e[a.start],n=e[a.end];if(r&&n){const{startX:e,startY:l,endX:o,endY:i}=P(r,n),d=a.color||"black";t.append("line").attr("x1",e||0).attr("y1",l||0).attr("x2",o||0).attr("y2",i||0).attr("stroke",d).attr("stroke-width","2"),a.value&&t.append("text").attr("x",(e+o)/2).attr("y",(l+i)/2).attr("fill","black").attr("font-size","16").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","edgeLabel").text(a.value)}}),"drawEdge"),P=(0,d.K2)(((t,a)=>{const e=a.x-t.x,r=a.y-t.y,n=Math.sqrt(e*e+r*r),l=20*e/n,o=20*r/n;return{startX:t.x+l,startY:t.y+o,endX:a.x-l,endY:a.y-o}}),"calculateEdgePosition"),C=(0,d.K2)(((t,a,e,r)=>{const n=t.append("g");n.attr("transform",`translate(0, ${e})`).attr("class","component").attr("id",`component_${r}`),n.append("defs").append("marker").attr("id","arrowhead").attr("viewBox","0 0 10 10").attr("refX","5").attr("refY","5").attr("markerWidth","4").attr("markerHeight","5").attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").attr("fill","black");const l=a.elements||[],o=_(l),i=A(l);if(o&&o.forEach((t=>{T(n,t,i)})),l){let t=0;l.forEach((a=>{M(n,a,i[a.nodeId],t),t+=1}))}if(a.label){const t=l?100*Math.ceil(l.length/3)+70:100,e=150;n.append("text").attr("x",e).attr("y",t).attr("fill","black").attr("font-size","16").attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","treeDiagramLabel").text(a.label)}}),"drawTreeDiagram"),A=(0,d.K2)((t=>{const a={},e=S(t),r=e>2?100:70,n=(0,d.K2)(((l,o,i)=>{const d=r-i*(r/e),s=o,c=0+100*i;a[l.nodeId]={x:s,y:c};const p=t.find((t=>t.nodeId===l.left)),g=t.find((t=>t.nodeId===l.right));p&&n(p,s-d,i+1),g&&n(g,s+d,i+1)}),"calculatePosition"),l=t.find((t=>!t.parentId));return l&&n(l,150,0),a}),"calculateNodePositions"),S=(0,d.K2)((t=>{const a=(0,d.K2)(((e,r)=>{const n=t.find((t=>t.nodeId===e.left)),l=t.find((t=>t.nodeId===e.right)),o=n?a(n,r+1):r,i=l?a(l,r+1):r;return Math.max(o,i)}),"findDepth"),e=t.find((t=>!t.parentId));return e?a(e,0):0}),"calculateMaxDepth"),_=(0,d.K2)((t=>{const a=[];return t.forEach((t=>{t.left&&a.push({start:t.nodeId,end:t.left}),t.right&&a.push({start:t.nodeId,end:t.right})})),a}),"calculateTreeEdges"),M=(0,d.K2)(((t,a,e,r)=>{const n=e.x,l=e.y,o=u(a.color),i=t.append("g");if(i.attr("class","unit").attr("id",`unit_${r}`),i.append("circle").attr("cx",n).attr("cy",l).attr("r",20).style("fill",o).attr("stroke","black").attr("stroke-width","1").attr("class","treeNode"),i.append("text").attr("x",n).attr("y",l).attr("dy",".35em").attr("fill","black").attr("font-size","16").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","nodeLabel").text(a.value||a.nodeId),a.arrow&&"null"!==a.arrowLabel){const t=n+45,e=n+25;i.append("line").attr("x1",t).attr("y1",l).attr("x2",e).attr("y2",l).attr("stroke","black").attr("stroke-width","2").attr("marker-end","url(#arrowhead)"),i.append("text").attr("x",t+5).attr("y",l).attr("fill","black").attr("font-size","16").attr("dominant-baseline","middle").attr("text-anchor","start").attr("class","arrowLabel").text(a.arrowLabel)}}),"drawNode"),T=(0,d.K2)(((t,a,e)=>{const r=e[a.start],n=e[a.end];if(r&&n){const{startX:e,startY:l,endX:o,endY:i}=q(r,n),d=a.color||"black";t.append("line").attr("x1",e).attr("y1",l).attr("x2",o).attr("y2",i).attr("stroke",d).attr("stroke-width","2"),a.value&&t.append("text").attr("x",(e+o)/2).attr("y",(l+i)/2).attr("fill","black").attr("font-size","16").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","edgeLabel").text(a.value)}}),"drawEdge"),q=(0,d.K2)(((t,a)=>{const e=a.x-t.x,r=a.y-t.y,n=Math.sqrt(e*e+r*r),l=20*e/n,o=20*r/n;return{startX:t.x+l,startY:t.y+o,endX:a.x-l,endY:a.y-o}}),"calculateEdgePosition"),N=(0,d.K2)(((t,a,e,r)=>{const n=t.append("g");n.attr("transform",`translate(0, ${e})`).attr("class","component").attr("id",`component_${r}`),n.append("defs").append("marker").attr("id","arrowhead_node").attr("viewBox","0 0 10 10").attr("refX","5").attr("refY","5").attr("markerWidth","5").attr("markerHeight","6").attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").attr("fill","black"),n.append("defs").append("marker").attr("id","arrowhead").attr("viewBox","0 0 10 10").attr("refX","5").attr("refY","5").attr("markerWidth","3").attr("markerHeight","5").attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").attr("fill","black");const l=a.elements,o=X(l||[]);let i=0;if(l&&l.forEach(((t,a)=>{Y(n,t,o[a],a<l.length-1,i),i+=1})),a.label){const t=100,e=150;n.append("text").attr("x",e).attr("y",t).attr("fill","black").attr("font-size","18").attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","linkedListDiagramLabel").text(a.label)}}),"drawLinkedListDiagram"),X=(0,d.K2)((t=>{const a=[];return t.forEach(((t,e)=>{a.push({x:50+120*e,y:50})})),a}),"calculateNodePositions"),Y=(0,d.K2)(((t,a,e,r,n)=>{const l=e.x,o=e.y,i=u(a.color),d=t.append("g");if(d.attr("class","unit").attr("id",`unit_${n}`),d.append("rect").attr("x",l).attr("y",o).attr("width",60).attr("height",30).style("fill",i).attr("stroke","black").attr("stroke-width","1").attr("class","linkedListNode"),d.append("text").attr("x",l+30).attr("y",o+15).attr("dy",".35em").attr("fill","black").attr("font-size","18").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","nodeLabel").text(a.value),a.arrow&&"null"!==a.arrowLabel){const t=o-30,e=o-10;d.append("line").attr("x1",l+30).attr("y1",t).attr("x2",l+30).attr("y2",e).attr("stroke","black").attr("stroke-width","2").attr("marker-end","url(#arrowhead)"),d.append("text").attr("x",l+30).attr("y",t-10).attr("fill","black").attr("font-size","16").attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","arrowLabel").text(a.arrowLabel||"")}r&&d.append("line").attr("x1",l+60).attr("y1",o+15).attr("x2",l+60+55).attr("y2",o+15).attr("stroke","black").attr("stroke-width","2").attr("marker-end","url(#arrowhead_node)")}),"drawNode"),W=(0,d.K2)(((t,a,e,r)=>{const n=t.append("g");n.attr("transform",`translate(0, ${e})`).attr("class","component").attr("id",`component_${r}`);let l=0,o=0;if(a.elements.forEach((t=>{l=G(n,t,l,o),o+=1})),a.label){const t=l+20,e=50;n.append("text").attr("x",e).attr("y",t).attr("fill","black").attr("font-size","16").attr("dominant-baseline","hanging").attr("text-anchor","middle").attr("class","textDiagramLabel").text(a.label)}}),"drawTextDiagram"),G=(0,d.K2)(((t,a,e,r)=>{const n=t.append("g").attr("class","unit").attr("id",`unit_${r}`),l=a.split("\n");return l.forEach(((t,a)=>{const r=e+20*a;n.append("text").attr("x",50).attr("y",r).attr("fill","black").attr("font-size","20").attr("dominant-baseline","hanging").attr("class","textElement").text(t)})),e+20*l.length}),"drawElement"),H={parser:f,db:x,renderer:{draw:(0,d.K2)(((t,a,e,r)=>{const n=r.db,o=n.getConfig(),s=n.getPages(),c=n.getDiagramTitle(),p=(0,l.D)(a);let g=0,x=null;const m=(0,d.K2)((t=>{p.selectAll("g.page").attr("display","none"),p.select(`#page${t}`).attr("display","inline"),p.select("#prevButton").attr("fill",t>0?"#007bff":"#c0c0c0"),p.select("#nextButton").attr("fill",t<s.length-1?"#007bff":"#c0c0c0"),p.select("#pageIndicator").text(`${t+1} / ${s.length}`)}),"renderPage"),f=(0,d.K2)(((t,a)=>{const e=t.append("g").attr("class","navigation-buttons"),r=e.append("g").attr("id","prevButtonGroup").attr("cursor","pointer");r.append("rect").attr("id","prevButton").attr("x",430).attr("y",740).attr("width",40).attr("height",20).attr("fill","#c0c0c0"),r.append("text").text("<").attr("x",450).attr("y",750).attr("fill","white").attr("text-anchor","middle").attr("alignment-baseline","middle");const n=e.append("g").attr("id","playButtonGroup").attr("cursor","pointer");n.append("rect").attr("id","playButton").attr("x",480).attr("y",740).attr("width",40).attr("height",20).attr("fill","#007bff"),n.append("text").text("▶").attr("x",500).attr("y",750).attr("fill","white").attr("text-anchor","middle").attr("alignment-baseline","middle");const l=e.append("g").attr("id","nextButtonGroup").attr("cursor","pointer");l.append("rect").attr("id","nextButton").attr("x",530).attr("y",740).attr("width",40).attr("height",20).attr("fill","#007bff"),l.append("text").text(">").attr("x",550).attr("y",750).attr("fill","white").attr("text-anchor","middle").attr("alignment-baseline","middle"),e.append("text").attr("id","pageIndicator").attr("x",950).attr("y",750).attr("fill","black").attr("text-anchor","middle").attr("alignment-baseline","middle").text(`1 / ${a}`),r.node()?.addEventListener("click",(()=>{g>0&&(g-=1,m(g))})),l.node()?.addEventListener("click",(()=>{g<a-1&&(g+=1,m(g))})),n.node()?.addEventListener("click",(()=>{x?(clearInterval(x),x=null,(0,i.df)("#playButton text").text("▶"),(0,i.df)("#playButton").attr("fill","#007bff")):(x=1e3,(0,i.df)("#playButton text").text("❚❚"),(0,i.df)("#playButton").attr("fill","#c0c0c0"))}))}),"addNavigationButtons"),u=(0,d.K2)(((t,a,e)=>{const r=t.append("g").attr("id",`page${e}`).attr("class","page").attr("display",0===e?"inline":"none");c&&r.append("text").text(c).attr("x",500).attr("y",25).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","pageTitle");let n=50,l=0;for(const t of a.subDiagrams)switch(t.type){case"array":y(r,t,n,o,l),l+=1,n+=250;break;case"matrix":k(r,t,n,o,l),l+=1,n+=250;break;case"stack":D(r,t,n,l),l+=1,n+=250;break;case"graph":z(r,t,n,l),l+=1,n+=250;break;case"tree":C(r,t,n,l),l+=1,n+=250;break;case"linkedList":N(r,t,n,l),l+=1,n+=250;break;case"text":W(r,t,n,l),l+=1,n+=250;break;default:throw new Error(`Unknown diagram type: ${t.type}`)}}),"drawPage");p.attr("viewBox","0 0 1000 800"),(0,i.a$)(p,800,1e3,o.useMaxWidth),s.forEach(((t,a)=>{u(p,t,a)})),f(p,s.length),m(g);const h=`\n    (function() {\n      const svg = document.getElementById('${a}');\n      let currentPage = 0;\n      const totalPages = ${s.length};\n      let playInterval = null;\n\n      function renderPage(pageIndex) {\n        const pages = svg.querySelectorAll('g.page');\n        pages.forEach(page => {\n          page.style.display = 'none';\n        });\n        svg.querySelector('#page' + pageIndex).style.display = 'inline';\n\n        const prevButton = svg.querySelector('#prevButton');\n        const nextButton = svg.querySelector('#nextButton');\n        \n        if (prevButton) prevButton.setAttribute('fill', pageIndex > 0 ? '#007bff' : '#c0c0c0');\n        if (nextButton) nextButton.setAttribute('fill', pageIndex < totalPages - 1 ? '#007bff' : '#c0c0c0');\n\n        // Update current page display\n        svg.querySelector('#pageIndicator').textContent = (pageIndex + 1) + ' / ' + totalPages;\n\n        // Notify React about the page change\n        window.currentPage = currentPage;\n        console.log("from mermaid currentPage: ", currentPage);\n      }\n\n      svg.querySelector('#prevButtonGroup').addEventListener('click', function() {\n        console.log("prevButton is pressed!");\n        if (currentPage > 0) {\n          currentPage -= 1;\n          renderPage(currentPage);\n        }\n      });\n\n      svg.querySelector('#nextButtonGroup').addEventListener('click', function() {\n        console.log("nextButton is pressed!");\n        if (currentPage < totalPages - 1) {\n          currentPage += 1;\n          renderPage(currentPage);\n        }\n      });\n\n      svg.querySelector('#playButtonGroup').addEventListener('click', function() {\n        if (playInterval) {\n          clearInterval(playInterval);\n          playInterval = null;\n          svg.querySelector('#playButton text').textContent = '▶';\n          svg.querySelector('#playButton').setAttribute('fill', '#007bff');\n        } else {\n          playInterval = setInterval(() => {\n            if (currentPage < totalPages - 1) {\n              currentPage += 1;\n            } else {\n              currentPage = 0;\n            }\n            renderPage(currentPage);\n          }, 1000);\n          svg.querySelector('#playButton text').textContent = '❚❚';\n          svg.querySelector('#playButton').setAttribute('fill', '#c0c0c0');\n        }\n      });\n\n      renderPage(currentPage);\n    })();\n  `;p.append("script").attr("type","text/javascript").text(h)}),"draw")},styles:(0,d.K2)(((t={})=>(i.Rm.debug({options:t}),`\n    .element {\n      font-size: ${t.array?.elementFontSize??"10px"};\n      fill: ${t.array?.valueColor??"black"};\n    }\n    .element.index {\n      fill: ${t.array?.indexColor??"black"};\n    }\n    .element {\n      stroke: ${t.array?.elementStrokeColor??"black"};\n      stroke-width: ${t.array?.elementStrokeWidth??"1"};\n      fill: ${t.array?.elementFillColor??"#efefef"};\n    }\n  `)),"styles")}}}]);